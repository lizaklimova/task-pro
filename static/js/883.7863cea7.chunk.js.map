{"version":3,"file":"static/js/883.7863cea7.chunk.js","mappings":"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","sources":["components/App/App.styled.jsx","components/Modals/CardModal/CardModal.styled.jsx","components/Modals/ColumnModal/ColumnModal.jsx","components/Calendar/Calendar.jsx","components/Modals/CardModal/CardModal.jsx","components/Icons/Status.jsx","components/Icons/Bell.jsx","components/Dashboard/TaskCard/TaskCard.styled.jsx","components/Dashboard/TaskCard/TaskCard.jsx","components/Dashboard/Column/Column.styled.jsx","components/Dashboard/Column/Column.jsx","components/Dashboard/Dashboard.styled.jsx","components/Dashboard/Dashboard.jsx","components/Dashboard/BoardHeader/BoardHeader.styled.jsx","components/Icons/Filter.jsx","components/Dashboard/BoardHeader/BoardHeader.jsx","pages/ScreensPage.jsx"],"sourcesContent":["import { styled } from 'styled-components';\n\nexport const MainContainer = styled.div`\n  height: calc(100vh - 60px);\n  width: calc(100vw - 12px);\n  padding: 14px 20px 24px 20px;\n\n  @media screen and (min-width: 768px) {\n    padding: 26px 32px 52px 32px;\n    height: calc(100vh - 68px);\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: calc(100vw - 260px - 12px);\n    padding: 10px 24px 36px 24px;\n  }\n`;\n","import { styled, css } from 'styled-components';\n\nconst inputsCommonStyles = css`\n  border: 1px solid var(--accent-color);\n  border-radius: 8px;\n  padding: 14px 18px;\n  color: var(--text-color);\n  background-color: transparent;\n  box-shadow: 0 4px 16px 0 rgba(22, 22, 22, 0.08);\n  opacity: 0.4;\n\n  &:focus {\n    opacity: 1;\n    outline: none;\n  }\n`;\n\nexport const CardModalContent = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  p {\n    font-weight: 500;\n    font-size: 18px;\n    margin-bottom: 24px;\n  }\n\n  .react-datepicker__input-container {\n    input[type='text'] {\n      border: none !important;\n      padding: 0px !important;\n      margin-bottom: 0;\n      opacity: 1;\n      color: var(--accent-color);\n      box-shadow: none;\n    }\n  }\n\n  .react-datepicker-wrapper {\n    margin-top: 4px;\n  }\n\n  .react-datepicker-popper {\n    left: 50% !important;\n    transform: translate(-50%, 20%) !important;\n  }\n\n  .react-datepicker * {\n    background-color: var(--background-color);\n    color: var(--text-color);\n    border-color: var(--accent-color);\n  }\n\n  .react-datepicker__navigation-icon::before {\n    border-color: var(--text-color);\n    transition: border-color var(--easedTransition);\n  }\n\n  .react-datepicker__navigation:hover\n    .react-datepicker__navigation-icon::before {\n    border-color: var(--accent-color);\n  }\n\n  .react-datepicker__day:hover:not(.react-datepicker__day--disabled) {\n    outline: 1px solid var(--text-color);\n    background-color: transparent;\n    border-radius: 50%;\n  }\n\n  .react-datepicker__day--selected {\n    background-color: var(--accent-color) !important;\n    color: var(--modal-background);\n    border-radius: 50%;\n  }\n\n  .react-datepicker__day--selected:hover {\n    outline: 1px solid var(--text-color);\n    background-color: var(--accent-color);\n    border-radius: 50%;\n  }\n\n  .react-datepicker__day--disabled {\n    cursor: not-allowed;\n  }\n`;\n\nexport const CardForm = styled.form`\n  display: flex;\n  flex-direction: column;\n\n  input[type='text'] {\n    ${inputsCommonStyles}\n    margin-bottom: 14px;\n  }\n\n  textarea {\n    ${inputsCommonStyles}\n    line-height: 1.29;\n    margin-bottom: 24px;\n    resize: none;\n  }\n\n  label {\n    font-size: 12px;\n    letter-spacing: -0.02em;\n    color: var(--lightgrey-text-color);\n    display: flex;\n    flex-direction: column;\n  }\n`;\n\nexport const LabelRadioList = styled.ul`\n  display: flex;\n  gap: 8px;\n  margin-top: 4px;\n\n  li {\n    position: relative;\n  }\n`;\n\nexport const RadioBtn = styled.input`\n  position: absolute;\n  cursor: pointer;\n  z-index: 3;\n  top: 0;\n  opacity: 0;\n\n  &:checked + label::before {\n    outline: ${({ $color }) => `1px solid var(--priority-${$color})`};\n    border: 2px solid var(--modal-background);\n  }\n`;\n\nexport const LabelRadioLabel = styled.label`\n  margin-bottom: 14px;\n\n  &::before {\n    content: '';\n    width: 14px;\n    height: 14px;\n    border-radius: 50%;\n    background-color: ${({ $color }) => `var(--priority-${$color})`};\n    cursor: pointer;\n    transition: outline 50ms linear;\n  }\n`;\n\nexport const CalendarContainer = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 3px;\n\n  button {\n    display: flex;\n    align-items: center;\n    padding: 0;\n    padding-top: 5px;\n    background-color: transparent;\n\n    svg {\n      fill: var(--accent-color);\n    }\n  }\n`;\n\nexport const SubmitBtn = styled.button`\n  font-weight: 500;\n  border-radius: 8px;\n  padding: 10px;\n  background-color: var(--accent-color);\n  color: var(--btn-icon-bg);\n  margin-top: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  transition: var(--easedTransition);\n\n  @media screen and (min-width: 1440px) {\n    &:hover,\n    &:focus {\n      opacity: 0.7;\n    }\n  }\n\n  span {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: 6px;\n    padding: 7px;\n    background-color: var(--btn-icon-bg);\n\n    svg path {\n      stroke: var(--btn-icon-color);\n    }\n  }\n`;\n","import { useTranslation } from 'react-i18next';\nimport ModalWrapper from 'components/Modals/ModalWrapper';\nimport Plus from 'components/Icons/Plus';\nimport {\n  CardForm,\n  CardModalContent,\n  SubmitBtn,\n} from '../CardModal/CardModal.styled';\n\nconst ColumnModal = ({ variant, closeModal }) => {\n  const { t } = useTranslation();\n\n  return (\n    <ModalWrapper width={350} onClose={closeModal}>\n      <CardModalContent>\n        <p>\n          {variant === 'add'\n            ? t('columns.modals.addTitle')\n            : t('columns.modals.editTitle')}\n        </p>\n\n        <CardForm>\n          <input\n            type=\"text\"\n            name=\"title\"\n            placeholder={t('columns.modals.input')}\n            defaultValue={variant === 'add' ? '' : ''}\n          />\n\n          <SubmitBtn type=\"submit\">\n            <span>\n              <Plus width={14} height={14} />\n            </span>\n            {variant === 'add'\n              ? t('columns.modals.addTitle')\n              : t('columns.modals.editTitle')}\n          </SubmitBtn>\n        </CardForm>\n      </CardModalContent>\n    </ModalWrapper>\n  );\n};\n\nexport default ColumnModal;\n","import React from 'react';\nimport DatePicker from 'react-datepicker';\nimport i18next from 'i18next';\nimport { registerLocale, setDefaultLocale } from 'react-datepicker';\nimport { uk } from 'date-fns/locale/uk';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nconst Calendar = React.forwardRef(\n  ({ selectedDate, setDate, toggleCalendar }, ref) => {\n    const minDate = new Date();\n    setDefaultLocale('en');\n    registerLocale('uk', uk);\n\n    return (\n      <DatePicker\n        ref={ref}\n        locale={\n          i18next.language === 'uk' || i18next.language === 'uk-UA'\n            ? 'uk'\n            : 'en'\n        }\n        selected={selectedDate}\n        onChange={date => setDate(date)}\n        minDate={minDate}\n        dateFormat=\"EEEE, d\"\n        onCalendarOpen={() => toggleCalendar(true)}\n        onCalendarClose={() => toggleCalendar(false)}\n      />\n    );\n  }\n);\n\nexport default Calendar;\n","import { useRef, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\n// import { addCard, editCard } from '../../../redux/cards/cardsOperations';\nimport { IoIosArrowDown, IoIosArrowUp } from 'react-icons/io';\nimport { LABEL_ARR } from 'constants';\nimport ModalWrapper from 'components/Modals/ModalWrapper';\nimport Calendar from 'components/Calendar';\nimport Plus from 'components/Icons/Plus';\nimport {\n  CardModalContent,\n  CardForm,\n  LabelRadioList,\n  RadioBtn,\n  LabelRadioLabel,\n  CalendarContainer,\n  SubmitBtn,\n} from './CardModal.styled';\n\nconst CardModal = ({ variant, closeCardModal }) => {\n  const [labelColor, setLabelColor] = useState('gray');\n  const [isCalendarOpen, setIsCalendarOpen] = useState(false);\n  const [selectedDate, setSelectedDay] = useState(new Date());\n\n  const { t } = useTranslation();\n  const datePickerRef = useRef(null);\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    const { title, description } = e.target.children;\n\n    const cardInfo = {\n      title: title.value,\n      description: description.value,\n      label: labelColor,\n      date: selectedDate.toDateString(),\n    };\n    console.log(cardInfo);\n  };\n\n  const openDatePicker = () => {\n    if (datePickerRef.current) {\n      datePickerRef.current.setOpen(true);\n    }\n  };\n\n  const closeDatePicker = () => {\n    if (datePickerRef.current) {\n      datePickerRef.current.setOpen(false);\n    }\n  };\n\n  return (\n    <ModalWrapper width={350} onClose={closeCardModal}>\n      <CardModalContent>\n        <p>\n          {variant === 'add'\n            ? t('cards.modals.addTitle')\n            : t('cards.modals.editTitle')}\n        </p>\n\n        <CardForm onSubmit={handleFormSubmit}>\n          <input\n            type=\"text\"\n            name=\"title\"\n            placeholder={t('cards.modals.title')}\n            defaultValue={variant === 'add' ? '' : ''}\n          />\n          <textarea\n            name=\"description\"\n            placeholder={t('cards.modals.description')}\n            defaultValue={variant === 'add' ? '' : ''}\n          ></textarea>\n\n          <label>\n            {t('cards.modals.label')}\n\n            <LabelRadioList>\n              {LABEL_ARR.map(({ id, color }) => {\n                return (\n                  <li key={id}>\n                    <RadioBtn\n                      $color={color}\n                      id=\"label\"\n                      type=\"radio\"\n                      name=\"label\"\n                      value={color}\n                      checked={labelColor === color}\n                      onChange={e => setLabelColor(e.target.value)}\n                    />\n                    <LabelRadioLabel htmlFor=\"label\" $color={color} />\n                  </li>\n                );\n              })}\n            </LabelRadioList>\n          </label>\n\n          <label>{t('cards.modals.deadline')}</label>\n\n          <CalendarContainer>\n            {isCalendarOpen ? (\n              <button type=\"button\" onClick={closeDatePicker}>\n                <IoIosArrowUp />\n              </button>\n            ) : (\n              <button type=\"button\" onClick={openDatePicker}>\n                <IoIosArrowDown />\n              </button>\n            )}\n\n            <Calendar\n              selectedDate={selectedDate}\n              setDate={setSelectedDay}\n              toggleCalendar={setIsCalendarOpen}\n              ref={datePickerRef}\n            />\n          </CalendarContainer>\n\n          <SubmitBtn type=\"submit\">\n            <span>\n              <Plus width={14} height={14} />\n            </span>\n            {variant === 'add'\n              ? t('cards.modals.addButton')\n              : t('cards.modals.editButton')}\n          </SubmitBtn>\n        </CardForm>\n      </CardModalContent>\n    </ModalWrapper>\n  );\n};\n\nexport default CardModal;\n","const Status = ({ width, height, fillColor, strokeColor }) => {\n  return (\n    <svg\n      width={width || '14px'}\n      height={height || '14px'}\n      viewBox=\"0 0 16 17\"\n      fill={fillColor || 'none'}\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M2.22559 5.16665C3.37828 3.17398 5.53276 1.83331 8.00037 1.83331C11.6823 1.83331 14.667 4.81808 14.667 8.49998C14.667 12.1819 11.6823 15.1666 8.00037 15.1666C5.53276 15.1666 3.37828 13.826 2.22559 11.8333\"\n        stroke={strokeColor || null}\n        strokeWidth=\"1.3\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        d=\"M8 11.1666L10.6667 8.49998L8 5.83331\"\n        stroke={strokeColor || null}\n        strokeWidth=\"1.3\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        d=\"M1.33301 8.5L10.6663 8.5\"\n        stroke={strokeColor || null}\n        strokeWidth=\"1.3\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </svg>\n  );\n};\n\nexport default Status;\n","const Bell = ({ width, height, fillColor, strokeColor }) => {\n  return (\n    <svg\n      width={width || '14px'}\n      height={height || '14px'}\n      viewBox=\"0 0 14 16\"\n      fill={fillColor || 'none'}\n      stroke={strokeColor || null}\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M5.23597 14C5.70606 14.4149 6.32355 14.6667 6.99985 14.6667C7.67615 14.6667 8.29365 14.4149 8.76373 14M10.9999 5.33337C10.9999 4.27251 10.5784 3.25509 9.82828 2.50495C9.07813 1.7548 8.06072 1.33337 6.99985 1.33337C5.93898 1.33337 4.92157 1.7548 4.17142 2.50495C3.42128 3.25509 2.99985 4.27251 2.99985 5.33337C2.99985 7.3935 2.48016 8.80401 1.89963 9.73698C1.40993 10.524 1.16509 10.9174 1.17407 11.0272C1.18401 11.1488 1.20976 11.1951 1.3077 11.2678C1.39616 11.3334 1.79491 11.3334 2.59242 11.3334H11.4073C12.2048 11.3334 12.6035 11.3334 12.692 11.2678C12.7899 11.1951 12.8157 11.1488 12.8256 11.0272C12.8346 10.9174 12.5898 10.524 12.1001 9.73698C11.5195 8.80401 10.9999 7.3935 10.9999 5.33337Z\"\n        strokeWidth=\"1.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </svg>\n  );\n};\n\nexport default Bell;\n","import { styled } from 'styled-components';\n\nexport const CardItem = styled.div`\n  width: 334px;\n  border-radius: 10px;\n  padding: 24px 14px;\n  background-color: var(--card-bg);\n  list-style-type: none;\n  border-left: 7px solid #8fa1d0;\n\n  & > div {\n    display: flex;\n    align-items: flex-ends;\n    justify-content: space-between;\n  }\n`;\n\nexport const CardTitle = styled.h4`\n  margin-bottom: 8px;\n  color: var(--text-color);\n`;\n\nexport const CardDescr = styled.p`\n  width: 290px;\n  font-size: 12px;\n  line-height: 1.33333;\n  color: var(--text-color);\n  opacity: 0.7;\n  margin-bottom: 14px;\n  cursor: pointer;\n`;\n\nexport const InfoWrap = styled.div`\n  display: flex;\n  gap: 14px;\n\n  div {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n  }\n\n  h5 {\n    font-weight: 400;\n    font-size: 8px;\n    color: var(--text-color);\n    opacity: 0.5;\n    margin-bottom: 4px;\n  }\n\n  span {\n    font-size: 10px;\n    color: var(--text-color);\n  }\n\n  p {\n    font-size: 10px;\n    color: var(--text-color);\n    display: flex;\n    gap: 4px;\n\n    &::before {\n      content: '';\n      display: block;\n      width: 12px;\n      height: 12px;\n      border-radius: 50%;\n      background-color: #8fa1d0;\n    }\n  }\n`;\n\nexport const BtnsList = styled.ul`\n  display: flex;\n  align-items: flex-end;\n`;\n\nexport const CardActionButton = styled.button`\n  background-color: transparent;\n\n  svg {\n    transition: filter var(--easedTransition);\n  }\n\n  svg path {\n    stroke: var(--icon-stroke-color);\n    opacity: 50%;\n    transition: stroke var(--easedTransition), opacity var(--easedTransition);\n  }\n\n  &:hover svg path {\n    stroke: var(--accent-color);\n    opacity: 100%;\n  }\n\n  &:hover svg {\n    filter: drop-shadow(1px 1px 5px var(--accent-color));\n  }\n`;\n","import { useState } from 'react';\nimport Status from 'components/Icons/Status';\nimport Pencil from 'components/Icons/Pencil';\nimport Trash from 'components/Icons/Trash';\nimport Bell from 'components/Icons/Bell';\nimport {\n  CardItem,\n  CardTitle,\n  CardDescr,\n  InfoWrap,\n  BtnsList,\n  CardActionButton,\n} from './TaskCard.styled';\n\nconst TaskCard = ({ card, openCardModal }) => {\n  const [showFullText, setShowFullText] = useState(false);\n  const text =\n    'Create a visually stunning and eye-catching watch dial design that embodies our brands essence of sleek aesthetics and modern elegance. Your design should be unique, innovative, and reflective of the latest trends in watch design.';\n\n  const handleClick = () => {\n    setShowFullText(!showFullText);\n  };\n\n  return (\n    <CardItem>\n      <CardTitle>The Watch Spot Design</CardTitle>\n      <CardDescr onClick={handleClick}>\n        {showFullText ? text : `${text.slice(0, 86)}...`}\n      </CardDescr>\n      <hr />\n\n      <div>\n        <InfoWrap>\n          <div>\n            <h5>Priority</h5>\n            <p>Low</p>\n          </div>\n\n          <div>\n            <h5>Deadline</h5>\n            <span>12/05/2023</span>\n          </div>\n        </InfoWrap>\n\n        <BtnsList>\n          <li>\n            <CardActionButton type=\"button\" aria-label=\"Deadline is today\">\n              <Bell\n                width={16}\n                height={16}\n                strokeColor={'var(--icon-stroke-color)'}\n              />\n            </CardActionButton>\n          </li>\n          <li>\n            <CardActionButton type=\"button\" aria-label=\"Move card\">\n              <Status\n                width={16}\n                height={16}\n                strokeColor={'var(--icon-stroke-color)'}\n              />\n            </CardActionButton>\n          </li>\n          <li>\n            <CardActionButton\n              type=\"button\"\n              aria-label=\"Edit card\"\n              onClick={openCardModal}\n            >\n              <Pencil\n                width={16}\n                height={16}\n                strokeColor={'var(--icon-stroke-color)'}\n              />\n            </CardActionButton>\n          </li>\n          <li>\n            <CardActionButton type=\"button\" aria-label=\"Delete card\">\n              <Trash\n                width={16}\n                height={16}\n                strokeColor={'var(--icon-stroke-color)'}\n              />\n            </CardActionButton>\n          </li>\n        </BtnsList>\n      </div>\n    </CardItem>\n  );\n};\n\nexport default TaskCard;\n","import styled from 'styled-components';\n\nexport const ColumnWrap = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n\n  @media screen and (min-width: 375px) {\n    width: 335px;\n  }\n`;\n\nexport const ColumnTitleWrap = styled.div`\n  width: 100%;\n  min-height: 56px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0 20px;\n  margin-bottom: 14px;\n  border-radius: 8px;\n  background-color: var(--card-bg);\n  font-weight: 500;\n\n  & h3 {\n    font-size: 14px;\n    font-weight: 500;\n  }\n`;\n\nexport const ButtonsList = styled.ul`\n  display: flex;\n`;\n\nexport const ColumnButton = styled.button`\n  background-color: transparent;\n  padding: 4px;\n\n  svg {\n    transition: filter var(--easedTransition);\n  }\n\n  svg path {\n    stroke: var(--icon-stroke-color);\n    opacity: 50%;\n    transition: stroke var(--easedTransition), opacity var(--easedTransition);\n  }\n\n  &:hover svg path {\n    stroke: var(--accent-color);\n    opacity: 100%;\n  }\n\n  &:hover svg {\n    filter: drop-shadow(1px 1px 5px var(--accent-color));\n  }\n`;\n\nexport const IconWrap = styled.span`\n  margin-right: 8px;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  width: 28px;\n  height: 28px;\n  border-radius: 6px;\n  background-color: var(--btn-icon-bg);\n  transition: all var(--easedTransition);\n\n  & svg {\n    stroke: var(--btn-icon-color);\n    transition: all var(--easedTransition);\n  }\n`;\n\nexport const AddButton = styled.button`\n  margin-top: auto;\n  min-width: 100%;\n  min-height: 56px;\n  border: none;\n  border-radius: 8px;\n  background-color: var(--accent-color);\n  color: var(--btn-icon-bg);\n  font-weight: 500;\n  transition: all var(--easedTransition);\n\n  &:hover {\n    background-color: var(--accent-btn-hover);\n  }\n`;\n\nexport const CardsList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  padding-right: 8px;\n  margin-bottom: 14px;\n  height: calc(100vh - 144px - 130px);\n  overflow-y: scroll;\n  scroll-behavior: smooth;\n\n  &::-webkit-scrollbar-thumb {\n    border-radius: 12px;\n  }\n\n  &::-webkit-scrollbar {\n    width: 8px;\n  }\n\n  &::-webkit-scrollbar-track {\n    border-radius: 12px;\n  }\n\n  @media screen and (min-width: 768px) {\n    max-height: calc(100vh - 150px - 166px);\n  }\n\n  @media screen and (min-width: 1440px) {\n    max-height: calc(100vh - 118px - 106px);\n  }\n`;\n","import { useState } from 'react';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { useTranslation } from 'react-i18next';\nimport Pencil from 'components/Icons/Pencil';\nimport Trash from 'components/Icons/Trash';\nimport ColumnModal from 'components/Modals/ColumnModal';\nimport CardModal from 'components/Modals/CardModal';\nimport Plus from 'components/Icons/Plus';\nimport { DeleteModal } from 'components/Modals/DeleteModal/DeleteModal';\nimport TaskCard from '../TaskCard';\nimport {\n  AddButton,\n  ButtonsList,\n  CardsList,\n  ColumnButton,\n  ColumnTitleWrap,\n  ColumnWrap,\n  IconWrap,\n} from './Column.styled';\n\nconst Column = ({ column }) => {\n  const [isColumnModalOpen, setIsColumnModalOpen] = useState(false);\n  const [isAddCardModalOpen, setIsAddCardModalOpen] = useState(false);\n  const [isEditCardModalOpen, setIsEditCardModalOpen] = useState(false);\n  const [isDeleteModalShown, setIsDeleteModalShown] = useState(false);\n\n  const { t } = useTranslation();\n\n  const handleBoardDelete = ({ target }) => {\n    if ((target.id = 'column-delete')) {\n      //видаляємо дошку\n    }\n  };\n\n  return (\n    <>\n      <ColumnWrap>\n        <ColumnTitleWrap>\n          <h3>{column.title}</h3>\n          <ButtonsList>\n            <li>\n              <ColumnButton\n                type=\"button\"\n                aria-label=\"Edit column title\"\n                onClick={() => setIsColumnModalOpen(true)}\n              >\n                <Pencil\n                  width={16}\n                  height={16}\n                  strokeColor={'var(--plus-icon-bg)'}\n                />\n              </ColumnButton>\n            </li>\n            <li>\n              <ColumnButton\n                id=\"column-delete\"\n                type=\"button\"\n                aria-label=\"Delete column\"\n                onClick={() => setIsDeleteModalShown(true)}\n              >\n                <Trash\n                  width={16}\n                  height={16}\n                  strokeColor={'var(--plus-icon-bg)'}\n                />\n              </ColumnButton>\n            </li>\n          </ButtonsList>\n        </ColumnTitleWrap>\n\n        <CardsList>\n          {column.cards.map(card => (\n            <li key={nanoid()}>\n              <TaskCard\n                card={card}\n                openCardModal={() => setIsEditCardModalOpen(true)}\n              />\n            </li>\n          ))}\n        </CardsList>\n\n        <AddButton type=\"button\" onClick={() => setIsAddCardModalOpen(true)}>\n          <IconWrap>\n            <Plus width={14} height={14} />\n          </IconWrap>\n          {t('cards.addButton')}\n        </AddButton>\n      </ColumnWrap>\n\n      {isColumnModalOpen && (\n        <ColumnModal\n          variant=\"edit\"\n          closeModal={() => setIsColumnModalOpen(false)}\n        />\n      )}\n      {isAddCardModalOpen && (\n        <CardModal\n          variant=\"add\"\n          closeCardModal={() => setIsAddCardModalOpen(false)}\n        />\n      )}\n      {isEditCardModalOpen && (\n        <CardModal\n          variant=\"edit\"\n          closeCardModal={() => setIsEditCardModalOpen(false)}\n        />\n      )}\n\n      {isDeleteModalShown && (\n        <DeleteModal\n          onClose={() => setIsDeleteModalShown(false)}\n          handleBoardDelete={handleBoardDelete}\n        />\n      )}\n    </>\n  );\n};\n\nexport default Column;\n","import styled from 'styled-components';\n\nexport const Wrap = styled.div`\n  display: flex;\n  height: 100%;\n  padding-top: 39px;\n  padding-bottom: 24px;\n\n  overflow-x: auto;\n  scroll-behavior: smooth;\n\n  &::-webkit-scrollbar-thumb {\n    border-radius: 12px;\n  }\n\n  &::-webkit-scrollbar {\n    height: 12px;\n  }\n\n  &::-webkit-scrollbar-track {\n    border-radius: 12px;\n  }\n\n  @media screen and (min-width: 768px) {\n    padding-top: 26px;\n    padding-bottom: 52px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding-top: 10px;\n    padding-bottom: 36px;\n  }\n`;\n\nexport const ColumnsList = styled.ul`\n  display: flex;\n  gap: 34px;\n  margin-right: 34px;\n`;\n\nexport const IconWrap = styled.span`\n  margin-right: 8px;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  width: 28px;\n  height: 28px;\n  border-radius: 6px;\n  background-color: var(--plus-icon-bg);\n  transition: all var(--easedTransition);\n\n  & svg {\n    stroke: var(--card-bg);\n    transition: all var(--easedTransition);\n  }\n`;\n\nexport const AddButton = styled.button`\n  min-width: 335px;\n  height: 56px;\n  border: none;\n  border-radius: 8px;\n  background-color: var(--card-bg);\n  color: inherit;\n  font-weight: 500;\n\n  transition: all var(--easedTransition);\n\n  &:hover {\n    background-color: var(--plus-btn-hover);\n\n    ${IconWrap} {\n      background-color: var(--card-bg);\n      & svg {\n        stroke: var(--plus-icon-bg);\n      }\n    }\n  }\n\n  /* @media screen and (min-width: 375px) {\n    width: 335px;\n  } */\n`;\n","import { useState } from 'react';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { useTranslation } from 'react-i18next';\nimport Plus from 'components/Icons/Plus';\nimport ColumnModal from 'components/Modals/ColumnModal';\nimport Column from './Column';\nimport { AddButton, ColumnsList, IconWrap, Wrap } from './Dashboard.styled';\n\nconst Dashboard = ({ board }) => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const { t } = useTranslation();\n\n  return (\n    <Wrap>\n      {board.columns.length > 0 && (\n        <ColumnsList>\n          {board.columns.map(column => (\n            <li key={nanoid()}>\n              <Column column={column} />\n            </li>\n          ))}\n        </ColumnsList>\n      )}\n      <AddButton type=\"button\" onClick={() => setIsModalOpen(true)}>\n        <IconWrap>\n          <Plus width={14} height={14} />\n        </IconWrap>\n        {t('columns.addButton')}\n      </AddButton>\n\n      {isModalOpen && (\n        <ColumnModal variant=\"add\" closeModal={() => setIsModalOpen(false)} />\n      )}\n    </Wrap>\n  );\n};\n\nexport default Dashboard;\n","import styled from 'styled-components';\n\nexport const HeaderWrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  & h2 {\n    font-weight: 500;\n    font-size: 14px;\n\n    @media screen and (min-width: 768px) {\n      font-size: 18px;\n    }\n  }\n`;\n\nexport const FilterButton = styled.button`\n  display: flex;\n  gap: 8px;\n  align-items: center;\n  background-color: transparent;\n  font-weight: 500;\n  font-size: 14px;\n  color: var(--text-color);\n  transition: all var(--easedTransition);\n\n  & svg {\n    stroke: var(--text-color);\n    fill: transparent;\n    transition: all var(--easedTransition);\n  }\n\n  &:hover {\n    color: var(--accent-btn-hover);\n    & svg {\n      stroke: var(--accent-btn-hover);\n    }\n  }\n`;\n","const Filter = ({ width, height, fillColor, strokeColor }) => {\n  return (\n    <svg\n      width={width || '14px'}\n      height={height || '14px'}\n      viewBox=\"0 0 16 16\"\n      fill={fillColor || 'none'}\n      stroke={strokeColor || null}\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M14.6668 2H1.3335L6.66683 8.30667V12.6667L9.3335 14V8.30667L14.6668 2Z\"\n        strokeWidth=\"1.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </svg>\n  );\n};\n\nexport default Filter;\n","import { useTranslation } from 'react-i18next';\nimport { FilterButton, HeaderWrap } from './BoardHeader.styled';\n\nimport Filter from 'components/Icons/Filter';\n\nconst BoardHeader = ({ title }) => {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <HeaderWrap>\n        <h2>{title}</h2>\n        <FilterButton type=\"button\">\n          <Filter width={14} height={14} />\n          {t('boards.filterButton')}\n        </FilterButton>\n      </HeaderWrap>\n    </>\n  );\n};\n\nexport default BoardHeader;\n","import { MainContainer } from 'components/App/App.styled';\nimport Dashboard from 'components/Dashboard';\nimport BoardHeader from 'components/Dashboard/BoardHeader';\n// import { useDispatch } from 'react-redux';\n// import { useParams } from 'react-router-dom';\n\nconst ScreensPage = () => {\n  //when Denis creates it:\n  // const { boardId } = useParams();\n  // const dispatch = useDispatch();\n  // const board = useSelector(selectBoard);\n  // const error = useSelector(selectError);\n\n  // useEffect(() => {\n  //   dispatch(fetchBoard(boardId));\n  // }, [dispatch]);\n\n  const board = {\n    name: 'Not empty',\n    columns: [\n      {\n        title: 'TO DO',\n        cards: [\n          {\n            title: 'Calculate KAM teams plan',\n          },\n          {\n            title: 'Calculate KAM clients plan',\n          },\n          {\n            title: 'Calculate LR teams plan',\n          },\n          {\n            title: 'Prepare file for LR clients calculation',\n          },\n          {\n            title: 'Prepare file for LR clients calculation',\n          },\n          {\n            title: 'Prepare file for LR clients calculation',\n          },\n          {\n            title: 'Prepare file for LR clients calculation',\n          },\n        ],\n      },\n      {\n        title: 'Important',\n        cards: [\n          {\n            title: 'Eat something',\n          },\n        ],\n      },\n      {\n        title: 'Bla',\n        cards: [\n          {\n            title: 'Eat something',\n          },\n        ],\n      },\n      {\n        title: 'Bla',\n        cards: [\n          {\n            title: 'Eat something',\n          },\n        ],\n      },\n    ],\n  };\n\n  // const board = {\n  //   name: 'Empty',\n  //   columns: [],\n  // };\n\n  return (\n    <MainContainer>\n      <BoardHeader title={board.name} />\n      <Dashboard board={board} />\n    </MainContainer>\n  );\n};\n\nexport default ScreensPage;\n"],"names":["MainContainer","styled","_templateObject","_taggedTemplateLiteral","inputsCommonStyles","css","CardModalContent","_templateObject2","CardForm","_templateObject3","LabelRadioList","_templateObject4","RadioBtn","_templateObject5","_ref","$color","concat","LabelRadioLabel","_templateObject6","_ref2","CalendarContainer","_templateObject7","SubmitBtn","_templateObject8","variant","closeModal","t","useTranslation","_jsx","ModalWrapper","width","onClose","children","_jsxs","type","name","placeholder","defaultValue","Plus","height","React","ref","selectedDate","setDate","toggleCalendar","minDate","Date","setDefaultLocale","registerLocale","uk","DatePicker","locale","i18next","selected","onChange","date","dateFormat","onCalendarOpen","onCalendarClose","closeCardModal","_useState","useState","_useState2","_slicedToArray","labelColor","setLabelColor","_useState3","_useState4","isCalendarOpen","setIsCalendarOpen","_useState5","_useState6","setSelectedDay","datePickerRef","useRef","onSubmit","e","preventDefault","_e$target$children","target","title","description","cardInfo","value","label","toDateString","console","log","LABEL_ARR","id","color","checked","htmlFor","onClick","current","setOpen","IoIosArrowUp","IoIosArrowDown","Calendar","fillColor","strokeColor","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","CardItem","CardTitle","CardDescr","InfoWrap","BtnsList","CardActionButton","card","openCardModal","showFullText","setShowFullText","text","slice","Bell","Status","Pencil","Trash","ColumnWrap","ColumnTitleWrap","ButtonsList","ColumnButton","IconWrap","AddButton","CardsList","column","isColumnModalOpen","setIsColumnModalOpen","isAddCardModalOpen","setIsAddCardModalOpen","isEditCardModalOpen","setIsEditCardModalOpen","_useState7","_useState8","isDeleteModalShown","setIsDeleteModalShown","_Fragment","cards","map","TaskCard","nanoid","ColumnModal","CardModal","DeleteModal","handleBoardDelete","Wrap","ColumnsList","board","isModalOpen","setIsModalOpen","columns","length","Column","HeaderWrap","FilterButton","Filter","BoardHeader","Dashboard"],"sourceRoot":""}