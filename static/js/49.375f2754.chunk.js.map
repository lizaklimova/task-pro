{"version":3,"file":"static/js/49.375f2754.chunk.js","mappings":"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","sources":["components/App/App.styled.jsx","components/Modals/CardModal/CardModal.styled.jsx","components/Modals/ColumnModal/ColumnModal.jsx","helpers/formatDate.js","helpers/makeValidDate.js","components/Calendar/Calendar.jsx","components/Modals/CardModal/CardModal.jsx","components/Icons/Status.jsx","components/Icons/Bell.jsx","components/Dashboard/TaskCard/TaskCard.styled.jsx","components/Dashboard/TaskCard/TaskCard.jsx","components/Dashboard/Column/Column.styled.jsx","components/Dashboard/Column/Column.jsx","components/Dashboard/Dashboard.styled.jsx","components/Dashboard/Dashboard.jsx","components/Dashboard/BoardHeader/BoardHeader.styled.jsx","components/Icons/Filter.jsx","components/Dashboard/Filters/Filters.styled.jsx","components/Dashboard/Filters/Filters.jsx","components/Dashboard/BoardHeader/BoardHeader.jsx","pages/ScreensPage.jsx"],"sourcesContent":["import { styled } from 'styled-components';\n\nexport const MainContainer = styled.div`\n  height: calc(100vh - 60px);\n  width: calc(100vw - 12px);\n  padding: 14px 20px 24px 20px;\n\n  @media screen and (min-width: 768px) {\n    padding: 26px 32px 52px 32px;\n    height: calc(100vh - 68px);\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: calc(100vw - 260px - 12px);\n    padding: 10px 24px 36px 24px;\n  }\n`;\n","import { styled, css } from 'styled-components';\n\nconst inputsCommonStyles = css`\n  border: 1px solid var(--accent-color);\n  border-radius: 8px;\n  padding: 14px 18px;\n  color: var(--text-color);\n  background-color: transparent;\n  box-shadow: 0 4px 16px 0 rgba(22, 22, 22, 0.08);\n  opacity: 0.4;\n  transition: opacity var(--easedTransition);\n\n  &:focus {\n    opacity: 1;\n    outline: none;\n  }\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const CardModalContent = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  p {\n    font-weight: 500;\n    font-size: 18px;\n    margin-bottom: 24px;\n  }\n\n  .react-datepicker__input-container {\n    input[type='text'] {\n      border: none !important;\n      padding: 0px !important;\n      margin-bottom: 0;\n      opacity: 1;\n      color: var(--accent-color);\n      box-shadow: none;\n    }\n  }\n\n  .react-datepicker-wrapper {\n    margin-top: 4px;\n  }\n\n  .react-datepicker-popper {\n    left: 50% !important;\n    transform: translate(-50%, 20%) !important;\n  }\n\n  .react-datepicker * {\n    background-color: var(--background-color);\n    color: var(--text-color);\n    border-color: var(--accent-color);\n  }\n\n  .react-datepicker__navigation-icon::before {\n    border-color: var(--text-color);\n    transition: border-color var(--easedTransition);\n  }\n\n  .react-datepicker__navigation:hover\n    .react-datepicker__navigation-icon::before {\n    border-color: var(--accent-color);\n  }\n\n  .react-datepicker__day:hover:not(.react-datepicker__day--disabled) {\n    outline: 1px solid var(--text-color);\n    background-color: transparent;\n    border-radius: 50%;\n  }\n\n  .react-datepicker__day--selected {\n    background-color: var(--accent-color) !important;\n    color: var(--modal-background);\n    border-radius: 50%;\n  }\n\n  .react-datepicker__day--selected:hover {\n    outline: 1px solid var(--text-color);\n    background-color: var(--accent-color);\n    border-radius: 50%;\n  }\n\n  .react-datepicker__day--disabled {\n    cursor: not-allowed;\n  }\n`;\n\nexport const CardForm = styled.form`\n  display: flex;\n  flex-direction: column;\n\n  input[type='text'] {\n    ${inputsCommonStyles}\n    margin-bottom: 14px;\n  }\n\n  textarea {\n    ${inputsCommonStyles}\n    line-height: 1.29;\n    margin-bottom: 24px;\n    resize: none;\n  }\n\n  label {\n    font-size: 12px;\n    letter-spacing: -0.02em;\n    color: var(--lightgrey-text-color);\n    display: flex;\n    flex-direction: column;\n  }\n`;\n\nexport const LabelRadioList = styled.ul`\n  display: flex;\n  gap: 8px;\n  margin-top: 4px;\n\n  li {\n    position: relative;\n  }\n`;\n\nexport const RadioBtn = styled.input`\n  position: absolute;\n  cursor: pointer;\n  z-index: 3;\n  top: 0;\n  opacity: 0;\n\n  &:checked + label::before {\n    outline: ${({ $color }) => `1px solid var(--priority-${$color})`};\n    border: 2px solid var(--modal-background);\n  }\n`;\n\nexport const LabelRadioLabel = styled.label`\n  margin-bottom: 14px;\n\n  &::before {\n    content: '';\n    width: 14px;\n    height: 14px;\n    border-radius: 50%;\n    background-color: ${({ $color }) => `var(--priority-${$color})`};\n    cursor: pointer;\n    transition: outline 50ms linear;\n  }\n`;\n\nexport const CalendarContainer = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 3px;\n\n  button {\n    display: flex;\n    align-items: center;\n    padding: 0;\n    padding-top: 5px;\n    background-color: transparent;\n\n    svg {\n      fill: var(--accent-color);\n    }\n  }\n`;\n\nexport const SubmitBtn = styled.button`\n  font-weight: 500;\n  border-radius: 8px;\n  padding: 10px;\n  background-color: var(--accent-color);\n  color: var(--btn-icon-bg);\n  margin-top: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  transition: var(--easedTransition);\n\n  @media screen and (min-width: 1440px) {\n    &:hover,\n    &:focus {\n      opacity: 0.7;\n    }\n  }\n\n  span {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: 6px;\n    padding: 7px;\n    background-color: var(--btn-icon-bg);\n\n    svg path {\n      stroke: var(--btn-icon-color);\n    }\n  }\n`;\n","import { useTranslation } from 'react-i18next';\nimport ModalWrapper from 'components/Modals/ModalWrapper';\nimport Plus from 'components/Icons/Plus';\nimport {\n  CardForm,\n  CardModalContent,\n  SubmitBtn,\n} from '../CardModal/CardModal.styled';\n\nconst ColumnModal = ({ variant, closeModal }) => {\n  const { t } = useTranslation();\n\n  return (\n    <ModalWrapper width={350} onClose={closeModal}>\n      <CardModalContent>\n        <p>\n          {variant === 'add'\n            ? t('columns.modals.addTitle')\n            : t('columns.modals.editTitle')}\n        </p>\n\n        <CardForm>\n          <input\n            type=\"text\"\n            name=\"title\"\n            placeholder={t('columns.modals.input')}\n            defaultValue={variant === 'add' ? '' : ''}\n          />\n\n          <SubmitBtn type=\"submit\">\n            <span>\n              <Plus width={14} height={14} />\n            </span>\n            {variant === 'add'\n              ? t('columns.modals.addTitle')\n              : t('columns.modals.editTitle')}\n          </SubmitBtn>\n        </CardForm>\n      </CardModalContent>\n    </ModalWrapper>\n  );\n};\n\nexport default ColumnModal;\n","const formatDate = date => {\n  let day = date.getDate();\n  let month = date.getMonth() + 1;\n  const year = date.getFullYear();\n\n  if (month < 10 || day < 10) {\n    month = String(month).padStart(2, '0');\n    day = String(day).padStart(2, '0');\n  }\n\n  return `${day}/${month}/${year}`;\n};\n\nexport default formatDate;\n","import formatDate from './formatDate';\n\nconst makeValidDate = date => {\n  return new Date(formatDate(date).split('/').reverse().join('/'));\n};\n\nexport default makeValidDate;\n","import React from 'react';\nimport i18next from 'i18next';\nimport ReactDatePicker, {\n  registerLocale,\n  setDefaultLocale,\n} from 'react-datepicker';\nimport { uk } from 'date-fns/locale/uk';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nconst Calendar = React.forwardRef(\n  ({ selectedDate, setDate, toggleCalendar }, ref) => {\n    const minDate = new Date();\n    setDefaultLocale('en');\n    registerLocale('uk', uk);\n\n    return (\n      <ReactDatePicker\n        ref={ref}\n        locale={\n          i18next.language === 'uk' || i18next.language === 'uk-UA'\n            ? 'uk'\n            : 'en'\n        }\n        selected={selectedDate}\n        onChange={date => setDate(date)}\n        minDate={minDate}\n        dateFormat=\"EEEE, d\"\n        onCalendarOpen={() => toggleCalendar(true)}\n        onCalendarClose={() => toggleCalendar(false)}\n      />\n    );\n  }\n);\n\nexport default Calendar;\n","import { useRef, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport toast from 'react-hot-toast';\n// import { addCard, editCard } from '../../../redux/cards/cardsOperations';\nimport { IoIosArrowDown, IoIosArrowUp } from 'react-icons/io';\nimport { LABEL_ARR, TOASTER_CONFIG } from 'constants';\nimport { makeValidDate } from 'helpers';\nimport ModalWrapper from 'components/Modals/ModalWrapper';\nimport Calendar from 'components/Calendar';\nimport Plus from 'components/Icons/Plus';\nimport {\n  CardModalContent,\n  CardForm,\n  LabelRadioList,\n  RadioBtn,\n  LabelRadioLabel,\n  CalendarContainer,\n  SubmitBtn,\n} from './CardModal.styled';\n\nconst CardModal = ({ variant, closeCardModal }) => {\n  const [labelColor, setLabelColor] = useState('gray');\n  const [isCalendarOpen, setIsCalendarOpen] = useState(false);\n  const [selectedDate, setSelectedDay] = useState(new Date());\n\n  const { t } = useTranslation();\n\n  const datePickerRef = useRef(null);\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    const { title, description } = e.target.children;\n\n    if (!title.value.trim() || !description.value.trim()) {\n      return toast(t('cards.modals.toast.error'), TOASTER_CONFIG);\n    }\n\n    const dateForServer = makeValidDate(selectedDate);\n\n    const cardInfo = {\n      title: title.value,\n      description: description.value,\n      label: labelColor,\n      date: dateForServer,\n    };\n\n    console.log(cardInfo);\n    toast(t('cards.modals.toast.success'), TOASTER_CONFIG);\n    closeCardModal();\n  };\n\n  const openDatePicker = () => {\n    if (datePickerRef.current) {\n      datePickerRef.current.setOpen(true);\n    }\n  };\n\n  const closeDatePicker = () => {\n    if (datePickerRef.current) {\n      datePickerRef.current.setOpen(false);\n    }\n  };\n\n  return (\n    <ModalWrapper width={350} onClose={closeCardModal}>\n      <CardModalContent>\n        <p>\n          {variant === 'add'\n            ? t('cards.modals.addTitle')\n            : t('cards.modals.editTitle')}\n        </p>\n\n        <CardForm onSubmit={handleFormSubmit}>\n          <input\n            type=\"text\"\n            name=\"title\"\n            placeholder={t('cards.modals.title')}\n            defaultValue={variant === 'add' ? '' : ''}\n            autoComplete=\"off\"\n          />\n          <textarea\n            name=\"description\"\n            placeholder={t('cards.modals.description')}\n            defaultValue={variant === 'add' ? '' : ''}\n            autoComplete=\"off\"\n          ></textarea>\n\n          <label>\n            {t('cards.modals.label')}\n\n            <LabelRadioList>\n              {LABEL_ARR.map(({ id, color }) => {\n                return (\n                  <li key={id}>\n                    <RadioBtn\n                      $color={color}\n                      id=\"label\"\n                      type=\"radio\"\n                      name=\"label\"\n                      value={color}\n                      checked={labelColor === color}\n                      onChange={e => setLabelColor(e.target.value)}\n                    />\n                    <LabelRadioLabel htmlFor=\"label\" $color={color} />\n                  </li>\n                );\n              })}\n            </LabelRadioList>\n          </label>\n\n          <label>{t('cards.modals.deadline')}</label>\n\n          <CalendarContainer>\n            {isCalendarOpen ? (\n              <button type=\"button\" onClick={closeDatePicker}>\n                <IoIosArrowUp />\n              </button>\n            ) : (\n              <button type=\"button\" onClick={openDatePicker}>\n                <IoIosArrowDown />\n              </button>\n            )}\n\n            <Calendar\n              selectedDate={selectedDate}\n              setDate={setSelectedDay}\n              toggleCalendar={setIsCalendarOpen}\n              ref={datePickerRef}\n            />\n          </CalendarContainer>\n\n          <SubmitBtn type=\"submit\">\n            <span>\n              <Plus width={14} height={14} />\n            </span>\n            {variant === 'add'\n              ? t('cards.modals.addButton')\n              : t('cards.modals.editButton')}\n          </SubmitBtn>\n        </CardForm>\n      </CardModalContent>\n    </ModalWrapper>\n  );\n};\n\nexport default CardModal;\n","const Status = ({ width, height, fillColor, strokeColor }) => {\n  return (\n    <svg\n      width={width || '14px'}\n      height={height || '14px'}\n      viewBox=\"0 0 16 17\"\n      fill={fillColor || 'none'}\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M2.22559 5.16665C3.37828 3.17398 5.53276 1.83331 8.00037 1.83331C11.6823 1.83331 14.667 4.81808 14.667 8.49998C14.667 12.1819 11.6823 15.1666 8.00037 15.1666C5.53276 15.1666 3.37828 13.826 2.22559 11.8333\"\n        stroke={strokeColor || null}\n        strokeWidth=\"1.3\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        d=\"M8 11.1666L10.6667 8.49998L8 5.83331\"\n        stroke={strokeColor || null}\n        strokeWidth=\"1.3\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        d=\"M1.33301 8.5L10.6663 8.5\"\n        stroke={strokeColor || null}\n        strokeWidth=\"1.3\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </svg>\n  );\n};\n\nexport default Status;\n","const Bell = ({ width, height, fillColor, strokeColor }) => {\n  return (\n    <svg\n      width={width || '14px'}\n      height={height || '14px'}\n      viewBox=\"0 0 14 16\"\n      fill={fillColor || 'none'}\n      stroke={strokeColor || null}\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M5.23597 14C5.70606 14.4149 6.32355 14.6667 6.99985 14.6667C7.67615 14.6667 8.29365 14.4149 8.76373 14M10.9999 5.33337C10.9999 4.27251 10.5784 3.25509 9.82828 2.50495C9.07813 1.7548 8.06072 1.33337 6.99985 1.33337C5.93898 1.33337 4.92157 1.7548 4.17142 2.50495C3.42128 3.25509 2.99985 4.27251 2.99985 5.33337C2.99985 7.3935 2.48016 8.80401 1.89963 9.73698C1.40993 10.524 1.16509 10.9174 1.17407 11.0272C1.18401 11.1488 1.20976 11.1951 1.3077 11.2678C1.39616 11.3334 1.79491 11.3334 2.59242 11.3334H11.4073C12.2048 11.3334 12.6035 11.3334 12.692 11.2678C12.7899 11.1951 12.8157 11.1488 12.8256 11.0272C12.8346 10.9174 12.5898 10.524 12.1001 9.73698C11.5195 8.80401 10.9999 7.3935 10.9999 5.33337Z\"\n        strokeWidth=\"1.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </svg>\n  );\n};\n\nexport default Bell;\n","import { styled } from 'styled-components';\n\nexport const CardItem = styled.div`\n  width: 334px;\n  border-radius: 10px;\n  padding: 24px 14px;\n  background-color: var(--card-bg);\n  list-style-type: none;\n  border-left: 7px solid #8fa1d0;\n\n  & > div {\n    display: flex;\n    align-items: flex-ends;\n    justify-content: space-between;\n  }\n`;\n\nexport const CardTitle = styled.h4`\n  margin-bottom: 8px;\n  color: var(--text-color);\n`;\n\nexport const CardDescr = styled.p`\n  width: 290px;\n  font-size: 12px;\n  line-height: 1.33333;\n  color: var(--text-color);\n  opacity: 0.7;\n  margin-bottom: 14px;\n  cursor: pointer;\n`;\n\nexport const InfoWrap = styled.div`\n  display: flex;\n  gap: 14px;\n\n  div {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n  }\n\n  h5 {\n    font-weight: 400;\n    font-size: 8px;\n    color: var(--text-color);\n    opacity: 0.5;\n    margin-bottom: 4px;\n  }\n\n  span {\n    font-size: 10px;\n    color: var(--text-color);\n  }\n\n  p {\n    font-size: 10px;\n    color: var(--text-color);\n    display: flex;\n    gap: 4px;\n\n    &::before {\n      content: '';\n      display: block;\n      width: 12px;\n      height: 12px;\n      border-radius: 50%;\n      background-color: #8fa1d0;\n    }\n  }\n`;\n\nexport const BtnsList = styled.ul`\n  display: flex;\n  align-items: flex-end;\n`;\n\nexport const CardActionButton = styled.button`\n  background-color: transparent;\n\n  svg {\n    transition: filter var(--easedTransition);\n  }\n\n  svg path {\n    stroke: var(--icon-stroke-color);\n    opacity: 50%;\n    transition: stroke var(--easedTransition), opacity var(--easedTransition);\n  }\n\n  &:hover svg path {\n    stroke: var(--accent-color);\n    opacity: 100%;\n  }\n\n  &:hover svg {\n    filter: drop-shadow(1px 1px 5px var(--accent-color));\n  }\n`;\n","import { useState } from 'react';\nimport { formatDate } from 'helpers';\nimport Status from 'components/Icons/Status';\nimport Pencil from 'components/Icons/Pencil';\nimport Trash from 'components/Icons/Trash';\nimport Bell from 'components/Icons/Bell';\nimport {\n  CardItem,\n  CardTitle,\n  CardDescr,\n  InfoWrap,\n  BtnsList,\n  CardActionButton,\n} from './TaskCard.styled';\n\nconst TaskCard = ({ card, openCardModal }) => {\n  const [showFullText, setShowFullText] = useState(false);\n  const text =\n    'Create a visually stunning and eye-catching watch dial design that embodies our brands essence of sleek aesthetics and modern elegance. Your design should be unique, innovative, and reflective of the latest trends in watch design.';\n\n  const handleClick = () => {\n    setShowFullText(!showFullText);\n  };\n\n  return (\n    <CardItem>\n      <CardTitle>The Watch Spot Design</CardTitle>\n      <CardDescr onClick={handleClick}>\n        {showFullText ? text : `${text.slice(0, 86)}...`}\n      </CardDescr>\n      <hr />\n\n      <div>\n        <InfoWrap>\n          <div>\n            <h5>Priority</h5>\n            <p>Low</p>\n          </div>\n\n          <div>\n            <h5>Deadline</h5>\n            <span>{formatDate(new Date())}</span>\n          </div>\n        </InfoWrap>\n\n        <BtnsList>\n          <li>\n            <CardActionButton type=\"button\" aria-label=\"Deadline is today\">\n              <Bell\n                width={16}\n                height={16}\n                strokeColor={'var(--icon-stroke-color)'}\n              />\n            </CardActionButton>\n          </li>\n          <li>\n            <CardActionButton type=\"button\" aria-label=\"Move card\">\n              <Status\n                width={16}\n                height={16}\n                strokeColor={'var(--icon-stroke-color)'}\n              />\n            </CardActionButton>\n          </li>\n          <li>\n            <CardActionButton\n              type=\"button\"\n              aria-label=\"Edit card\"\n              onClick={openCardModal}\n            >\n              <Pencil\n                width={16}\n                height={16}\n                strokeColor={'var(--icon-stroke-color)'}\n              />\n            </CardActionButton>\n          </li>\n          <li>\n            <CardActionButton type=\"button\" aria-label=\"Delete card\">\n              <Trash\n                width={16}\n                height={16}\n                strokeColor={'var(--icon-stroke-color)'}\n              />\n            </CardActionButton>\n          </li>\n        </BtnsList>\n      </div>\n    </CardItem>\n  );\n};\n\nexport default TaskCard;\n","import styled from 'styled-components';\n\nexport const ColumnWrap = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n\n  @media screen and (min-width: 375px) {\n    width: 335px;\n  }\n`;\n\nexport const ColumnTitleWrap = styled.div`\n  width: 100%;\n  min-height: 56px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0 20px;\n  margin-bottom: 14px;\n  border-radius: 8px;\n  background-color: var(--card-bg);\n  font-weight: 500;\n\n  & h3 {\n    font-size: 14px;\n    font-weight: 500;\n  }\n`;\n\nexport const ButtonsList = styled.ul`\n  display: flex;\n`;\n\nexport const ColumnButton = styled.button`\n  background-color: transparent;\n  padding: 4px;\n\n  svg {\n    transition: filter var(--easedTransition);\n  }\n\n  svg path {\n    stroke: var(--icon-stroke-color);\n    opacity: 50%;\n    transition: stroke var(--easedTransition), opacity var(--easedTransition);\n  }\n\n  &:hover svg path {\n    stroke: var(--accent-color);\n    opacity: 100%;\n  }\n\n  &:hover svg {\n    filter: drop-shadow(1px 1px 5px var(--accent-color));\n  }\n`;\n\nexport const IconWrap = styled.span`\n  margin-right: 8px;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  width: 28px;\n  height: 28px;\n  border-radius: 6px;\n  background-color: var(--btn-icon-bg);\n  transition: all var(--easedTransition);\n\n  & svg {\n    stroke: var(--btn-icon-color);\n    transition: all var(--easedTransition);\n  }\n`;\n\nexport const AddButton = styled.button`\n  margin-top: auto;\n  min-width: 100%;\n  min-height: 56px;\n  border: none;\n  border-radius: 8px;\n  background-color: var(--accent-color);\n  color: var(--btn-icon-bg);\n  font-weight: 500;\n  transition: all var(--easedTransition);\n\n  &:hover {\n    background-color: var(--accent-btn-hover);\n  }\n`;\n\nexport const CardsList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  padding-right: 8px;\n  margin-bottom: 14px;\n  height: calc(100vh - 144px - 130px);\n  overflow-y: scroll;\n  scroll-behavior: smooth;\n\n  &::-webkit-scrollbar-thumb {\n    border-radius: 12px;\n  }\n\n  &::-webkit-scrollbar {\n    width: 8px;\n  }\n\n  &::-webkit-scrollbar-track {\n    border-radius: 12px;\n  }\n\n  @media screen and (min-width: 768px) {\n    max-height: calc(100vh - 150px - 166px);\n  }\n\n  @media screen and (min-width: 1440px) {\n    max-height: calc(100vh - 118px - 106px);\n  }\n`;\n","import { useState } from 'react';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { useTranslation } from 'react-i18next';\nimport Pencil from 'components/Icons/Pencil';\nimport Trash from 'components/Icons/Trash';\nimport ColumnModal from 'components/Modals/ColumnModal';\nimport CardModal from 'components/Modals/CardModal';\nimport Plus from 'components/Icons/Plus';\nimport DeleteModal from 'components/Modals/DeleteModal/DeleteModal';\nimport TaskCard from '../TaskCard';\nimport {\n  AddButton,\n  ButtonsList,\n  CardsList,\n  ColumnButton,\n  ColumnTitleWrap,\n  ColumnWrap,\n  IconWrap,\n} from './Column.styled';\n\nconst Column = ({ column }) => {\n  const [isColumnModalOpen, setIsColumnModalOpen] = useState(false);\n  const [isAddCardModalOpen, setIsAddCardModalOpen] = useState(false);\n  const [isEditCardModalOpen, setIsEditCardModalOpen] = useState(false);\n  const [isDeleteModalShown, setIsDeleteModalShown] = useState(false);\n\n  const { t } = useTranslation();\n\n  const handleBoardDelete = ({ target }) => {\n    if ((target.id = 'column-delete')) {\n      //видаляємо дошку\n    }\n  };\n\n  return (\n    <>\n      <ColumnWrap>\n        <ColumnTitleWrap>\n          <h3>{column.title}</h3>\n          <ButtonsList>\n            <li>\n              <ColumnButton\n                type=\"button\"\n                aria-label=\"Edit column title\"\n                onClick={() => setIsColumnModalOpen(true)}\n              >\n                <Pencil\n                  width={16}\n                  height={16}\n                  strokeColor={'var(--plus-icon-bg)'}\n                />\n              </ColumnButton>\n            </li>\n            <li>\n              <ColumnButton\n                id=\"column-delete\"\n                type=\"button\"\n                aria-label=\"Delete column\"\n                onClick={() => setIsDeleteModalShown(true)}\n              >\n                <Trash\n                  width={16}\n                  height={16}\n                  strokeColor={'var(--plus-icon-bg)'}\n                />\n              </ColumnButton>\n            </li>\n          </ButtonsList>\n        </ColumnTitleWrap>\n\n        <CardsList>\n          {column.cards.map(card => (\n            <li key={nanoid()}>\n              <TaskCard\n                card={card}\n                openCardModal={() => setIsEditCardModalOpen(true)}\n              />\n            </li>\n          ))}\n        </CardsList>\n\n        <AddButton type=\"button\" onClick={() => setIsAddCardModalOpen(true)}>\n          <IconWrap>\n            <Plus width={14} height={14} />\n          </IconWrap>\n          {t('cards.addButton')}\n        </AddButton>\n      </ColumnWrap>\n\n      {isColumnModalOpen && (\n        <ColumnModal\n          variant=\"edit\"\n          closeModal={() => setIsColumnModalOpen(false)}\n        />\n      )}\n      {isAddCardModalOpen && (\n        <CardModal\n          variant=\"add\"\n          closeCardModal={() => setIsAddCardModalOpen(false)}\n        />\n      )}\n      {isEditCardModalOpen && (\n        <CardModal\n          variant=\"edit\"\n          closeCardModal={() => setIsEditCardModalOpen(false)}\n        />\n      )}\n\n      {isDeleteModalShown && (\n        <DeleteModal\n          onClose={() => setIsDeleteModalShown(false)}\n          handleBoardDelete={handleBoardDelete}\n        />\n      )}\n    </>\n  );\n};\n\nexport default Column;\n","import styled from 'styled-components';\n\nexport const Wrap = styled.div`\n  display: flex;\n  height: 100%;\n  padding-top: 39px;\n  padding-bottom: 24px;\n\n  overflow-x: auto;\n  scroll-behavior: smooth;\n\n  &::-webkit-scrollbar-thumb {\n    border-radius: 12px;\n  }\n\n  &::-webkit-scrollbar {\n    height: 12px;\n  }\n\n  &::-webkit-scrollbar-track {\n    border-radius: 12px;\n  }\n\n  @media screen and (min-width: 768px) {\n    padding-top: 26px;\n    padding-bottom: 52px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding-top: 10px;\n    padding-bottom: 36px;\n  }\n`;\n\nexport const ColumnsList = styled.ul`\n  display: flex;\n  gap: 34px;\n  margin-right: 34px;\n`;\n\nexport const IconWrap = styled.span`\n  margin-right: 8px;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  width: 28px;\n  height: 28px;\n  border-radius: 6px;\n  background-color: var(--plus-icon-bg);\n  transition: all var(--easedTransition);\n\n  & svg {\n    stroke: var(--card-bg);\n    transition: all var(--easedTransition);\n  }\n`;\n\nexport const AddButton = styled.button`\n  min-width: 335px;\n  height: 56px;\n  border: none;\n  border-radius: 8px;\n  background-color: var(--card-bg);\n  color: inherit;\n  font-weight: 500;\n  transition: all var(--easedTransition);\n\n  &:hover {\n    background-color: var(--plus-btn-hover);\n\n    ${IconWrap} {\n      background-color: var(--card-bg);\n      & svg {\n        stroke: var(--plus-icon-bg);\n      }\n    }\n  }\n\n  /* @media screen and (min-width: 375px) {\n    width: 335px;\n  } */\n`;\n","import { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Plus from 'components/Icons/Plus';\nimport ColumnModal from 'components/Modals/ColumnModal';\nimport Column from './Column';\nimport { AddButton, ColumnsList, IconWrap, Wrap } from './Dashboard.styled';\n\nconst Dashboard = ({ board }) => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const { t } = useTranslation();\n\n  return (\n    <Wrap>\n      {Object.keys(board).length > 0 && (\n        <ColumnsList>\n          {board.columns.map(column => (\n            <li key={column._id}>\n              <Column column={column} />\n            </li>\n          ))}\n        </ColumnsList>\n      )}\n      <AddButton type=\"button\" onClick={() => setIsModalOpen(true)}>\n        <IconWrap>\n          <Plus width={14} height={14} />\n        </IconWrap>\n        {t('columns.addButton')}\n      </AddButton>\n\n      {isModalOpen && (\n        <ColumnModal variant=\"add\" closeModal={() => setIsModalOpen(false)} />\n      )}\n    </Wrap>\n  );\n};\n\nexport default Dashboard;\n","import styled from 'styled-components';\n\nexport const HeaderWrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  & h2 {\n    font-weight: 500;\n    font-size: 14px;\n\n    @media screen and (min-width: 768px) {\n      font-size: 18px;\n    }\n  }\n`;\n\nexport const FilterButton = styled.button`\n  display: flex;\n  gap: 8px;\n  align-items: center;\n  background-color: transparent;\n  font-weight: 500;\n  font-size: 14px;\n  color: var(--text-color);\n  transition: all var(--easedTransition);\n\n  & svg {\n    stroke: var(--text-color);\n    fill: transparent;\n    transition: all var(--easedTransition);\n  }\n\n  &:hover {\n    color: var(--accent-btn-hover);\n    & svg {\n      stroke: var(--accent-btn-hover);\n    }\n  }\n`;\n","const Filter = ({ width, height, fillColor, strokeColor }) => {\n  return (\n    <svg\n      width={width || '14px'}\n      height={height || '14px'}\n      viewBox=\"0 0 16 16\"\n      fill={fillColor || 'none'}\n      stroke={strokeColor || null}\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M14.6668 2H1.3335L6.66683 8.30667V12.6667L9.3335 14V8.30667L14.6668 2Z\"\n        strokeWidth=\"1.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </svg>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const TitleContainer = styled.div`\n  justify-content: space-between;\n  margin-bottom: 14px;\n`;\n\nexport const Title = styled.h2`\n  font-size: 18px;\n  font-weight: 500;\n  line-height: normal;\n`;\n\nexport const ClearFilterBox = styled.div`\n  display: flex;\n  border-top: 1px solid;\n  border-color: var(--text-color);\n  margin-bottom: 14px;\n  padding-top: 14px;\n`;\n\nexport const ClearTitle = styled.h3`\n  display: flex;\n  flex-shrink: 0;\n  margin-right: auto;\n  font-weight: 500;\n  line-height: normal;\n`;\n\nexport const ClearButton = styled.button`\n  color: var(--text-color);\n  font-size: 12px;\n  line-height: normal;\n  letter-spacing: -0.24px;\n  background-color: inherit;\n  text-decoration-line: underline;\n`;\n\nexport const RadioButtonBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  color: var(--lightgrey-text-color);\n`;\n\nexport const RadioButton = styled.input`\n  position: absolute;\n  z-index: 999;\n  cursor: pointer;\n  top: 4px;\n  left: 0;\n  appearance: none;\n  border-radius: 50%;\n  margin: 0;\n  width: 14px;\n  height: 14px;\n\n  &:checked.blue {\n    border: 1px solid var(--priority-blue);\n  }\n\n  &:checked.red {\n    border: 1px solid var(--priority-pink);\n  }\n\n  &:checked.green {\n    border: 1px solid var(--priority-green);\n  }\n\n  &:checked.gray {\n    border: 1px solid var(--text-color);\n  }\n`;\n\nexport const StyledMarker = styled.span`\n  content: '';\n  display: block;\n  width: 14px;\n  height: 14px;\n  border-radius: 50%;\n\n  &.blue {\n    background-color: var(--priority-blue);\n  }\n\n  &.red {\n    background-color: var(--priority-pink);\n  }\n\n  &.green {\n    background-color: var(--priority-green);\n  }\n\n  &.gray {\n    background-color: var(--text-color);\n  }\n`;\n\nexport const PriorityFilterLabel = styled.label`\n  cursor: pointer;\n  position: relative;\n  display: inline-flex;\n  gap: 8px;\n  justify-content: center;\n  align-items: center;\n  color: var(--text-color);\n\n  font-family: 'Poppins';\n\n  &:not(:last-child) {\n    margin-bottom: 12px;\n  }\n  font-size: 14px;\n\n  &:hover {\n    opacity: 0.7;\n  }\n\n  input[type='radio']:checked + ${StyledMarker} {\n    scale: 0.5;\n  }\n`;\n","import { useTranslation } from 'react-i18next';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { filterBoard } from '../../../redux/board/boardOperations';\nimport ModalWrapper from 'components/Modals/ModalWrapper/ModalWrapper';\nimport {\n  TitleContainer,\n  Title,\n  ClearFilterBox,\n  ClearTitle,\n  ClearButton,\n  RadioButtonBox,\n  RadioButton,\n  PriorityFilterLabel,\n  StyledMarker,\n} from './Filters.styled';\n\nconst Filters = ({ boardId }) => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const [isModalOpen, setIsModalOpen] = useState(true);\n  const [filterValue, setFilterValue] = useState('default');\n\n  const handleFilterChange = newValue => {\n    setFilterValue(newValue);\n    console.log(newValue);\n    console.log(boardId);\n    dispatch(filterBoard({ boardId: boardId, priority: newValue }));\n    setIsModalOpen(false);\n  };\n\n  return (\n    <>\n      {isModalOpen && (\n        <ModalWrapper width={300} onClose={() => setIsModalOpen(false)}>\n          <TitleContainer>\n            <Title>{t('boards.filterButton')}</Title>\n          </TitleContainer>\n          <ClearFilterBox>\n            <ClearTitle>{t('boards.filter.label')}</ClearTitle>\n            <ClearButton\n              type=\"button\"\n              onClick={() => handleFilterChange('default')}\n            >\n              {t('boards.filter.all')}\n            </ClearButton>\n          </ClearFilterBox>\n          <RadioButtonBox>\n            <PriorityFilterLabel className=\"gray\">\n              <RadioButton\n                type=\"radio\"\n                name=\"priority\"\n                value=\"without\"\n                checked={filterValue === 'without'}\n                onChange={() => handleFilterChange('without')}\n                className=\"gray\"\n              />\n              <StyledMarker className=\"gray\"></StyledMarker>\n              {t('boards.filter.without')}\n            </PriorityFilterLabel>\n            <PriorityFilterLabel className=\"blue\">\n              <RadioButton\n                type=\"radio\"\n                name=\"priority\"\n                value=\"low\"\n                checked={filterValue === 'low'}\n                onChange={() => handleFilterChange('low')}\n                className=\"blue\"\n              />\n              <StyledMarker className=\"blue\"></StyledMarker>\n              {t('boards.filter.low')}\n            </PriorityFilterLabel>\n            <PriorityFilterLabel className=\"red\">\n              <RadioButton\n                type=\"radio\"\n                name=\"priority\"\n                value=\"medium\"\n                checked={filterValue === 'medium'}\n                onChange={() => handleFilterChange('medium')}\n                className=\"red\"\n              />\n              <StyledMarker className=\"red\"></StyledMarker>\n              {t('boards.filter.medium')}\n            </PriorityFilterLabel>\n            <PriorityFilterLabel className=\"green\">\n              <RadioButton\n                type=\"radio\"\n                name=\"priority\"\n                value=\"high\"\n                checked={filterValue === 'high'}\n                onChange={() => handleFilterChange('high')}\n                className=\"green\"\n              />\n              <StyledMarker className=\"green\"></StyledMarker>\n              {t('boards.filter.high')}\n            </PriorityFilterLabel>\n          </RadioButtonBox>\n        </ModalWrapper>\n      )}\n    </>\n  );\n};\n\nexport default Filters;\n","import { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { FilterButton, HeaderWrap } from './BoardHeader.styled';\nimport Filter from 'components/Icons/Filter';\nimport Filters from '../Filters/Filters';\n\nconst BoardHeader = ({ title, boardId }) => {\n  const { t } = useTranslation();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  return (\n    <>\n      <HeaderWrap>\n        <h2>{title}</h2>\n        <FilterButton type=\"button\" onClick={openModal}>\n          <Filter width={14} height={14} />\n          {t('boards.filterButton')}\n        </FilterButton>\n      </HeaderWrap>\n      {isModalOpen && (\n        <Filters boardId={boardId} onClose={() => setIsModalOpen(false)} />\n      )}\n    </>\n  );\n};\n\nexport default BoardHeader;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { getOneBoard } from '../redux/board/boardOperations';\nimport { selectOneBoard } from '../redux/board/boardSelectors';\nimport { MainContainer } from 'components/App/App.styled';\nimport Dashboard from 'components/Dashboard';\nimport BoardHeader from 'components/Dashboard/BoardHeader';\n\nconst ScreensPage = () => {\n  const { boardId } = useParams();\n  const dispatch = useDispatch();\n  const board = useSelector(selectOneBoard);\n\n  // const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(getOneBoard(boardId));\n  }, [dispatch, boardId]);\n\n  return (\n    <MainContainer>\n      <BoardHeader title={board.title} boardId={boardId} />\n      <Dashboard board={board} />\n    </MainContainer>\n  );\n};\n\nexport default ScreensPage;\n"],"names":["MainContainer","styled","_templateObject","_taggedTemplateLiteral","inputsCommonStyles","css","CardModalContent","_templateObject2","CardForm","_templateObject3","LabelRadioList","_templateObject4","RadioBtn","_templateObject5","_ref","$color","concat","LabelRadioLabel","_templateObject6","_ref2","CalendarContainer","_templateObject7","SubmitBtn","_templateObject8","variant","closeModal","t","useTranslation","_jsx","ModalWrapper","width","onClose","children","_jsxs","type","name","placeholder","defaultValue","Plus","height","date","day","getDate","month","getMonth","year","getFullYear","String","padStart","Date","formatDate","split","reverse","join","React","ref","selectedDate","setDate","toggleCalendar","minDate","setDefaultLocale","registerLocale","uk","ReactDatePicker","locale","i18next","selected","onChange","dateFormat","onCalendarOpen","onCalendarClose","closeCardModal","_useState","useState","_useState2","_slicedToArray","labelColor","setLabelColor","_useState3","_useState4","isCalendarOpen","setIsCalendarOpen","_useState5","_useState6","setSelectedDay","datePickerRef","useRef","onSubmit","e","preventDefault","_e$target$children","target","title","description","value","trim","toast","TOASTER_CONFIG","dateForServer","makeValidDate","cardInfo","label","console","log","autoComplete","LABEL_ARR","id","color","checked","htmlFor","onClick","current","setOpen","IoIosArrowUp","IoIosArrowDown","Calendar","fillColor","strokeColor","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","CardItem","CardTitle","CardDescr","InfoWrap","BtnsList","CardActionButton","card","openCardModal","showFullText","setShowFullText","text","slice","Bell","Status","Pencil","Trash","ColumnWrap","ColumnTitleWrap","ButtonsList","ColumnButton","IconWrap","AddButton","CardsList","column","isColumnModalOpen","setIsColumnModalOpen","isAddCardModalOpen","setIsAddCardModalOpen","isEditCardModalOpen","setIsEditCardModalOpen","_useState7","_useState8","isDeleteModalShown","setIsDeleteModalShown","_Fragment","cards","map","TaskCard","nanoid","ColumnModal","CardModal","DeleteModal","handleBoardDelete","Wrap","ColumnsList","board","isModalOpen","setIsModalOpen","Object","keys","length","columns","Column","_id","HeaderWrap","FilterButton","TitleContainer","Title","ClearFilterBox","ClearTitle","ClearButton","RadioButtonBox","RadioButton","StyledMarker","PriorityFilterLabel","_templateObject9","boardId","dispatch","useDispatch","filterValue","setFilterValue","handleFilterChange","newValue","filterBoard","priority","className","Filter","Filters","useParams","useSelector","selectOneBoard","useEffect","getOneBoard","BoardHeader","Dashboard"],"sourceRoot":""}