{"version":3,"file":"static/js/521.ec8b7210.chunk.js","mappings":"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","sources":["schemas/userRegisterSchema.js","schemas/userLoginSchema.js","components/Loader/SmallLoader/SmallLoader.jsx","components/Auth/LoginForm/LoginForm.styled.jsx","components/Auth/LoginForm/LoginForm.jsx","components/Auth/RegisterForm/RegisterForm.styled.jsx","components/Auth/RegisterForm/RegisterForm.jsx","pages/AuthPage.jsx"],"sourcesContent":["import * as yup from 'yup';\n\nconst registerSchema = yup.object().shape({\n  name: yup.string().min(3).required('Name is required'),\n  email: yup\n    .string()\n    .email('Please enter a valid email')\n    .required('Email is required'),\n  password: yup.string().min(6).max(24).required('Password is required'),\n});\n\nexport default registerSchema;\n","import * as yup from 'yup';\n\nconst loginSchema = yup.object().shape({\n  email: yup\n    .string()\n    .email('Please enter a valid email')\n    .required('Email is required'),\n  password: yup.string().min(6).max(24).required('Password is required'),\n});\n\nexport default loginSchema;\n","import { Oval } from 'react-loader-spinner';\n\nconst SmallLoader = ({ width = '30', height = '30', color = '#161616' }) => {\n  return (\n    <Oval\n      visible={true}\n      height={height}\n      width={width}\n      color={color}\n      ariaLabel=\"oval-loading\"\n    />\n  );\n};\n\nexport default SmallLoader;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Background = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100vw;\n  min-height: 100vh;\n  background: var(--light-green-gradient);\n`;\n\nexport const FormWrap = styled.div`\n  padding: 24px;\n  width: calc(100% - 40px);\n  display: flex;\n  flex-direction: column;\n  gap: 40px;\n  background-color: #151515;\n  border-radius: 8px;\n\n  @media screen and (min-width: 375px) {\n    width: 335px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 424px;\n  }\n`;\n\nexport const AuthList = styled.ul`\n  display: flex;\n  gap: 14px;\n`;\n\nexport const AuthLink = styled(NavLink)`\n  color: #ffffff30;\n  font-size: 18px;\n  font-weight: 500;\n  transition: color var(--easedTransition);\n\n  &:hover {\n    color: #ffffff;\n  }\n\n  &.active {\n    color: #ffffff;\n  }\n`;\n\nexport const FormUi = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 14px;\n`;\n\nexport const Input = styled.input`\n  padding: 14px 18px;\n  background: transparent;\n  border: 1px solid #bedbb0;\n  border-radius: 8px;\n  color: #ffffff;\n\n  ${({ $error }) =>\n    $error &&\n    `\n    border-color: #fc8181;\n  `}\n`;\n\nexport const SubmitBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 10px;\n  padding: 14px 0;\n  background: #bedbb0;\n  border-radius: 8px;\n  font-weight: 500;\n  color: #161616;\n  transition: background var(--easedTransition);\n\n  &:hover {\n    background: #9dc888;\n  }\n\n  &:disabled {\n    opacity: 0.3;\n  }\n`;\n\nexport const ErrorPara = styled.span`\n  display: inline;\n  font-size: 8px;\n  color: #fc8181;\n`;\n","import { useFormik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from '../../../redux/auth/authOperations';\nimport { useAuth } from 'hooks';\nimport { loginSchema } from 'schemas';\nimport SmallLoader from 'components/Loader/SmallLoader';\nimport {\n  Background,\n  FormWrap,\n  AuthList,\n  AuthLink,\n  FormUi,\n  Input,\n  SubmitBtn,\n  ErrorPara,\n} from './LoginForm.styled';\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n  const { isLoading } = useAuth();\n\n  const onSubmit = async (values, actions) => {\n    const formData = {\n      email: values.email,\n      password: values.password,\n    };\n\n    const isValid = await loginSchema.isValid(formData);\n    if (!isValid) {\n      return;\n    }\n\n    dispatch(logIn({ ...formData }));\n\n    await new Promise(res => setTimeout(res, 500));\n    actions.resetForm();\n  };\n\n  const {\n    values,\n    errors,\n    touched,\n    isSubmitting,\n    handleBlur,\n    handleChange,\n    handleSubmit,\n  } = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    validationSchema: loginSchema,\n    onSubmit,\n  });\n\n  return (\n    <Background>\n      <FormWrap>\n        <AuthList>\n          <li>\n            <AuthLink to={`/auth/register`}>Registration</AuthLink>\n          </li>\n          <li>\n            <AuthLink to={`/auth/login`}>Log In</AuthLink>\n          </li>\n        </AuthList>\n\n        <FormUi onSubmit={handleSubmit} autoComplete=\"off\">\n          <Input\n            value={values.email}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            $error={errors.email && touched.email}\n            name=\"email\"\n            placeholder=\"Enter your email\"\n            type=\"email\"\n          />\n          {errors.email && touched.email && (\n            <ErrorPara>{errors.email}</ErrorPara>\n          )}\n          <Input\n            value={values.password}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            $error={errors.password && touched.password}\n            name=\"password\"\n            placeholder=\"Confirm a password\"\n            type=\"password\"\n          />\n          {errors.password && touched.password && (\n            <ErrorPara>{errors.password}</ErrorPara>\n          )}\n\n          <SubmitBtn type=\"submit\" disabled={isSubmitting}>\n            {isLoading ? <SmallLoader width=\"25\" height=\"25\" /> : 'Log In Now'}\n          </SubmitBtn>\n        </FormUi>\n      </FormWrap>\n    </Background>\n  );\n};\n\nexport default LoginForm;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Background = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100vw;\n  min-height: 100vh;\n  background: var(--light-green-gradient);\n`;\n\nexport const FormWrap = styled.div`\n  padding: 24px;\n  width: calc(100% - 40px);\n  display: flex;\n  flex-direction: column;\n  gap: 40px;\n  background-color: #151515;\n  border-radius: 8px;\n\n  @media screen and (min-width: 375px) {\n    width: 335px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 424px;\n  }\n`;\n\nexport const AuthList = styled.ul`\n  display: flex;\n  gap: 14px;\n`;\n\nexport const AuthLink = styled(NavLink)`\n  color: #ffffff30;\n  font-size: 18px;\n  font-weight: 500;\n  transition: color var(--easedTransition);\n\n  &:hover {\n    color: #ffffff;\n  }\n\n  &.active {\n    color: #ffffff;\n  }\n`;\n\nexport const FormUi = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 14px;\n`;\n\nexport const Input = styled.input`\n  position: relative;\n  padding: 14px 18px;\n  background: transparent;\n  border: 1px solid #bedbb0;\n  border-radius: 8px;\n  color: #ffffff;\n\n  ${({ $error }) =>\n    $error &&\n    `\n    border-color: #fc8181;\n  `}\n`;\n\nexport const SubmitBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 10px;\n  padding: 14px 0;\n  font-weight: 500;\n  background: #bedbb0;\n  border-radius: 8px;\n  color: #161616;\n  transition: background var(--easedTransition);\n\n  &:hover {\n    background: #9dc888;\n  }\n\n  &:disabled {\n    opacity: 0.3;\n    cursor: not-allowed;\n  }\n`;\n\nexport const ErrorPara = styled.span`\n  display: inline;\n  font-size: 8px;\n  color: #fc8181;\n`;\n","import { useDispatch } from 'react-redux';\nimport { useFormik } from 'formik';\nimport { register } from '../../../redux/auth/authOperations';\nimport { useAuth } from 'hooks';\nimport { registerSchema } from 'schemas';\nimport SmallLoader from 'components/Loader/SmallLoader';\nimport {\n  Background,\n  FormWrap,\n  AuthList,\n  AuthLink,\n  FormUi,\n  Input,\n  SubmitBtn,\n  ErrorPara,\n} from './RegisterForm.styled';\n\nconst RegisterForm = () => {\n  const dispatch = useDispatch();\n  const { isLoading } = useAuth();\n\n  const onSubmit = async (values, actions) => {\n    const formData = {\n      name: values.name,\n      email: values.email,\n      password: values.password,\n    };\n\n    const isValid = await registerSchema.isValid(formData);\n    if (!isValid) {\n      return;\n    }\n\n    dispatch(register({ ...formData }));\n\n    await new Promise(res => setTimeout(res, 500));\n    actions.resetForm();\n  };\n\n  const { values, errors, touched, handleBlur, handleChange, handleSubmit } =\n    useFormik({\n      initialValues: {\n        name: '',\n        email: '',\n        password: '',\n      },\n      validationSchema: registerSchema,\n      onSubmit,\n    });\n\n  return (\n    <Background>\n      <FormWrap>\n        <AuthList>\n          <li>\n            <AuthLink to={`/auth/register`}>Registration</AuthLink>\n          </li>\n          <li>\n            <AuthLink to={`/auth/login`}>Log In</AuthLink>\n          </li>\n        </AuthList>\n\n        <FormUi onSubmit={handleSubmit} autoComplete=\"off\">\n          <Input\n            value={values.name}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            $error={errors.name && touched.name}\n            name=\"name\"\n            placeholder=\"Enter your name\"\n          />\n          {errors.name && touched.name && <ErrorPara>{errors.name}</ErrorPara>}\n          <Input\n            value={values.email}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            $error={errors.email && touched.email}\n            name=\"email\"\n            placeholder=\"Enter your email\"\n            type=\"email\"\n          />\n          {errors.email && touched.email && (\n            <ErrorPara>{errors.email}</ErrorPara>\n          )}\n          <Input\n            value={values.password}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            $error={errors.password && touched.password}\n            name=\"password\"\n            placeholder=\"Create a password\"\n            type=\"password\"\n          />\n          {errors.password && touched.password && (\n            <ErrorPara>{errors.password}</ErrorPara>\n          )}\n          <SubmitBtn type=\"submit\" disabled={isLoading}>\n            {isLoading ? (\n              <SmallLoader width=\"25\" height=\"25\" />\n            ) : (\n              'Register Now'\n            )}\n          </SubmitBtn>\n        </FormUi>\n      </FormWrap>\n    </Background>\n  );\n};\n\nexport default RegisterForm;\n","import LoginForm from 'components/Auth/LoginForm';\nimport RegisterForm from 'components/Auth/RegisterForm';\nimport { useParams } from 'react-router-dom';\n\nconst AuthPage = () => {\n  const { id } = useParams();\n\n  return <>{id === 'register' ? <RegisterForm /> : <LoginForm />}</>;\n};\n\nexport default AuthPage;\n"],"names":["yup","shape","name","min","required","email","password","max","_ref","_ref$width","width","_ref$height","height","_ref$color","color","_jsx","Oval","visible","ariaLabel","Background","styled","_templateObject","_taggedTemplateLiteral","FormWrap","_templateObject2","AuthList","_templateObject3","AuthLink","NavLink","_templateObject4","FormUi","_templateObject5","Input","_templateObject6","$error","SubmitBtn","_templateObject7","ErrorPara","_templateObject8","dispatch","useDispatch","isLoading","useAuth","onSubmit","_asyncToGenerator","_regeneratorRuntime","_callee","values","actions","formData","_context","prev","next","loginSchema","sent","abrupt","logIn","_objectSpread","Promise","res","setTimeout","resetForm","stop","_x","_x2","apply","arguments","_useFormik","useFormik","initialValues","validationSchema","errors","touched","isSubmitting","handleBlur","handleChange","handleSubmit","children","_jsxs","to","autoComplete","value","onChange","onBlur","placeholder","type","disabled","SmallLoader","registerSchema","register","id","useParams","_Fragment","RegisterForm","LoginForm"],"sourceRoot":""}