{"version":3,"file":"static/js/867.15d85f36.chunk.js","mappings":"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","sources":["components/App/App.styled.jsx","components/Modals/CardModal/CardModal.styled.jsx","components/Modals/ColumnModal/ColumnModal.jsx","components/Calendar/Calendar.jsx","components/Modals/CardModal/CardModal.jsx","components/Icons/Status.jsx","components/Icons/Bell.jsx","components/Dashboard/MovePopUp/MovePopUp.styled.jsx","components/Dashboard/MovePopUp/MovePopUp.jsx","components/Dashboard/TaskCard/TaskCard.styled.jsx","components/Dashboard/TaskCard/TaskCard.jsx","components/Dashboard/Dashboard.styled.jsx","components/Dashboard/Column/Column.styled.jsx","components/Dashboard/Column/Column.jsx","components/Dashboard/Dashboard.jsx","components/Dashboard/BoardHeader/BoardHeader.styled.jsx","components/Icons/Filter.jsx","components/Dashboard/Filters/Filters.styled.jsx","components/Dashboard/Filters/Filters.jsx","components/Dashboard/BoardHeader/BoardHeader.jsx","pages/ScreensPage.jsx"],"sourcesContent":["import { styled } from 'styled-components';\n\nexport const MainContainer = styled.div`\n  height: calc(100vh - 60px);\n  width: 100vw;\n  padding: 14px 10px 24px 10px;\n  background: ${({ $bg }) =>\n    $bg\n      ? `center / cover no-repeat\n    url(${$bg.backgroundMobileURL})`\n      : 'unset'};\n\n  @media screen and (min-width: 375px) {\n    padding: 14px 20px 24px 20px;\n  }\n\n  @media screen and (-webkit-min-device-pixel-ratio: 2) {\n    background: ${({ $bg }) =>\n      $bg\n        ? `center / cover no-repeat\n    url(${$bg.backgroundMobile2xURL})`\n        : 'unset'};\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 26px 32px 52px 32px;\n    height: calc(100vh - 68px);\n    background: ${({ $bg }) =>\n      $bg\n        ? `center / cover no-repeat\n    url(${$bg.backgroundTabletURL})`\n        : 'unset'};\n  }\n\n  @media screen and (min-width: 768px) and (-webkit-min-device-pixel-ratio: 2) {\n    background: ${({ $bg }) =>\n      $bg\n        ? `center / cover no-repeat\n    url(${$bg.backgroundTablet2xURL})`\n        : 'unset'};\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: calc(100vw - 260px);\n    padding: 10px 24px 36px 24px;\n    background: ${({ $bg }) =>\n      $bg\n        ? `center / cover no-repeat\n    url(${$bg.backgroundDesktopURL})`\n        : 'unset'};\n  }\n\n  @media screen and (min-width: 1440px) and (-webkit-min-device-pixel-ratio: 2) {\n    background: ${({ $bg }) =>\n      $bg\n        ? `center / cover no-repeat\n    url(${$bg.backgroundDesktop2xURL})`\n        : 'unset'};\n  }\n`;\n","import { styled, css } from 'styled-components';\n\nconst inputsCommonStyles = css`\n  border: 1px solid var(--accent-color);\n  border-radius: 8px;\n  padding: 14px 18px;\n  color: var(--text-color);\n  background-color: transparent;\n  box-shadow: 0 4px 16px 0 rgba(22, 22, 22, 0.08);\n  opacity: 0.4;\n  transition: opacity var(--easedTransition);\n\n  &:focus {\n    opacity: 1;\n    outline: none;\n  }\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const CardModalContent = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  p {\n    font-weight: 500;\n    font-size: 18px;\n    margin-bottom: 24px;\n  }\n`;\n\nexport const CardForm = styled.form`\n  display: flex;\n  flex-direction: column;\n\n  input[type='text'] {\n    ${inputsCommonStyles}\n    margin-bottom: 20px;\n\n    &.invalid {\n      border: 2px solid red;\n    }\n  }\n\n  textarea {\n    ${inputsCommonStyles}\n    line-height: 1.29;\n    margin-bottom: 24px;\n    resize: none;\n    height: 154px;\n  }\n\n  label {\n    font-size: 12px;\n    letter-spacing: -0.02em;\n    color: var(--lightgrey-text-color);\n    display: flex;\n    flex-direction: column;\n  }\n`;\n\nexport const ErrorLabel = styled.label`\n  position: relative;\n\n  p {\n    font-size: 10px;\n    position: absolute;\n    bottom: -20px;\n    color: red;\n  }\n`;\n\nexport const LabelRadioList = styled.ul`\n  display: flex;\n  gap: 8px;\n  margin-top: 4px;\n\n  li {\n    position: relative;\n  }\n`;\n\nexport const RadioBtn = styled.input`\n  position: absolute;\n  cursor: pointer;\n  z-index: 3;\n  top: 0;\n  opacity: 0;\n\n  &:checked + label::before {\n    outline: ${({ $color }) => `1px solid var(--priority-${$color})`};\n    border: 2px solid var(--modal-background);\n  }\n`;\n\nexport const LabelRadioLabel = styled.label`\n  margin-bottom: 14px;\n\n  &::before {\n    content: '';\n    width: 14px;\n    height: 14px;\n    border-radius: 50%;\n    background-color: ${({ $color }) => `var(--priority-${$color})`};\n    cursor: pointer;\n    transition: outline 50ms linear;\n  }\n`;\n\nexport const CalendarContainer = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 3px;\n\n  button {\n    display: flex;\n    align-items: center;\n    padding: 0;\n    padding-top: 5px;\n    background-color: transparent;\n\n    svg {\n      fill: var(--accent-color);\n    }\n  }\n`;\n\nexport const SubmitBtn = styled.button`\n  font-weight: 500;\n  border-radius: 8px;\n  padding: 10px;\n  background-color: var(--accent-color);\n  color: var(--btn-icon-bg);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  transition: var(--easedTransition);\n  margin-top: ${({ $variant }) => ($variant === 'column' ? '24px' : '40px')};\n\n  @media screen and (min-width: 1440px) {\n    &:hover,\n    &:focus {\n      opacity: 0.7;\n    }\n  }\n\n  span {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: 6px;\n    padding: 7px;\n    background-color: var(--btn-icon-bg);\n\n    svg path {\n      stroke: var(--btn-icon-color);\n    }\n  }\n`;\n","import { useState, useEffect, useRef } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport toast from 'react-hot-toast';\nimport { addColumn, editColumn } from '../../../redux/board/boardOperations';\nimport { TOASTER_CONFIG } from 'constants';\nimport { validateInputMaxLength } from 'helpers';\nimport ModalWrapper from 'components/Modals/ModalWrapper';\nimport Plus from 'components/Icons/Plus';\nimport {\n  CardForm,\n  CardModalContent,\n  ErrorLabel,\n  SubmitBtn,\n} from '../CardModal/CardModal.styled';\n\nconst ColumnModal = ({ variant, closeModal, columnId, columnName }) => {\n  const [errorMsg, setErrorMsg] = useState(null);\n  const [errorClassName, setErrorClassName] = useState('');\n\n  const { boardId } = useParams();\n  const dispatch = useDispatch();\n  const { t } = useTranslation();\n\n  const titleRef = useRef(null);\n\n  useEffect(() => {\n    titleRef.current.focus();\n  }, []);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const { value: title } = e.target.elements.title;\n\n    if (title.trim() === '') {\n      toast(t('columns.modals.toast.error'), TOASTER_CONFIG);\n      return;\n    }\n\n    const newColumn = {\n      board: boardId,\n      title,\n    };\n\n    variant === 'add'\n      ? dispatch(addColumn(newColumn))\n      : dispatch(editColumn({ editedColumn: newColumn, id: columnId }));\n\n    return closeModal();\n  };\n\n  return (\n    <ModalWrapper width={350} onClose={closeModal}>\n      <CardModalContent>\n        <p>\n          {variant === 'add'\n            ? t('columns.modals.addTitle')\n            : t('columns.modals.editTitle')}\n        </p>\n\n        <CardForm onSubmit={handleSubmit}>\n          <ErrorLabel>\n            <input\n              className={errorClassName}\n              ref={titleRef}\n              type=\"text\"\n              name=\"title\"\n              placeholder={\n                variant === 'add' ? t('columns.modals.input') : columnName\n              }\n              defaultValue={variant === 'add' ? '' : columnName}\n              maxLength={25}\n              onChange={e =>\n                validateInputMaxLength(e, setErrorMsg, setErrorClassName)\n              }\n            />\n            {errorMsg && <p>{errorMsg}</p>}\n          </ErrorLabel>\n\n          <SubmitBtn type=\"submit\" $variant=\"column\">\n            <span>\n              <Plus width={14} height={14} />\n            </span>\n            {variant === 'add'\n              ? t('columns.modals.addTitle')\n              : t('columns.modals.editTitle')}\n          </SubmitBtn>\n        </CardForm>\n      </CardModalContent>\n    </ModalWrapper>\n  );\n};\n\nexport default ColumnModal;\n","import React from 'react';\nimport i18next from 'i18next';\nimport ReactDatePicker, {\n  registerLocale,\n  setDefaultLocale,\n} from 'react-datepicker';\nimport { uk } from 'date-fns/locale/uk';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport './styles.css';\n\nconst Calendar = React.forwardRef(\n  ({ selectedDate, setDate, toggleCalendar }, ref) => {\n    const minDate = new Date();\n    setDefaultLocale('en');\n    registerLocale('uk', uk);\n\n    return (\n      <ReactDatePicker\n        ref={ref}\n        locale={\n          i18next.language === 'uk' || i18next.language === 'uk-UA'\n            ? 'uk'\n            : 'en'\n        }\n        selected={selectedDate}\n        onChange={date => setDate(date)}\n        minDate={minDate}\n        calendarStartDay={1}\n        dateFormat=\"EEEE, d\"\n        onCalendarOpen={() => toggleCalendar(true)}\n        onCalendarClose={() => toggleCalendar(false)}\n      />\n    );\n  }\n);\n\nexport default Calendar;\n","import { useState, useRef, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport toast from 'react-hot-toast';\nimport { addCard, editCard } from '../../../redux/cards/cardsOperations';\nimport { IoIosArrowDown, IoIosArrowUp } from 'react-icons/io';\nimport { LABEL_ARR, TOASTER_CONFIG } from 'constants';\nimport { makeValidDate, validateInputMaxLength } from 'helpers';\nimport ModalWrapper from 'components/Modals/ModalWrapper';\nimport Calendar from 'components/Calendar';\nimport Plus from 'components/Icons/Plus';\nimport {\n  CardModalContent,\n  CardForm,\n  ErrorLabel,\n  LabelRadioList,\n  RadioBtn,\n  LabelRadioLabel,\n  CalendarContainer,\n  SubmitBtn,\n} from './CardModal.styled';\n\nconst CardModal = ({ columnId, variant, closeCardModal, activeCard }) => {\n  const [cardPriority, setCardPriority] = useState(\n    variant === 'add' ? 'without priority' : activeCard.priority\n  );\n  const [isCalendarOpen, setIsCalendarOpen] = useState(false);\n  const [selectedDate, setSelectedDay] = useState(\n    variant === 'add' ? new Date() : activeCard.deadline\n  );\n  const [errorMsg, setErrorMsg] = useState(null);\n  const [errorClassName, setErrorClassName] = useState('');\n\n  const datePickerRef = useRef(null);\n  const titleRef = useRef(null);\n\n  useEffect(() => {\n    titleRef.current.focus();\n  }, []);\n\n  const { boardId } = useParams();\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    const { title, description } = e.target.elements;\n\n    if (!title.value.trim() || !description.value.trim()) {\n      return toast(t('cards.modals.toast.error'), TOASTER_CONFIG);\n    }\n\n    const dateForServer = makeValidDate(selectedDate);\n\n    const cardInfo = {\n      title: title.value,\n      description: description.value,\n      priority: cardPriority,\n      deadline: dateForServer,\n      board: boardId,\n      column: columnId,\n    };\n\n    if (variant === 'add') {\n      dispatch(addCard(cardInfo));\n      toast(t('cards.modals.toast.add.success'), TOASTER_CONFIG);\n    } else {\n      dispatch(editCard({ cardId: activeCard._id, editedCard: cardInfo }));\n      toast(t('cards.modals.toast.edit.success'), TOASTER_CONFIG);\n    }\n    closeCardModal();\n  };\n\n  const openDatePicker = () => {\n    if (datePickerRef.current) {\n      datePickerRef.current.setOpen(true);\n    }\n  };\n\n  const closeDatePicker = () => {\n    if (datePickerRef.current) {\n      datePickerRef.current.setOpen(false);\n    }\n  };\n\n  return (\n    <ModalWrapper width={350} onClose={closeCardModal}>\n      <CardModalContent>\n        <p>\n          {variant === 'add'\n            ? t('cards.modals.addTitle')\n            : t('cards.modals.editTitle')}\n        </p>\n\n        <CardForm onSubmit={handleFormSubmit}>\n          <ErrorLabel>\n            <input\n              className={errorClassName}\n              ref={titleRef}\n              type=\"text\"\n              name=\"title\"\n              placeholder={t('cards.modals.title')}\n              defaultValue={variant === 'add' ? '' : activeCard.title}\n              autoComplete=\"off\"\n              maxLength={25}\n              onChange={e =>\n                validateInputMaxLength(e, setErrorMsg, setErrorClassName)\n              }\n            />\n            {errorMsg && <p>{errorMsg}</p>}\n          </ErrorLabel>\n          <textarea\n            name=\"description\"\n            placeholder={t('cards.modals.description')}\n            defaultValue={variant === 'add' ? '' : activeCard.description}\n            autoComplete=\"off\"\n          ></textarea>\n\n          <label>\n            {t('cards.modals.label')}\n\n            <LabelRadioList>\n              {LABEL_ARR.map(({ id, priority, color }) => {\n                return (\n                  <li key={id}>\n                    <RadioBtn\n                      $color={color}\n                      id=\"priority\"\n                      type=\"radio\"\n                      name=\"priority\"\n                      value={priority}\n                      checked={priority === cardPriority}\n                      onChange={e => setCardPriority(e.target.value)}\n                    />\n                    <LabelRadioLabel htmlFor=\"label\" $color={color} />\n                  </li>\n                );\n              })}\n            </LabelRadioList>\n          </label>\n\n          <label>{t('cards.modals.deadline')}</label>\n\n          <CalendarContainer>\n            {isCalendarOpen ? (\n              <button type=\"button\" onClick={closeDatePicker}>\n                <IoIosArrowUp />\n              </button>\n            ) : (\n              <button type=\"button\" onClick={openDatePicker}>\n                <IoIosArrowDown />\n              </button>\n            )}\n\n            <Calendar\n              selectedDate={selectedDate}\n              setDate={setSelectedDay}\n              toggleCalendar={setIsCalendarOpen}\n              ref={datePickerRef}\n            />\n          </CalendarContainer>\n\n          <SubmitBtn type=\"submit\">\n            <span>\n              <Plus width={14} height={14} />\n            </span>\n            {variant === 'add'\n              ? t('cards.modals.addButton')\n              : t('cards.modals.editButton')}\n          </SubmitBtn>\n        </CardForm>\n      </CardModalContent>\n    </ModalWrapper>\n  );\n};\n\nexport default CardModal;\n","const Status = ({ width, height, fillColor, strokeColor }) => {\n  return (\n    <svg\n      width={width || '14px'}\n      height={height || '14px'}\n      viewBox=\"0 0 16 17\"\n      fill={fillColor || 'none'}\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M2.22559 5.16665C3.37828 3.17398 5.53276 1.83331 8.00037 1.83331C11.6823 1.83331 14.667 4.81808 14.667 8.49998C14.667 12.1819 11.6823 15.1666 8.00037 15.1666C5.53276 15.1666 3.37828 13.826 2.22559 11.8333\"\n        stroke={strokeColor || null}\n        strokeWidth=\"1.3\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        d=\"M8 11.1666L10.6667 8.49998L8 5.83331\"\n        stroke={strokeColor || null}\n        strokeWidth=\"1.3\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        d=\"M1.33301 8.5L10.6663 8.5\"\n        stroke={strokeColor || null}\n        strokeWidth=\"1.3\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </svg>\n  );\n};\n\nexport default Status;\n","const Bell = ({ width, height, fillColor, strokeColor }) => {\n  return (\n    <svg\n      width={width || '14px'}\n      height={height || '14px'}\n      viewBox=\"0 0 14 16\"\n      fill={fillColor || 'none'}\n      stroke={strokeColor || null}\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M5.23597 14C5.70606 14.4149 6.32355 14.6667 6.99985 14.6667C7.67615 14.6667 8.29365 14.4149 8.76373 14M10.9999 5.33337C10.9999 4.27251 10.5784 3.25509 9.82828 2.50495C9.07813 1.7548 8.06072 1.33337 6.99985 1.33337C5.93898 1.33337 4.92157 1.7548 4.17142 2.50495C3.42128 3.25509 2.99985 4.27251 2.99985 5.33337C2.99985 7.3935 2.48016 8.80401 1.89963 9.73698C1.40993 10.524 1.16509 10.9174 1.17407 11.0272C1.18401 11.1488 1.20976 11.1951 1.3077 11.2678C1.39616 11.3334 1.79491 11.3334 2.59242 11.3334H11.4073C12.2048 11.3334 12.6035 11.3334 12.692 11.2678C12.7899 11.1951 12.8157 11.1488 12.8256 11.0272C12.8346 10.9174 12.5898 10.524 12.1001 9.73698C11.5195 8.80401 10.9999 7.3935 10.9999 5.33337Z\"\n        strokeWidth=\"1.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </svg>\n  );\n};\n\nexport default Bell;\n","import { styled } from 'styled-components';\n\nexport const Popup = styled.div`\n  position: absolute;\n  top: 20px;\n  left: -200%;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  gap: 8px;\n  padding: 18px;\n  width: 150px;\n  height: 0;\n  border: none;\n  border-radius: 8px;\n  background-color: transparent;\n  opacity: 0;\n  visibility: hidden;\n  transition: opacity var(--easedTransition), visibility var(--easedTransition),\n    height var(--easedTransition);\n  z-index: 3;\n\n  &:hover,\n  &:focus {\n    background-color: var(--popup-bg);\n    border: 1px solid var(--text-color);\n    opacity: 1;\n    visibility: visible;\n    height: auto;\n  }\n\n  button {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    gap: 18px;\n    row-gap: 10px;\n    font-size: 11px;\n    color: var(--text-color);\n    background-color: transparent;\n    padding: 0;\n    width: 100%;\n    overflow: hidden;\n    transition: color var(--easedTransition);\n\n    span {\n      max-width: 80px;\n      overflow: hidden;\n      white-space: nowrap;\n      text-overflow: ellipsis;\n    }\n\n    &:hover,\n    &:focus {\n      color: var(--accent-color);\n    }\n\n    svg path {\n      transition: stroke var(--easedTransition);\n    }\n\n    &:hover svg path,\n    &:focus svg path {\n      stroke: var(--accent-color);\n    }\n  }\n`;\n","import Status from 'components/Icons/Status';\nimport { Popup } from './MovePopUp.styled';\n\nconst MovePopUp = ({ allColumns, columnId, moveCard }) => {\n  return (\n    <Popup id=\"move-popup\">\n      {allColumns\n        .filter(column => column._id !== columnId)\n        .map(column => {\n          return (\n            <button\n              key={column._id}\n              type=\"button\"\n              title={`${column.title}`}\n              onClick={() => moveCard(column._id)}\n            >\n              <span> {column.title}</span>\n              <Status\n                width={16}\n                height={16}\n                strokeColor={'var(--icon-stroke-color)'}\n              />\n            </button>\n          );\n        })}\n    </Popup>\n  );\n};\n\nexport default MovePopUp;\n","import { styled, keyframes } from 'styled-components';\n\nconst swingAnimation = keyframes`\n  0% {\n    transform: rotate(0deg);\n  }\n\n  50% {\n    transform: rotate(15deg);\n  }\n\n  100% {\n    transform: rotate(-15deg);\n  }\n`;\n\nexport const CardItem = styled.div`\n  width: 100%;\n  border-radius: 10px;\n  padding: 24px 14px;\n  margin-bottom: 5px;\n  background-color: var(--card-bg);\n  list-style-type: none;\n  border-left: ${({ $label }) => `7px solid var(--priority-${$label})`};\n  word-break: break-all;\n  cursor: grab;\n\n  & > div {\n    display: flex;\n    align-items: flex-ends;\n    justify-content: space-between;\n  }\n\n  li {\n    position: relative;\n  }\n\n  @media screen and (min-width: 375px) {\n    min-width: 334px;\n  }\n`;\n\nexport const CardTitle = styled.h4`\n  margin-bottom: 8px;\n  color: var(--text-color);\n`;\n\nexport const CardDescr = styled.p`\n  width: 290px;\n  max-width: 100%;\n  font-size: 12px;\n  line-height: 1.33333;\n  color: var(--text-color);\n  opacity: 0.7;\n  margin-bottom: 14px;\n  cursor: pointer;\n`;\n\nexport const InfoWrap = styled.div`\n  display: flex;\n  gap: 14px;\n\n  div {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n  }\n\n  h5 {\n    font-weight: 400;\n    font-size: 8px;\n    color: var(--text-color);\n    opacity: 0.5;\n    margin-bottom: 4px;\n  }\n\n  span {\n    font-size: 10px;\n    color: var(--text-color);\n  }\n`;\n\nexport const Priority = styled.p`\n  font-size: 10px;\n  color: var(--text-color);\n  display: flex;\n  gap: 4px;\n  text-transform: capitalize;\n\n  &::before {\n    content: '';\n    display: block;\n    width: 12px;\n    height: 12px;\n    border-radius: 50%;\n    background-color: ${({ $label }) => `var(--priority-${$label})`};\n  }\n`;\n\nexport const BtnsList = styled.ul`\n  display: flex;\n  align-items: flex-end;\n`;\n\nexport const DeadlineModal = styled.div`\n  position: absolute;\n  top: -155%;\n  left: -130%;\n  width: 110px;\n  height: 30px;\n  border-radius: 15px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 9px;\n  color: var(--text-color);\n  opacity: 0;\n  background-color: var(--background-color);\n  box-shadow: var(--box-shadow);\n  visibility: hidden;\n  transition: opacity var(--easedTransition), visibility var(--easedTransition);\n`;\n\nexport const CardActionButton = styled.button`\n  background-color: transparent;\n\n  &#deadline-bell:hover + #deadline-modal,\n  &#deadline-bell:focus + #deadline-modal {\n    opacity: 1;\n    visibility: visible;\n  }\n\n  &#move-card:hover + #move-popup,\n  &#move-card:focus + #move-popup {\n    background-color: var(--popup-bg);\n    border: 1px solid var(--text-color);\n    opacity: 1;\n    visibility: visible;\n    height: auto;\n  }\n\n  &#deadline-bell svg {\n    animation: ${swingAnimation} 1s ease-in-out infinite alternate;\n    filter: drop-shadow(1px 1px 3px var(--accent-color));\n  }\n\n  &#deadline-bell svg path {\n    opacity: 1;\n    stroke: var(--accent-color);\n  }\n\n  svg {\n    transition: filter var(--easedTransition);\n  }\n\n  svg path {\n    stroke: var(--icon-stroke-color);\n    opacity: 50%;\n    transition: stroke var(--easedTransition), opacity var(--easedTransition);\n  }\n\n  &:hover svg path {\n    stroke: var(--accent-color);\n    opacity: 100%;\n  }\n\n  &:hover svg {\n    filter: drop-shadow(1px 1px 5px var(--accent-color));\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport i18next from 'i18next';\nimport { deleteCard } from '../../../redux/cards/cardsOperations';\nimport { moveCard } from '../../../redux/board/boardOperations';\nimport {\n  formatDate,\n  makeValidDate,\n  handleTextOverflow,\n  determineDeadline,\n  determineLabelColor,\n  changePriorityLang,\n} from 'helpers';\nimport Status from 'components/Icons/Status';\nimport Pencil from 'components/Icons/Pencil';\nimport Trash from 'components/Icons/Trash';\nimport Bell from 'components/Icons/Bell';\nimport DeleteModal from 'components/Modals/DeleteModal';\nimport MovePopUp from '../MovePopUp';\nimport {\n  CardItem,\n  CardTitle,\n  CardDescr,\n  InfoWrap,\n  Priority,\n  BtnsList,\n  DeadlineModal,\n  CardActionButton,\n} from './TaskCard.styled';\nimport { Draggable } from 'react-beautiful-dnd';\n\nconst TaskCard = ({\n  allColumns,\n  columnId,\n  card,\n  index,\n  openCardModal,\n  setActiveCard,\n}) => {\n  const [showFullText, setShowFullText] = useState(false);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n\n  const handleClick = () => {\n    setShowFullText(!showFullText);\n  };\n\n  const deleteOneCard = cardId => {\n    dispatch(deleteCard({ cardId, columnId }));\n  };\n\n  const moveCardToAnotherColumn = newColumn => {\n    dispatch(moveCard({ cardId: card._id, newColumn, oldColumn: columnId }));\n  };\n\n  return (\n    <>\n      <Draggable draggableId={card._id} index={index}>\n        {(provided, snapshot) => (\n          <CardItem\n            ref={provided.innerRef}\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            $label={determineLabelColor(card.priority)}\n          >\n            <CardTitle>{card.title}</CardTitle>\n            <CardDescr onClick={handleClick}>\n              {showFullText\n                ? card.description\n                : handleTextOverflow(card.description)}\n            </CardDescr>\n            <hr />\n\n            <div>\n              <InfoWrap>\n                <div>\n                  <h5>{t('cards.priority')}</h5>\n                  <Priority $label={determineLabelColor(card.priority)}>\n                    {i18next.language === 'en'\n                      ? card.priority\n                      : changePriorityLang(card.priority)}\n                  </Priority>\n                </div>\n\n                <div>\n                  <h5>{t('cards.deadline')}</h5>\n                  <span>{formatDate(makeValidDate(card.deadline))}</span>\n                </div>\n              </InfoWrap>\n\n              <BtnsList>\n                {determineDeadline(card.deadline) && (\n                  <li>\n                    <CardActionButton\n                      id=\"deadline-bell\"\n                      type=\"button\"\n                      aria-label=\"Deadline is today\"\n                      onClick={e => (e.target.style.animation = 'none')}\n                    >\n                      <Bell\n                        width={16}\n                        height={16}\n                        strokeColor={'var(--icon-stroke-color)'}\n                      />\n                    </CardActionButton>\n\n                    <DeadlineModal id=\"deadline-modal\">\n                      <p>{t('cards.deadlineToday')}</p>\n                    </DeadlineModal>\n                  </li>\n                )}\n                {allColumns.length >= 2 && (\n                  <li>\n                    <CardActionButton\n                      id=\"move-card\"\n                      type=\"button\"\n                      aria-label=\"Move card\"\n                    >\n                      <Status\n                        width={16}\n                        height={16}\n                        strokeColor={'var(--icon-stroke-color)'}\n                      />\n                    </CardActionButton>\n                    <MovePopUp\n                      allColumns={allColumns}\n                      columnId={columnId}\n                      moveCard={moveCardToAnotherColumn}\n                    />\n                  </li>\n                )}\n                <li>\n                  <CardActionButton\n                    type=\"button\"\n                    aria-label=\"Edit card\"\n                    onClick={() => {\n                      openCardModal();\n                      setActiveCard(card);\n                    }}\n                  >\n                    <Pencil\n                      width={16}\n                      height={16}\n                      strokeColor={'var(--icon-stroke-color)'}\n                    />\n                  </CardActionButton>\n                </li>\n                <li>\n                  <CardActionButton\n                    type=\"button\"\n                    aria-label=\"Delete card\"\n                    onClick={() => setIsDeleteModalOpen(true)}\n                  >\n                    <Trash\n                      width={16}\n                      height={16}\n                      strokeColor={'var(--icon-stroke-color)'}\n                    />\n                  </CardActionButton>\n                </li>\n              </BtnsList>\n            </div>\n            {provided.placeholder}\n          </CardItem>\n        )}\n      </Draggable>\n      {isDeleteModalOpen && (\n        <DeleteModal\n          onClose={() => setIsDeleteModalOpen(false)}\n          onConfirm={() => deleteOneCard(card._id)}\n        />\n      )}\n    </>\n  );\n};\n\nexport default TaskCard;\n","import styled from 'styled-components';\n\nexport const Wrap = styled.div`\n  display: flex;\n  height: 100%;\n  padding-top: 39px;\n  padding-bottom: 24px;\n  overflow-x: auto;\n  scroll-behavior: smooth;\n\n  &::-webkit-scrollbar-thumb {\n    border-radius: 12px;\n  }\n\n  &::-webkit-scrollbar {\n    height: 12px;\n  }\n\n  &::-webkit-scrollbar-track {\n    border-radius: 12px;\n  }\n\n  @media screen and (min-width: 768px) {\n    padding-top: 26px;\n    padding-bottom: 52px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding-top: 10px;\n    padding-bottom: 36px;\n  }\n`;\n\nexport const EmptyMsg = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  text-align: center;\n  border-radius: 8px;\n  padding: 10px 30px;\n  transform: translate(-50%, -50%);\n  background-color: var(--background-color);\n\n  @media screen and (min-width: 1440px) {\n    transform: unset;\n  }\n`;\n\nexport const ColumnsList = styled.ul`\n  display: flex;\n  gap: 12px;\n  margin-right: 34px;\n\n  @media screen and (min-width: 375px) {\n    gap: 34px;\n  }\n`;\n\nexport const IconWrap = styled.span`\n  margin-right: 8px;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  width: 28px;\n  height: 28px;\n  border-radius: 6px;\n  background-color: var(--plus-icon-bg);\n  transition: all var(--easedTransition);\n\n  & svg {\n    stroke: var(--card-bg);\n    transition: all var(--easedTransition);\n  }\n`;\n\nexport const AddButton = styled.button`\n  min-width: 100%;\n  height: 56px;\n  border: none;\n  border-radius: 8px;\n  background-color: var(--card-bg);\n  color: inherit;\n  font-weight: 500;\n  transition: all var(--easedTransition);\n\n  &:hover {\n    background-color: var(--plus-btn-hover);\n\n    ${IconWrap} {\n      background-color: var(--card-bg);\n      & svg {\n        stroke: var(--plus-icon-bg);\n      }\n    }\n  }\n\n  @media screen and (min-width: 375px) {\n    min-width: 335px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const ColumnWrap = styled.div`\n  width: calc(100% - 50px);\n  min-width: 270px;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n\n  @media screen and (min-width: 375px) {\n    width: 335px;\n  }\n`;\n\nexport const ColumnTitleWrap = styled.div`\n  min-width: 100%;\n  min-height: 56px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0 20px;\n  margin-bottom: 14px;\n  border-radius: 8px;\n  background-color: var(--card-bg);\n  font-weight: 500;\n\n  & h3 {\n    font-size: 14px;\n    font-weight: 500;\n  }\n\n  @media screen and (min-width: 375px) {\n    min-width: 335px;\n  }\n`;\n\nexport const ButtonsList = styled.ul`\n  display: flex;\n`;\n\nexport const ColumnButton = styled.button`\n  background-color: transparent;\n  padding: 4px;\n\n  svg {\n    transition: filter var(--easedTransition);\n  }\n\n  svg path {\n    stroke: var(--icon-stroke-color);\n    opacity: 50%;\n    transition: stroke var(--easedTransition), opacity var(--easedTransition);\n  }\n\n  &:hover svg path {\n    stroke: var(--accent-color);\n    opacity: 100%;\n  }\n\n  &:hover svg {\n    filter: drop-shadow(1px 1px 5px var(--accent-color));\n  }\n`;\n\nexport const IconWrap = styled.span`\n  margin-right: 8px;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  width: 28px;\n  height: 28px;\n  border-radius: 6px;\n  background-color: var(--btn-icon-bg);\n  transition: all var(--easedTransition);\n\n  & svg {\n    stroke: var(--btn-icon-color);\n    transition: all var(--easedTransition);\n  }\n`;\n\nexport const AddButton = styled.button`\n  margin-top: auto;\n  min-width: 100%;\n  min-height: 56px;\n  border: none;\n  border-radius: 8px;\n  background-color: var(--accent-color);\n  color: var(--btn-icon-bg);\n  font-weight: 500;\n  transition: all var(--easedTransition);\n\n  &:hover {\n    background-color: var(--accent-btn-hover);\n  }\n`;\n\nexport const CardsList = styled.ul`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  padding-right: 4px;\n  margin-bottom: 14px;\n  border-radius: 8px;\n  height: calc(100vh - 144px - 130px);\n  overflow-y: auto;\n  scroll-behavior: smooth;\n\n  &::-webkit-scrollbar-thumb {\n    border-radius: 12px;\n  }\n\n  &::-webkit-scrollbar {\n    width: 8px;\n  }\n\n  &::-webkit-scrollbar-track {\n    border-radius: 12px;\n  }\n\n  @media screen and (min-width: 375px) {\n    min-width: 350px;\n  }\n\n  @media screen and (min-width: 768px) {\n    padding-right: 8px;\n    max-height: calc(100vh - 150px - 166px);\n  }\n\n  @media screen and (min-width: 1440px) {\n    max-height: calc(100vh - 118px - 106px);\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport { Droppable } from 'react-beautiful-dnd';\nimport { deleteColumn } from '../../../redux/board/boardOperations';\nimport Pencil from 'components/Icons/Pencil';\nimport Trash from 'components/Icons/Trash';\nimport ColumnModal from 'components/Modals/ColumnModal';\nimport CardModal from 'components/Modals/CardModal';\nimport Plus from 'components/Icons/Plus';\nimport DeleteModal from 'components/Modals/DeleteModal/DeleteModal';\nimport TaskCard from '../TaskCard';\nimport { EmptyMsg } from '../Dashboard.styled';\nimport {\n  AddButton,\n  ButtonsList,\n  CardsList,\n  ColumnButton,\n  ColumnTitleWrap,\n  ColumnWrap,\n  IconWrap,\n} from './Column.styled';\n\nconst Column = ({ allColumns, column }) => {\n  const [isAddColumnModalOpen, setIsAddColumnModalOpen] = useState(false);\n  const [isEditColumnModalOpen, setIsEditColumnModalOpen] = useState(false);\n  const [isAddCardModalOpen, setIsAddCardModalOpen] = useState(false);\n  const [isEditCardModalOpen, setIsEditCardModalOpen] = useState(false);\n  const [isDeleteModalShown, setIsDeleteModalShown] = useState(false);\n  const [activeCard, setActiveCard] = useState({});\n  const [showEmptyMsg, setShowEmptyMsg] = useState(false);\n\n  useEffect(() => {\n    const columns = allColumns?.filter(column => column?.cards?.length !== 0);\n\n    if (!columns?.length) {\n      setShowEmptyMsg(true);\n    } else {\n      setShowEmptyMsg(false);\n    }\n  }, [setShowEmptyMsg, allColumns]);\n\n  const dispatch = useDispatch();\n  const { t } = useTranslation();\n\n  const handleColumnDelete = () => {\n    dispatch(deleteColumn(column._id));\n    setIsDeleteModalShown(false);\n  };\n\n  return (\n    <>\n      <ColumnWrap>\n        <ColumnTitleWrap>\n          <h3>{column.title}</h3>\n          <ButtonsList>\n            <li>\n              <ColumnButton\n                type=\"button\"\n                aria-label=\"Edit column title\"\n                onClick={() => setIsEditColumnModalOpen(true)}\n              >\n                <Pencil\n                  width={16}\n                  height={16}\n                  strokeColor={'var(--plus-icon-bg)'}\n                />\n              </ColumnButton>\n            </li>\n            <li>\n              <ColumnButton\n                id=\"column-delete\"\n                type=\"button\"\n                aria-label=\"Delete column\"\n                onClick={() => setIsDeleteModalShown(true)}\n              >\n                <Trash\n                  width={16}\n                  height={16}\n                  strokeColor={'var(--plus-icon-bg)'}\n                />\n              </ColumnButton>\n            </li>\n          </ButtonsList>\n        </ColumnTitleWrap>\n        {showEmptyMsg ? (\n          <EmptyMsg>{t('cards.empty')}</EmptyMsg>\n        ) : (\n          <Droppable droppableId={column._id}>\n            {provided => (\n              <CardsList ref={provided.innerRef} {...provided.droppableProps}>\n                {column.cards &&\n                  column.cards.map((card, index) => (\n                    <li key={card._id}>\n                      <TaskCard\n                        allColumns={allColumns}\n                        columnId={column._id}\n                        card={card}\n                        index={index}\n                        openCardModal={() => setIsEditCardModalOpen(true)}\n                        setActiveCard={setActiveCard}\n                      />\n                    </li>\n                  ))}\n                {provided.placeholder}\n              </CardsList>\n            )}\n          </Droppable>\n        )}\n\n        <AddButton type=\"button\" onClick={() => setIsAddCardModalOpen(true)}>\n          <IconWrap>\n            <Plus width={14} height={14} />\n          </IconWrap>\n          {t('cards.addButton')}\n        </AddButton>\n      </ColumnWrap>\n\n      {isAddColumnModalOpen && (\n        <ColumnModal\n          variant=\"add\"\n          closeModal={() => setIsAddColumnModalOpen(false)}\n          columnId={column._id}\n        />\n      )}\n      {isEditColumnModalOpen && (\n        <ColumnModal\n          variant=\"edit\"\n          closeModal={() => setIsEditColumnModalOpen(false)}\n          columnId={column._id}\n          columnName={column.title}\n        />\n      )}\n      {isAddCardModalOpen && (\n        <CardModal\n          columnId={column._id}\n          variant=\"add\"\n          closeCardModal={() => setIsAddCardModalOpen(false)}\n        />\n      )}\n      {isEditCardModalOpen && (\n        <CardModal\n          activeCard={activeCard}\n          columnId={column._id}\n          variant=\"edit\"\n          closeCardModal={() => setIsEditCardModalOpen(false)}\n        />\n      )}\n\n      {isDeleteModalShown && (\n        <DeleteModal\n          onClose={() => setIsDeleteModalShown(false)}\n          onConfirm={handleColumnDelete}\n        />\n      )}\n    </>\n  );\n};\n\nexport default Column;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { moveCard } from '../../redux/board/boardOperations';\nimport Plus from 'components/Icons/Plus';\nimport ColumnModal from 'components/Modals/ColumnModal';\nimport Column from './Column';\nimport { AddButton, ColumnsList, IconWrap, Wrap } from './Dashboard.styled';\n\nconst Dashboard = ({ board }) => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n\n  const onDragEnd = ({ draggableId, source, destination }) => {\n    // if (destination || source === destination) return;\n    // console.log(source);\n    // console.log(destination);\n    if (!destination) return;\n    if (\n      source.droppableId === destination.droppableId &&\n      destination.index === source.index\n    )\n      return;\n    if (source.droppableId !== destination.droppableId) {\n      dispatch(\n        moveCard({\n          cardId: draggableId,\n          newColumn: destination.droppableId,\n          oldColumn: source.droppableId,\n        })\n      );\n    }\n  };\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <Wrap>\n        {board?.columns?.length > 0 && (\n          <ColumnsList>\n            {board.columns.map(column => (\n              <li key={column._id}>\n                <Column allColumns={board.columns} column={column} />\n              </li>\n            ))}\n          </ColumnsList>\n        )}\n        <AddButton type=\"button\" onClick={() => setIsModalOpen(true)}>\n          <IconWrap>\n            <Plus width={14} height={14} />\n          </IconWrap>\n          {t('columns.addButton')}\n        </AddButton>\n        {isModalOpen && (\n          <ColumnModal variant=\"add\" closeModal={() => setIsModalOpen(false)} />\n        )}\n      </Wrap>\n    </DragDropContext>\n  );\n};\n\nexport default Dashboard;\n","import styled from 'styled-components';\n\nexport const HeaderWrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  & h2 {\n    font-weight: 500;\n    font-size: 14px;\n    background-color: var(--background-color);\n    padding: 0 20px;\n    border-radius: 8px;\n\n    @media screen and (min-width: 768px) {\n      font-size: 18px;\n    }\n  }\n`;\n\nexport const FilterButton = styled.button`\n  display: flex;\n  gap: 8px;\n  align-items: center;\n  background-color: var(--background-color);\n  padding: 0 20px;\n  border-radius: 8px;\n  font-weight: 500;\n  font-size: 14px;\n  color: var(--text-color);\n  transition: all var(--easedTransition);\n\n  & svg {\n    stroke: var(--text-color);\n    fill: transparent;\n    transition: all var(--easedTransition);\n  }\n\n  &:hover {\n    color: var(--accent-btn-hover);\n    & svg {\n      stroke: var(--accent-btn-hover);\n    }\n  }\n`;\n","const Filter = ({ width, height, fillColor, strokeColor }) => {\n  return (\n    <svg\n      width={width || '14px'}\n      height={height || '14px'}\n      viewBox=\"0 0 16 16\"\n      fill={fillColor || 'none'}\n      stroke={strokeColor || null}\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M14.6668 2H1.3335L6.66683 8.30667V12.6667L9.3335 14V8.30667L14.6668 2Z\"\n        strokeWidth=\"1.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </svg>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const TitleContainer = styled.div`\n  justify-content: space-between;\n  margin-bottom: 14px;\n`;\n\nexport const Title = styled.h2`\n  font-size: 18px;\n  font-weight: 500;\n  line-height: normal;\n`;\n\nexport const ClearFilterBox = styled.div`\n  display: flex;\n  border-top: 1px solid var(--underline-color);\n  margin-bottom: 14px;\n  padding-top: 14px;\n`;\n\nexport const ClearTitle = styled.h3`\n  display: flex;\n  flex-shrink: 0;\n  margin-right: auto;\n  font-weight: 500;\n  line-height: normal;\n`;\n\nexport const ClearButton = styled.button`\n  color: var(--lightgrey-text-color);\n  font-size: 12px;\n  line-height: normal;\n  letter-spacing: -0.24px;\n  background-color: inherit;\n  text-decoration-line: underline;\n\n  @media screen and (min-width: 768px) {\n    &:hover,\n    &:focus {\n      color: var(--text-color);\n    }\n  }\n`;\n\nexport const RadioButtonBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  color: var(--lightgrey-text-color);\n`;\n\nexport const RadioButton = styled.input`\n  position: absolute;\n  z-index: 999;\n  cursor: pointer;\n  top: 4px;\n  left: 0;\n  border-radius: 50%;\n  margin: 0;\n  width: 14px;\n  height: 14px;\n  opacity: 0;\n`;\n\nexport const StyledMarker = styled.span`\n  width: 14px;\n  height: 14px;\n  border-radius: 50%;\n  cursor: pointer;\n  transition: outline 50ms linear;\n  background-color: ${({ $color }) => `var(--priority-${$color})`};\n`;\n\nexport const PriorityFilterLabel = styled.label`\n  font-size: 14px;\n  position: relative;\n  display: inline-flex;\n  gap: 8px;\n  justify-content: center;\n  align-items: center;\n  color: var(--lightgrey-text-color);\n  cursor: pointer;\n\n  &:not(:last-child) {\n    margin-bottom: 12px;\n  }\n\n  input[type='radio']:checked + ${StyledMarker} {\n    outline: ${({ $color }) => `1px solid var(--priority-${$color})`};\n    border: 2px solid var(--modal-background);\n  }\n\n  @media screen and (min-width: 768px) {\n    &:hover,\n    &:focus {\n      color: var(--text-color);\n    }\n  }\n`;\n\n// import styled from 'styled-components';\n\n// export const TitleContainer = styled.div`\n//   justify-content: space-between;\n//   margin-bottom: 14px;\n// `;\n\n// export const Title = styled.h2`\n//   font-size: 18px;\n//   font-weight: 500;\n//   line-height: normal;\n// `;\n\n// export const ClearFilterBox = styled.div`\n//   display: flex;\n//   border-top: 1px solid var(--underline-color);\n//   margin-bottom: 14px;\n//   padding-top: 14px;\n// `;\n\n// export const ClearTitle = styled.h3`\n//   display: flex;\n//   flex-shrink: 0;\n//   margin-right: auto;\n//   font-weight: 500;\n//   line-height: normal;\n// `;\n\n// export const ClearButton = styled.button`\n//   color: var(--lightgrey-text-color);\n//   font-size: 12px;\n//   line-height: normal;\n//   letter-spacing: -0.24px;\n//   background-color: inherit;\n//   text-decoration-line: underline;\n\n//   @media screen and (min-width: 768px) {\n//     &:hover,\n//     &:focus {\n//       color: var(--text-color);\n//     }\n//   }\n// `;\n\n// export const PriorityFilterBox = styled.ul`\n//   display: flex;\n//   flex-direction: column;\n//   color: var(--lightgrey-text-color);\n//   gap: 8px;\n// `;\n\n// export const PriorityFilterItem = styled.li`\n//   display: flex;\n//   position: relative;\n//   gap: 8px;\n//   cursor: pointer;\n//   @media screen and (min-width: 768px) {\n//     &:hover,\n//     &:focus {\n//       color: var(--text-color);\n//     }\n//   }\n// `;\n\n// export const RadioButton = styled.input`\n//   position: absolute;\n//   z-index: 999;\n//   cursor: pointer;\n//   left: 0;\n//   border-radius: 50%;\n//   opacity: 0;\n\n//   &:checked::before {\n//     outline: ${({ $color }) => `1px solid var(--priority-${$color})`};\n//     border: 2px solid var(--modal-background);\n//   }\n// `;\n\n// export const PriorityFilterLabel = styled.label`\n//   position: relative;\n//   display: inline-flex;\n\n//   &::before {\n//     content: '';\n//     width: 14px;\n//     height: 14px;\n//     cursor: pointer;\n//     border-radius: 50%;\n//     background-color: ${({ $color }) => `var(--priority-${$color})`};\n//     transition: outline 50ms linear;\n//   }\n// `;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { LABEL_ARR } from 'constants';\nimport { useTranslation } from 'react-i18next';\nimport { getOneBoard, filterCards } from '../../../redux/board/boardOperations';\nimport ModalWrapper from 'components/Modals/ModalWrapper/ModalWrapper';\nimport {\n  TitleContainer,\n  Title,\n  ClearFilterBox,\n  ClearTitle,\n  ClearButton,\n  RadioButtonBox,\n  RadioButton,\n  PriorityFilterLabel,\n  StyledMarker,\n} from './Filters.styled';\n\nconst Filters = ({ boardId, onClose }) => {\n  const [filterValue, setFilterValue] = useState('without');\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n\n  const newLabelArr = [\n    { ...LABEL_ARR.find(item => item.id === 3), priority: 'without' },\n    ...LABEL_ARR.filter(item => item.id !== 3),\n  ];\n\n  const handleFilterChange = newValue => {\n    setFilterValue(newValue);\n    dispatch(filterCards({ boardId: boardId, priority: newValue }));\n    onClose();\n  };\n\n  const handleDefaultFilter = () => {\n    dispatch(getOneBoard(boardId));\n    onClose();\n  };\n\n  return (\n    <ModalWrapper width={300} onClose={onClose}>\n      <TitleContainer>\n        <Title>{t('boards.filterButton')}</Title>\n      </TitleContainer>\n      <ClearFilterBox>\n        <ClearTitle>{t('boards.filter.label')}</ClearTitle>\n        <ClearButton type=\"button\" onClick={handleDefaultFilter}>\n          {t('boards.filter.all')}\n        </ClearButton>\n      </ClearFilterBox>\n      <RadioButtonBox>\n        {newLabelArr.map(({ id, priority, color }) => (\n          <PriorityFilterLabel key={id} $color={color}>\n            <RadioButton\n              type=\"radio\"\n              name=\"priority\"\n              value={priority}\n              checked={filterValue === priority}\n              $color={color}\n              onChange={() => handleFilterChange(priority)}\n            />\n            <StyledMarker $color={color}></StyledMarker>\n            {t(`boards.filter.${priority}`)}\n          </PriorityFilterLabel>\n        ))}\n      </RadioButtonBox>\n    </ModalWrapper>\n  );\n};\n\nexport default Filters;\n","import { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { FilterButton, HeaderWrap } from './BoardHeader.styled';\nimport Filter from 'components/Icons/Filter';\nimport Filters from '../Filters/Filters';\n\nconst BoardHeader = ({ title, boardId }) => {\n  const { t } = useTranslation();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  return (\n    <>\n      <HeaderWrap>\n        <h2>{title}</h2>\n        <FilterButton type=\"button\" onClick={openModal}>\n          <Filter width={14} height={14} />\n          {t('boards.filterButton')}\n        </FilterButton>\n      </HeaderWrap>\n      {isModalOpen && (\n        <Filters boardId={boardId} onClose={() => setIsModalOpen(false)} />\n      )}\n    </>\n  );\n};\n\nexport default BoardHeader;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { getOneBoard } from '../redux/board/boardOperations';\nimport { selectOneBoard, selectIsLoading } from '../redux/board/boardSelectors';\nimport { MainContainer } from 'components/App/App.styled';\nimport Dashboard from 'components/Dashboard';\nimport BoardHeader from 'components/Dashboard/BoardHeader';\nimport Loader from 'components/Loader';\n\nconst ScreensPage = () => {\n  const { boardId } = useParams();\n  const dispatch = useDispatch();\n  const board = useSelector(selectOneBoard);\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(getOneBoard(boardId));\n  }, [dispatch, boardId]);\n\n  return (\n    <MainContainer $bg={board.background}>\n      <BoardHeader title={board.title} boardId={boardId} />\n      {isLoading ? <Loader /> : <Dashboard board={board} />}\n    </MainContainer>\n  );\n};\n\nexport default ScreensPage;\n"],"names":["MainContainer","styled","_templateObject","_taggedTemplateLiteral","_ref","$bg","concat","backgroundMobileURL","_ref2","backgroundMobile2xURL","_ref3","backgroundTabletURL","_ref4","backgroundTablet2xURL","_ref5","backgroundDesktopURL","_ref6","backgroundDesktop2xURL","inputsCommonStyles","css","CardModalContent","_templateObject2","CardForm","_templateObject3","ErrorLabel","_templateObject4","LabelRadioList","_templateObject5","RadioBtn","_templateObject6","$color","LabelRadioLabel","_templateObject7","CalendarContainer","_templateObject8","SubmitBtn","_templateObject9","$variant","variant","closeModal","columnId","columnName","_useState","useState","_useState2","_slicedToArray","errorMsg","setErrorMsg","_useState3","_useState4","errorClassName","setErrorClassName","boardId","useParams","dispatch","useDispatch","t","useTranslation","titleRef","useRef","useEffect","current","focus","_jsx","ModalWrapper","width","onClose","children","_jsxs","onSubmit","e","preventDefault","title","target","elements","value","trim","newColumn","board","addColumn","editColumn","editedColumn","id","toast","TOASTER_CONFIG","className","ref","type","name","placeholder","defaultValue","maxLength","onChange","validateInputMaxLength","Plus","height","React","selectedDate","setDate","toggleCalendar","minDate","Date","setDefaultLocale","registerLocale","uk","ReactDatePicker","locale","i18next","selected","date","calendarStartDay","dateFormat","onCalendarOpen","onCalendarClose","closeCardModal","activeCard","priority","cardPriority","setCardPriority","isCalendarOpen","setIsCalendarOpen","_useState5","deadline","_useState6","setSelectedDay","_useState7","_useState8","_useState9","_useState10","datePickerRef","_e$target$elements","description","dateForServer","makeValidDate","cardInfo","column","addCard","editCard","cardId","_id","editedCard","autoComplete","LABEL_ARR","color","checked","htmlFor","onClick","setOpen","IoIosArrowUp","IoIosArrowDown","Calendar","fillColor","strokeColor","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","Popup","allColumns","moveCard","filter","map","Status","swingAnimation","keyframes","CardItem","$label","CardTitle","CardDescr","InfoWrap","Priority","BtnsList","DeadlineModal","CardActionButton","card","index","openCardModal","setActiveCard","showFullText","setShowFullText","isDeleteModalOpen","setIsDeleteModalOpen","handleClick","moveCardToAnotherColumn","oldColumn","_Fragment","Draggable","draggableId","provided","snapshot","_objectSpread","innerRef","draggableProps","dragHandleProps","determineLabelColor","handleTextOverflow","changePriorityLang","formatDate","determineDeadline","style","animation","Bell","length","MovePopUp","Pencil","Trash","DeleteModal","onConfirm","deleteCard","Wrap","EmptyMsg","ColumnsList","IconWrap","AddButton","ColumnWrap","ColumnTitleWrap","ButtonsList","ColumnButton","CardsList","isAddColumnModalOpen","setIsAddColumnModalOpen","isEditColumnModalOpen","setIsEditColumnModalOpen","isAddCardModalOpen","setIsAddCardModalOpen","isEditCardModalOpen","setIsEditCardModalOpen","isDeleteModalShown","setIsDeleteModalShown","_useState11","_useState12","_useState13","_useState14","showEmptyMsg","setShowEmptyMsg","columns","_column$cards","cards","Droppable","droppableId","droppableProps","TaskCard","ColumnModal","CardModal","deleteColumn","_board$columns","isModalOpen","setIsModalOpen","DragDropContext","onDragEnd","source","destination","Column","HeaderWrap","FilterButton","TitleContainer","Title","ClearFilterBox","ClearTitle","ClearButton","RadioButtonBox","RadioButton","StyledMarker","PriorityFilterLabel","filterValue","setFilterValue","newLabelArr","item","_toConsumableArray","getOneBoard","newValue","filterCards","Filter","Filters","useSelector","selectOneBoard","isLoading","selectIsLoading","background","BoardHeader","Loader","Dashboard"],"sourceRoot":""}