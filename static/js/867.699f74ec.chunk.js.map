{"version":3,"file":"static/js/867.699f74ec.chunk.js","mappings":"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","sources":["components/App/App.styled.jsx","components/Modals/CardModal/CardModal.styled.jsx","components/Modals/ColumnModal/ColumnModal.jsx","components/Calendar/Calendar.jsx","components/Modals/CardModal/CardModal.jsx","components/Icons/Status.jsx","components/Icons/Bell.jsx","components/Dashboard/MovePopUp/MovePopUp.styled.jsx","components/Dashboard/MovePopUp/MovePopUp.jsx","components/Dashboard/TaskCard/TaskCard.styled.jsx","components/Dashboard/TaskCard/TaskCard.jsx","components/Dashboard/Dashboard.styled.jsx","components/Dashboard/Column/Column.styled.jsx","components/Dashboard/Column/Column.jsx","components/Dashboard/Dashboard.jsx","components/Dashboard/BoardHeader/BoardHeader.styled.jsx","components/Icons/Filter.jsx","components/Dashboard/Filters/Filters.styled.jsx","components/Dashboard/Filters/Filters.jsx","components/Dashboard/BoardHeader/BoardHeader.jsx","pages/ScreensPage.jsx"],"sourcesContent":["import { styled } from 'styled-components';\n\nexport const MainContainer = styled.div`\n  height: calc(100vh - 60px);\n  width: 100vw;\n  padding: 14px 10px 24px 10px;\n  background: ${({ $bg }) =>\n    $bg\n      ? `center / cover no-repeat\n    url(${$bg.backgroundMobileURL})`\n      : 'unset'};\n\n  @media screen and (min-width: 375px) {\n    padding: 14px 20px 24px 20px;\n  }\n\n  @media screen and (-webkit-min-device-pixel-ratio: 2) {\n    background: ${({ $bg }) =>\n      $bg\n        ? `center / cover no-repeat\n    url(${$bg.backgroundMobile2xURL})`\n        : 'unset'};\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 26px 32px 52px 32px;\n    height: calc(100vh - 68px);\n    background: ${({ $bg }) =>\n      $bg\n        ? `center / cover no-repeat\n    url(${$bg.backgroundTabletURL})`\n        : 'unset'};\n  }\n\n  @media screen and (min-width: 768px) and (-webkit-min-device-pixel-ratio: 2) {\n    background: ${({ $bg }) =>\n      $bg\n        ? `center / cover no-repeat\n    url(${$bg.backgroundTablet2xURL})`\n        : 'unset'};\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: calc(100vw - 260px);\n    padding: 10px 24px 36px 24px;\n    background: ${({ $bg }) =>\n      $bg\n        ? `center / cover no-repeat\n    url(${$bg.backgroundDesktopURL})`\n        : 'unset'};\n  }\n\n  @media screen and (min-width: 1440px) and (-webkit-min-device-pixel-ratio: 2) {\n    background: ${({ $bg }) =>\n      $bg\n        ? `center / cover no-repeat\n    url(${$bg.backgroundDesktop2xURL})`\n        : 'unset'};\n  }\n`;\n","import { styled, css } from 'styled-components';\n\nconst inputsCommonStyles = css`\n  border: 1px solid var(--accent-color);\n  border-radius: 8px;\n  padding: 14px 18px;\n  color: var(--text-color);\n  background-color: transparent;\n  box-shadow: 0 4px 16px 0 rgba(22, 22, 22, 0.08);\n  opacity: 0.4;\n  transition: opacity var(--easedTransition);\n\n  &:focus {\n    opacity: 1;\n    outline: none;\n  }\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const CardModalContent = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  p {\n    font-weight: 500;\n    font-size: 18px;\n    margin-bottom: 24px;\n  }\n`;\n\nexport const CardForm = styled.form`\n  display: flex;\n  flex-direction: column;\n\n  input[type='text'] {\n    ${inputsCommonStyles}\n    margin-bottom: 20px;\n\n    &.invalid {\n      border: 2px solid var(--error-color);\n    }\n  }\n\n  textarea {\n    ${inputsCommonStyles}\n    line-height: 1.29;\n    margin-bottom: 24px;\n    resize: none;\n    height: 154px;\n  }\n\n  label {\n    font-size: 12px;\n    letter-spacing: -0.02em;\n    color: var(--lightgrey-text-color);\n    display: flex;\n    flex-direction: column;\n  }\n`;\n\nexport const ErrorLabel = styled.label`\n  position: relative;\n\n  p {\n    font-size: 10px;\n    position: absolute;\n    bottom: -20px;\n    color: var(--error-color);\n  }\n`;\n\nexport const LabelRadioList = styled.ul`\n  display: flex;\n  gap: 8px;\n  margin-top: 4px;\n\n  li {\n    position: relative;\n  }\n`;\n\nexport const RadioBtn = styled.input`\n  position: absolute;\n  cursor: pointer;\n  z-index: 3;\n  top: 0;\n  opacity: 0;\n\n  &:checked + label::before {\n    outline: ${({ $color }) => `1px solid var(--priority-${$color})`};\n    border: 2px solid var(--modal-background);\n  }\n`;\n\nexport const LabelRadioLabel = styled.label`\n  margin-bottom: 14px;\n\n  &::before {\n    content: '';\n    width: 14px;\n    height: 14px;\n    border-radius: 50%;\n    background-color: ${({ $color }) => `var(--priority-${$color})`};\n    cursor: pointer;\n    transition: outline 50ms linear;\n  }\n`;\n\nexport const CalendarContainer = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 3px;\n\n  button {\n    display: flex;\n    align-items: center;\n    padding: 0;\n    padding-top: 5px;\n    background-color: transparent;\n\n    svg {\n      fill: var(--accent-color);\n    }\n  }\n`;\n\nexport const SubmitBtn = styled.button`\n  font-weight: 500;\n  border-radius: 8px;\n  padding: 10px;\n  background-color: var(--accent-color);\n  color: var(--btn-icon-bg);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  transition: var(--easedTransition);\n  margin-top: ${({ $variant }) => ($variant === 'column' ? '24px' : '40px')};\n\n  @media screen and (min-width: 1440px) {\n    &:hover,\n    &:focus {\n      opacity: 0.7;\n    }\n  }\n\n  span {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: 6px;\n    padding: 7px;\n    background-color: var(--btn-icon-bg);\n\n    svg path {\n      stroke: var(--btn-icon-color);\n    }\n  }\n`;\n","import { useState, useEffect, useRef } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport toast from 'react-hot-toast';\nimport {\n  addColumn,\n  editColumn,\n} from '../../../redux/columns/columnsOperations';\nimport { TOASTER_CONFIG } from 'constants';\nimport { validateInputMaxLength } from 'helpers';\nimport ModalWrapper from 'components/Modals/ModalWrapper';\nimport Plus from 'components/Icons/Plus';\nimport {\n  CardForm,\n  CardModalContent,\n  ErrorLabel,\n  SubmitBtn,\n} from '../CardModal/CardModal.styled';\n\nconst ColumnModal = ({ variant, closeModal, columnId, columnName }) => {\n  const [errorMsgShown, setErrorMsgShown] = useState(false);\n  const [errorClassName, setErrorClassName] = useState('');\n\n  const { boardId } = useParams();\n  const dispatch = useDispatch();\n  const { t } = useTranslation();\n\n  const titleRef = useRef(null);\n\n  useEffect(() => {\n    titleRef.current.focus();\n  }, []);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const { value: title } = e.target.elements.title;\n\n    if (title.trim() === '') {\n      toast(t('columns.modals.toast.error'), TOASTER_CONFIG);\n      return;\n    }\n\n    const newColumn = {\n      board: boardId,\n      title,\n    };\n\n    variant === 'add'\n      ? dispatch(addColumn(newColumn))\n      : dispatch(editColumn({ editedColumn: newColumn, id: columnId }));\n\n    return closeModal();\n  };\n\n  return (\n    <ModalWrapper width={350} onClose={closeModal}>\n      <CardModalContent>\n        <p>\n          {variant === 'add'\n            ? t('columns.modals.addTitle')\n            : t('columns.modals.editTitle')}\n        </p>\n\n        <CardForm onSubmit={handleSubmit}>\n          <ErrorLabel>\n            <input\n              className={errorClassName}\n              ref={titleRef}\n              type=\"text\"\n              name=\"title\"\n              placeholder={\n                variant === 'add' ? t('columns.modals.input') : columnName\n              }\n              defaultValue={variant === 'add' ? '' : columnName}\n              maxLength={25}\n              onChange={e =>\n                validateInputMaxLength(e, setErrorMsgShown, setErrorClassName)\n              }\n            />\n            {errorMsgShown && <p>{t('toast.maxTitle')}</p>}\n          </ErrorLabel>\n\n          <SubmitBtn type=\"submit\" $variant=\"column\">\n            <span>\n              <Plus width={14} height={14} />\n            </span>\n            {variant === 'add'\n              ? t('columns.modals.addTitle')\n              : t('columns.modals.editTitle')}\n          </SubmitBtn>\n        </CardForm>\n      </CardModalContent>\n    </ModalWrapper>\n  );\n};\n\nexport default ColumnModal;\n","import React from 'react';\nimport i18next from 'i18next';\nimport ReactDatePicker, {\n  registerLocale,\n  setDefaultLocale,\n} from 'react-datepicker';\nimport { uk } from 'date-fns/locale/uk';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport './styles.css';\n\nconst Calendar = React.forwardRef(\n  ({ selectedDate, setDate, toggleCalendar }, ref) => {\n    const minDate = new Date();\n    setDefaultLocale('en');\n    registerLocale('uk', uk);\n\n    return (\n      <ReactDatePicker\n        ref={ref}\n        locale={\n          i18next.language === 'uk' || i18next.language === 'uk-UA'\n            ? 'uk'\n            : 'en'\n        }\n        selected={selectedDate}\n        onChange={date => setDate(date)}\n        minDate={minDate}\n        calendarStartDay={1}\n        dateFormat=\"EEEE, d\"\n        onCalendarOpen={() => toggleCalendar(true)}\n        onCalendarClose={() => toggleCalendar(false)}\n      />\n    );\n  }\n);\n\nexport default Calendar;\n","import { useState, useRef, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport toast from 'react-hot-toast';\nimport { addCard, editCard } from '../../../redux/cards/cardsOperations';\nimport { IoIosArrowDown, IoIosArrowUp } from 'react-icons/io';\nimport { LABEL_ARR, TOASTER_CONFIG } from 'constants';\nimport {\n  makeValidDate,\n  validateInputMaxLength,\n  isTheDateLessThanNow,\n} from 'helpers';\nimport ModalWrapper from 'components/Modals/ModalWrapper';\nimport Calendar from 'components/Calendar';\nimport Plus from 'components/Icons/Plus';\nimport {\n  CardModalContent,\n  CardForm,\n  ErrorLabel,\n  LabelRadioList,\n  RadioBtn,\n  LabelRadioLabel,\n  CalendarContainer,\n  SubmitBtn,\n} from './CardModal.styled';\n\nconst CardModal = ({ columnId, variant, closeCardModal, activeCard }) => {\n  const [cardPriority, setCardPriority] = useState(\n    variant === 'add' ? 'without priority' : activeCard.priority\n  );\n  const [isCalendarOpen, setIsCalendarOpen] = useState(false);\n  const [selectedDate, setSelectedDay] = useState(\n    variant === 'add' ? new Date() : activeCard.deadline\n  );\n  const [errorMsgShown, setErrorMsgShown] = useState(false);\n  const [errorClassName, setErrorClassName] = useState('');\n\n  const datePickerRef = useRef(null);\n  const titleRef = useRef(null);\n\n  useEffect(() => {\n    titleRef.current.focus();\n  }, []);\n\n  const { boardId } = useParams();\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    const { title, description } = e.target.elements;\n\n    if (!title.value.trim() || !description.value.trim()) {\n      return toast(t('cards.modals.toast.error'), TOASTER_CONFIG);\n    }\n\n    const dateForServer = makeValidDate(selectedDate);\n\n    if (isTheDateLessThanNow(dateForServer)) {\n      return toast(t('cards.modals.toast.invalidDate'), TOASTER_CONFIG);\n    }\n\n    const cardInfo = {\n      title: title.value,\n      description: description.value,\n      priority: cardPriority,\n      deadline: dateForServer,\n      board: boardId,\n      column: columnId,\n    };\n\n    if (variant === 'add') {\n      dispatch(addCard(cardInfo));\n      toast(t('cards.modals.toast.add.success'), TOASTER_CONFIG);\n    } else {\n      dispatch(editCard({ cardId: activeCard._id, editedCard: cardInfo }));\n      toast(t('cards.modals.toast.edit.success'), TOASTER_CONFIG);\n    }\n\n    closeCardModal();\n  };\n\n  const openDatePicker = () => {\n    if (datePickerRef.current) {\n      datePickerRef.current.setOpen(true);\n    }\n  };\n\n  const closeDatePicker = () => {\n    if (datePickerRef.current) {\n      datePickerRef.current.setOpen(false);\n    }\n  };\n\n  return (\n    <ModalWrapper width={350} onClose={closeCardModal}>\n      <CardModalContent>\n        <p>\n          {variant === 'add'\n            ? t('cards.modals.addTitle')\n            : t('cards.modals.editTitle')}\n        </p>\n\n        <CardForm onSubmit={handleFormSubmit}>\n          <ErrorLabel>\n            <input\n              className={errorClassName}\n              ref={titleRef}\n              type=\"text\"\n              name=\"title\"\n              placeholder={t('cards.modals.title')}\n              defaultValue={variant === 'add' ? '' : activeCard.title}\n              autoComplete=\"off\"\n              maxLength={25}\n              onChange={e =>\n                validateInputMaxLength(e, setErrorMsgShown, setErrorClassName)\n              }\n            />\n            {errorMsgShown && <p>{t('toast.maxTitle')}</p>}\n          </ErrorLabel>\n          <textarea\n            name=\"description\"\n            placeholder={t('cards.modals.description')}\n            defaultValue={variant === 'add' ? '' : activeCard.description}\n            autoComplete=\"off\"\n          ></textarea>\n\n          <label>\n            {t('cards.modals.label')}\n\n            <LabelRadioList>\n              {LABEL_ARR.map(({ id, priority, color }) => {\n                return (\n                  <li key={id}>\n                    <RadioBtn\n                      $color={color}\n                      id=\"priority\"\n                      type=\"radio\"\n                      name=\"priority\"\n                      value={priority}\n                      checked={priority === cardPriority}\n                      onChange={e => setCardPriority(e.target.value)}\n                    />\n                    <LabelRadioLabel htmlFor=\"label\" $color={color} />\n                  </li>\n                );\n              })}\n            </LabelRadioList>\n          </label>\n\n          <label>{t('cards.modals.deadline')}</label>\n\n          <CalendarContainer>\n            {isCalendarOpen ? (\n              <button type=\"button\" onClick={closeDatePicker}>\n                <IoIosArrowUp />\n              </button>\n            ) : (\n              <button type=\"button\" onClick={openDatePicker}>\n                <IoIosArrowDown />\n              </button>\n            )}\n\n            <Calendar\n              selectedDate={selectedDate}\n              setDate={setSelectedDay}\n              toggleCalendar={setIsCalendarOpen}\n              ref={datePickerRef}\n            />\n          </CalendarContainer>\n\n          <SubmitBtn type=\"submit\">\n            <span>\n              <Plus width={14} height={14} />\n            </span>\n            {variant === 'add'\n              ? t('cards.modals.addButton')\n              : t('cards.modals.editButton')}\n          </SubmitBtn>\n        </CardForm>\n      </CardModalContent>\n    </ModalWrapper>\n  );\n};\n\nexport default CardModal;\n","const Status = ({ width, height, fillColor, strokeColor }) => {\n  return (\n    <svg\n      width={width || '14px'}\n      height={height || '14px'}\n      viewBox=\"0 0 16 17\"\n      fill={fillColor || 'none'}\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M2.22559 5.16665C3.37828 3.17398 5.53276 1.83331 8.00037 1.83331C11.6823 1.83331 14.667 4.81808 14.667 8.49998C14.667 12.1819 11.6823 15.1666 8.00037 15.1666C5.53276 15.1666 3.37828 13.826 2.22559 11.8333\"\n        stroke={strokeColor || null}\n        strokeWidth=\"1.3\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        d=\"M8 11.1666L10.6667 8.49998L8 5.83331\"\n        stroke={strokeColor || null}\n        strokeWidth=\"1.3\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        d=\"M1.33301 8.5L10.6663 8.5\"\n        stroke={strokeColor || null}\n        strokeWidth=\"1.3\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </svg>\n  );\n};\n\nexport default Status;\n","const Bell = ({ width, height, fillColor, strokeColor }) => {\n  return (\n    <svg\n      width={width || '14px'}\n      height={height || '14px'}\n      viewBox=\"0 0 14 16\"\n      fill={fillColor || 'none'}\n      stroke={strokeColor || null}\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M5.23597 14C5.70606 14.4149 6.32355 14.6667 6.99985 14.6667C7.67615 14.6667 8.29365 14.4149 8.76373 14M10.9999 5.33337C10.9999 4.27251 10.5784 3.25509 9.82828 2.50495C9.07813 1.7548 8.06072 1.33337 6.99985 1.33337C5.93898 1.33337 4.92157 1.7548 4.17142 2.50495C3.42128 3.25509 2.99985 4.27251 2.99985 5.33337C2.99985 7.3935 2.48016 8.80401 1.89963 9.73698C1.40993 10.524 1.16509 10.9174 1.17407 11.0272C1.18401 11.1488 1.20976 11.1951 1.3077 11.2678C1.39616 11.3334 1.79491 11.3334 2.59242 11.3334H11.4073C12.2048 11.3334 12.6035 11.3334 12.692 11.2678C12.7899 11.1951 12.8157 11.1488 12.8256 11.0272C12.8346 10.9174 12.5898 10.524 12.1001 9.73698C11.5195 8.80401 10.9999 7.3935 10.9999 5.33337Z\"\n        strokeWidth=\"1.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </svg>\n  );\n};\n\nexport default Bell;\n","import { styled } from 'styled-components';\n\nexport const Popup = styled.div`\n  position: absolute;\n  top: 20px;\n  left: -400%;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  gap: 8px;\n  padding: 18px;\n  width: 130px;\n  height: 0;\n  border: none;\n  border-radius: 8px;\n  background-color: transparent;\n  opacity: 0;\n  visibility: hidden;\n  transition: opacity var(--easedTransition), visibility var(--easedTransition),\n    height var(--easedTransition);\n  z-index: 3;\n\n  &:hover,\n  &:focus {\n    background-color: var(--popup-bg);\n    border: 1px solid var(--text-color);\n    opacity: 1;\n    visibility: visible;\n    height: auto;\n  }\n\n  button {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    gap: 18px;\n    row-gap: 10px;\n    font-size: 11px;\n    color: var(--text-color);\n    background-color: transparent;\n    padding: 0;\n    width: 100%;\n    overflow: hidden;\n    transition: color var(--easedTransition);\n\n    span {\n      max-width: 80px;\n      overflow: hidden;\n      white-space: nowrap;\n      text-overflow: ellipsis;\n    }\n\n    &:hover,\n    &:focus {\n      color: var(--accent-color);\n    }\n\n    svg path {\n      transition: stroke var(--easedTransition);\n    }\n\n    &:hover svg path,\n    &:focus svg path {\n      stroke: var(--accent-color);\n    }\n  }\n`;\n","import Status from 'components/Icons/Status';\nimport { Popup } from './MovePopUp.styled';\n\nconst MovePopUp = ({ allColumns, columnId, moveCard }) => {\n  return (\n    <Popup id=\"move-popup\">\n      {allColumns\n        .filter(column => column._id !== columnId)\n        .map(column => {\n          return (\n            <button\n              key={column._id}\n              type=\"button\"\n              title={`${column.title}`}\n              onClick={() => moveCard(column._id)}\n            >\n              <span> {column.title}</span>\n              <Status\n                width={16}\n                height={16}\n                strokeColor={'var(--icon-stroke-color)'}\n              />\n            </button>\n          );\n        })}\n    </Popup>\n  );\n};\n\nexport default MovePopUp;\n","import { styled, keyframes } from 'styled-components';\n\nconst swingAnimation = keyframes`\n  0% {\n    transform: rotate(0deg);\n  }\n\n  50% {\n    transform: rotate(15deg);\n  }\n\n  100% {\n    transform: rotate(-15deg);\n  }\n`;\n\nexport const CardItem = styled.div`\n  width: 100%;\n  min-height: 139px;\n  border-radius: 10px;\n  padding: 24px 14px;\n  background-color: var(--card-bg);\n  list-style-type: none;\n  border-left: ${({ $label }) => `7px solid var(--priority-${$label})`};\n  word-break: break-all;\n  cursor: grab;\n  transition: outline 100ms linear;\n\n  &:hover,\n  &:focus {\n    outline: 2px solid var(--accent-color) !important;\n  }\n\n  & > div {\n    display: flex;\n    align-items: flex-ends;\n    justify-content: space-between;\n  }\n\n  li {\n    position: relative;\n  }\n\n  @media screen and (min-width: 375px) {\n    width: 330px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 335px;\n  }\n`;\n\nexport const CardTitle = styled.h4`\n  margin-bottom: 8px;\n  color: var(--text-color);\n`;\n\nexport const CardDescr = styled.p`\n  width: 290px;\n  max-width: 100%;\n  font-size: 12px;\n  line-height: 1.33333;\n  color: var(--text-color);\n  opacity: 0.7;\n  margin-bottom: 14px;\n  cursor: pointer;\n`;\n\nexport const InfoWrap = styled.div`\n  display: flex;\n  gap: 14px;\n\n  div {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n  }\n\n  h5 {\n    font-weight: 400;\n    font-size: 8px;\n    color: var(--text-color);\n    opacity: 0.5;\n    margin-bottom: 4px;\n  }\n`;\n\nexport const Deadline = styled.span`\n  font-size: 9px;\n  text-decoration: ${({ $isDeadlinePassed }) =>\n    $isDeadlinePassed ? 'line-through' : 'none'};\n  color: ${({ $isDeadlinePassed }) =>\n    $isDeadlinePassed ? 'var(--error-color)' : 'var(--text-color)'};\n\n  @media screen and (min-width: 768px) {\n    font-size: 10px;\n  }\n`;\n\nexport const Priority = styled.p`\n  font-size: 9px;\n  color: var(--text-color);\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  text-transform: capitalize;\n\n  &::before {\n    content: '';\n    display: block;\n    width: 12px;\n    height: 12px;\n    border-radius: 50%;\n    background-color: ${({ $label }) => `var(--priority-${$label})`};\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 10px;\n  }\n`;\n\nexport const BtnsList = styled.ul`\n  display: flex;\n  align-items: flex-end;\n  gap: 7px;\n`;\n\nexport const DeadlineModal = styled.div`\n  position: absolute;\n  top: -155%;\n  left: -270%;\n  width: 110px;\n  height: 30px;\n  border-radius: 15px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 9px;\n  color: var(--text-color);\n  opacity: 0;\n  background-color: var(--background-color);\n  box-shadow: var(--box-shadow);\n  visibility: hidden;\n  transition: opacity var(--easedTransition), visibility var(--easedTransition);\n`;\n\nexport const CardActionButton = styled.button`\n  background-color: transparent;\n  padding: 0;\n\n  &#deadline-bell:hover + #deadline-modal,\n  &#deadline-bell:focus + #deadline-modal {\n    opacity: 1;\n    visibility: visible;\n  }\n\n  &#move-card:hover + #move-popup,\n  &#move-card:focus + #move-popup {\n    background-color: var(--popup-bg);\n    border: 1px solid var(--text-color);\n    opacity: 1;\n    visibility: visible;\n    height: auto;\n  }\n\n  &#deadline-bell svg {\n    animation: ${swingAnimation} 1s ease-in-out infinite alternate;\n    filter: drop-shadow(1px 1px 3px var(--accent-color));\n  }\n\n  &#deadline-bell svg path {\n    opacity: 1;\n    stroke: var(--accent-color);\n  }\n\n  svg {\n    transition: filter var(--easedTransition);\n  }\n\n  svg path {\n    stroke: var(--icon-stroke-color);\n    opacity: 50%;\n    transition: stroke var(--easedTransition), opacity var(--easedTransition);\n  }\n\n  &:hover svg path {\n    stroke: var(--accent-color);\n    opacity: 100%;\n  }\n\n  &:hover svg {\n    filter: drop-shadow(1px 1px 5px var(--accent-color));\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport i18next from 'i18next';\nimport { useSortable } from '@dnd-kit/sortable';\nimport { CSS } from '@dnd-kit/utilities';\nimport { deleteCard, moveCard } from '../../../redux/cards/cardsOperations';\nimport {\n  formatDate,\n  makeValidDate,\n  handleTextOverflow,\n  determineDeadline,\n  determineLabelColor,\n  changePriorityLang,\n  compareDates,\n} from 'helpers';\nimport Status from 'components/Icons/Status';\nimport Pencil from 'components/Icons/Pencil';\nimport Trash from 'components/Icons/Trash';\nimport Bell from 'components/Icons/Bell';\nimport DeleteModal from 'components/Modals/DeleteModal';\nimport MovePopUp from '../MovePopUp';\nimport {\n  CardItem,\n  CardTitle,\n  CardDescr,\n  InfoWrap,\n  Deadline,\n  Priority,\n  BtnsList,\n  DeadlineModal,\n  CardActionButton,\n} from './TaskCard.styled';\nimport CardModal from 'components/Modals/CardModal/CardModal';\n\nconst TaskCard = ({ allColumns, columnId, card }) => {\n  const [showFullText, setShowFullText] = useState(false);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [isEditCardModalOpen, setIsEditCardModalOpen] = useState(false);\n\n  const {\n    setNodeRef,\n    attributes,\n    listeners,\n    transform,\n    transition,\n    isDragging,\n    isSorting,\n  } = useSortable({\n    id: card._id,\n    data: {\n      card,\n      type: 'Task',\n    },\n    transition: {\n      duration: 300,\n      easing: 'var(--dnd-transition)',\n    },\n  });\n\n  const style = {\n    transition,\n    transform: CSS.Transform.toString(transform),\n  };\n\n  const aboveCardStyle = {\n    ...style,\n    opacity: isSorting ? '30%' : '100%',\n  };\n\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n\n  const handleClick = () => {\n    setShowFullText(!showFullText);\n  };\n\n  const deleteOneCard = cardId => {\n    dispatch(deleteCard({ cardId, columnId }));\n  };\n\n  const moveCardToAnotherColumn = newColumn => {\n    dispatch(moveCard({ cardId: card._id, newColumn, oldColumn: columnId }));\n  };\n\n  if (isDragging) {\n    return (\n      <CardItem\n        ref={setNodeRef}\n        {...listeners}\n        {...attributes}\n        style={aboveCardStyle}\n      />\n    );\n  }\n\n  return (\n    <>\n      <CardItem\n        ref={setNodeRef}\n        {...listeners}\n        {...attributes}\n        style={aboveCardStyle}\n        $label={determineLabelColor(card.priority)}\n      >\n        <CardTitle>{card.title}</CardTitle>\n        <CardDescr onClick={handleClick}>\n          {showFullText\n            ? card.description\n            : handleTextOverflow(card.description)}\n        </CardDescr>\n        <hr />\n\n        <div>\n          <InfoWrap>\n            <div>\n              <h5>{t('cards.priority')}</h5>\n              <Priority $label={determineLabelColor(card.priority)}>\n                {i18next.language === 'en'\n                  ? card.priority\n                  : changePriorityLang(card.priority)}\n              </Priority>\n            </div>\n\n            <div>\n              <h5>{t('cards.deadline')}</h5>\n              <Deadline\n                $isDeadlinePassed={compareDates(new Date(card.deadline))}\n              >\n                {formatDate(makeValidDate(card.deadline))}\n              </Deadline>\n            </div>\n          </InfoWrap>\n\n          <BtnsList>\n            {determineDeadline(card.deadline) && (\n              <li>\n                <CardActionButton\n                  id=\"deadline-bell\"\n                  type=\"button\"\n                  aria-label=\"Deadline is today\"\n                  onClick={e => (e.target.style.animation = 'none')}\n                >\n                  <Bell\n                    width={16}\n                    height={16}\n                    strokeColor={'var(--icon-stroke-color)'}\n                  />\n                </CardActionButton>\n\n                <DeadlineModal id=\"deadline-modal\">\n                  <p>{t('cards.deadlineToday')}</p>\n                </DeadlineModal>\n              </li>\n            )}\n            {allColumns.length >= 2 && (\n              <li>\n                <CardActionButton\n                  id=\"move-card\"\n                  type=\"button\"\n                  aria-label=\"Move card\"\n                >\n                  <Status\n                    width={16}\n                    height={16}\n                    strokeColor={'var(--icon-stroke-color)'}\n                  />\n                </CardActionButton>\n                <MovePopUp\n                  allColumns={allColumns}\n                  columnId={columnId}\n                  moveCard={moveCardToAnotherColumn}\n                />\n              </li>\n            )}\n            <li>\n              <CardActionButton\n                type=\"button\"\n                aria-label=\"Edit card\"\n                onClick={() => {\n                  setIsEditCardModalOpen(true);\n                }}\n              >\n                <Pencil\n                  width={16}\n                  height={16}\n                  strokeColor={'var(--icon-stroke-color)'}\n                />\n              </CardActionButton>\n            </li>\n            <li>\n              <CardActionButton\n                type=\"button\"\n                aria-label=\"Delete card\"\n                onClick={() => setIsDeleteModalOpen(true)}\n              >\n                <Trash\n                  width={16}\n                  height={16}\n                  strokeColor={'var(--icon-stroke-color)'}\n                />\n              </CardActionButton>\n            </li>\n          </BtnsList>\n        </div>\n      </CardItem>\n\n      {isEditCardModalOpen && (\n        <CardModal\n          activeCard={card}\n          columnId={columnId}\n          variant=\"edit\"\n          closeCardModal={() => setIsEditCardModalOpen(false)}\n        />\n      )}\n\n      {isDeleteModalOpen && (\n        <DeleteModal\n          onClose={() => setIsDeleteModalOpen(false)}\n          onConfirm={() => deleteOneCard(card._id)}\n        />\n      )}\n    </>\n  );\n};\n\nexport default TaskCard;\n","import styled from 'styled-components';\n\nexport const Wrap = styled.div`\n  display: flex;\n  height: 100%;\n  padding-top: 39px;\n  padding-bottom: 24px;\n  overflow-x: auto;\n  scroll-behavior: smooth !important;\n\n  &::-webkit-scrollbar-thumb {\n    border-radius: 12px;\n  }\n\n  &::-webkit-scrollbar {\n    height: 12px;\n  }\n\n  &::-webkit-scrollbar-track {\n    border-radius: 12px;\n  }\n\n  @media screen and (min-width: 768px) {\n    padding-top: 26px;\n    padding-bottom: 52px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding-top: 10px;\n    padding-bottom: 36px;\n  }\n`;\n\nexport const EmptyMsg = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  text-align: center;\n  border-radius: 8px;\n  padding: 10px 30px;\n  transform: translate(-50%, -50%);\n  background-color: var(--background-color);\n\n  @media screen and (min-width: 1440px) {\n    transform: unset;\n  }\n`;\n\nexport const ColumnsList = styled.ul`\n  display: flex;\n  gap: 12px;\n  margin-right: 34px;\n  scroll-behavior: smooth;\n\n  @media screen and (min-width: 375px) {\n    gap: 34px;\n  }\n`;\n\nexport const IconWrap = styled.span`\n  margin-right: 8px;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  width: 28px;\n  height: 28px;\n  border-radius: 6px;\n  background-color: var(--plus-icon-bg);\n  transition: all var(--easedTransition);\n\n  & svg {\n    stroke: var(--card-bg);\n    transition: all var(--easedTransition);\n  }\n`;\n\nexport const AddButton = styled.button`\n  min-width: 100%;\n  height: 56px;\n  border: none;\n  border-radius: 8px;\n  background-color: var(--card-bg);\n  color: inherit;\n  font-weight: 500;\n  transition: all var(--easedTransition);\n\n  &:hover {\n    background-color: var(--plus-btn-hover);\n\n    ${IconWrap} {\n      background-color: var(--card-bg);\n      & svg {\n        stroke: var(--plus-icon-bg);\n      }\n    }\n  }\n\n  @media screen and (min-width: 375px) {\n    min-width: 335px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const ColumnWrap = styled.div`\n  width: calc(100% - 50px);\n  min-width: 270px;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n\n  @media screen and (min-width: 375px) {\n    width: 335px;\n  }\n`;\n\nexport const ColumnTitleWrap = styled.div`\n  min-width: 100%;\n  min-height: 56px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0 20px;\n  margin-bottom: 14px;\n  border-radius: 8px;\n  background-color: var(--card-bg);\n  font-weight: 500;\n\n  & h3 {\n    font-size: 14px;\n    font-weight: 500;\n  }\n\n  @media screen and (min-width: 375px) {\n    min-width: 335px;\n  }\n`;\n\nexport const ButtonsList = styled.ul`\n  display: flex;\n`;\n\nexport const ColumnButton = styled.button`\n  background-color: transparent;\n  padding: 4px;\n\n  svg {\n    transition: filter var(--easedTransition);\n  }\n\n  svg path {\n    stroke: var(--icon-stroke-color);\n    opacity: 50%;\n    transition: stroke var(--easedTransition), opacity var(--easedTransition);\n  }\n\n  &:hover svg path {\n    stroke: var(--accent-color);\n    opacity: 100%;\n  }\n\n  &:hover svg {\n    filter: drop-shadow(1px 1px 5px var(--accent-color));\n  }\n`;\n\nexport const IconWrap = styled.span`\n  margin-right: 8px;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  width: 28px;\n  height: 28px;\n  border-radius: 6px;\n  background-color: var(--btn-icon-bg);\n  transition: all var(--easedTransition);\n\n  & svg {\n    stroke: var(--btn-icon-color);\n    transition: all var(--easedTransition);\n  }\n`;\n\nexport const AddButton = styled.button`\n  margin-top: auto;\n  min-width: 100%;\n  min-height: 56px;\n  border: none;\n  border-radius: 8px;\n  background-color: var(--accent-color);\n  color: var(--btn-icon-bg);\n  font-weight: 500;\n  transition: all var(--easedTransition);\n\n  &:hover {\n    background-color: var(--accent-btn-hover);\n  }\n`;\n\nexport const CardsList = styled.ul`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  margin-bottom: 14px;\n  border-radius: 8px;\n  padding: 5px;\n  background-color: ${({ $isOver }) =>\n    $isOver ? 'var(--card-list-bg)' : 'transparent'};\n  width: 100%;\n  height: calc(100vh - 144px - 130px);\n  overflow-y: auto;\n  overflow-x: hidden;\n\n  &::-webkit-scrollbar-thumb {\n    border-radius: 12px;\n  }\n\n  &::-webkit-scrollbar {\n    width: 8px;\n  }\n\n  &::-webkit-scrollbar-track {\n    border-radius: 12px;\n  }\n\n  @media screen and (min-width: 375px) {\n    min-width: 350px;\n  }\n\n  @media screen and (min-width: 768px) {\n    min-width: 355px;\n    padding-right: 8px;\n    max-height: calc(100vh - 150px - 166px);\n  }\n\n  @media screen and (min-width: 1440px) {\n    max-height: calc(100vh - 118px - 106px);\n  }\n`;\n","import { useState, useEffect, useMemo } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport { useDroppable } from '@dnd-kit/core';\nimport {\n  SortableContext,\n  verticalListSortingStrategy,\n} from '@dnd-kit/sortable';\nimport { deleteColumn } from '../../../redux/columns/columnsOperations';\nimport Pencil from 'components/Icons/Pencil';\nimport Trash from 'components/Icons/Trash';\nimport ColumnModal from 'components/Modals/ColumnModal';\nimport CardModal from 'components/Modals/CardModal';\nimport Plus from 'components/Icons/Plus';\nimport DeleteModal from 'components/Modals/DeleteModal/DeleteModal';\nimport TaskCard from '../TaskCard';\nimport { EmptyMsg } from '../Dashboard.styled';\nimport {\n  AddButton,\n  ButtonsList,\n  CardsList,\n  ColumnButton,\n  ColumnTitleWrap,\n  ColumnWrap,\n  IconWrap,\n} from './Column.styled';\n\nconst Column = ({ allColumns, column }) => {\n  const [isEditColumnModalOpen, setIsEditColumnModalOpen] = useState(false);\n  const [isAddCardModalOpen, setIsAddCardModalOpen] = useState(false);\n  const [isDeleteModalShown, setIsDeleteModalShown] = useState(false);\n  const [showEmptyMsg, setShowEmptyMsg] = useState(false);\n\n  const cardsId = useMemo(\n    () => column?.cards?.map(card => card?._id) ?? [],\n    [column?.cards]\n  );\n\n  useEffect(() => {\n    const columns = allColumns?.filter(column => column?.cards?.length !== 0);\n\n    if (!columns?.length) {\n      setShowEmptyMsg(true);\n    } else {\n      setShowEmptyMsg(false);\n    }\n  }, [setShowEmptyMsg, allColumns]);\n\n  const { setNodeRef, isOver } = useDroppable({\n    id: column._id,\n    data: {\n      column,\n    },\n  });\n\n  const dispatch = useDispatch();\n  const { t } = useTranslation();\n\n  const handleColumnDelete = () => {\n    dispatch(deleteColumn(column._id));\n    setIsDeleteModalShown(false);\n  };\n\n  return (\n    <>\n      <ColumnWrap>\n        <ColumnTitleWrap>\n          <h3>{column.title}</h3>\n          <ButtonsList>\n            <li>\n              <ColumnButton\n                type=\"button\"\n                aria-label=\"Edit column title\"\n                onClick={() => setIsEditColumnModalOpen(true)}\n              >\n                <Pencil\n                  width={16}\n                  height={16}\n                  strokeColor={'var(--plus-icon-bg)'}\n                />\n              </ColumnButton>\n            </li>\n            <li>\n              <ColumnButton\n                id=\"column-delete\"\n                type=\"button\"\n                aria-label=\"Delete column\"\n                onClick={() => setIsDeleteModalShown(true)}\n              >\n                <Trash\n                  width={16}\n                  height={16}\n                  strokeColor={'var(--plus-icon-bg)'}\n                />\n              </ColumnButton>\n            </li>\n          </ButtonsList>\n        </ColumnTitleWrap>\n        {showEmptyMsg ? (\n          <EmptyMsg>{t('cards.empty')}</EmptyMsg>\n        ) : (\n          <SortableContext\n            id={column._id}\n            items={cardsId}\n            strategy={verticalListSortingStrategy}\n          >\n            <CardsList ref={setNodeRef} $isOver={isOver}>\n              {column.cards &&\n                column.cards.map(card => (\n                  <li key={card._id}>\n                    <TaskCard\n                      allColumns={allColumns}\n                      columnId={column._id}\n                      card={card}\n                    />\n                  </li>\n                ))}\n            </CardsList>\n          </SortableContext>\n        )}\n        <AddButton type=\"button\" onClick={() => setIsAddCardModalOpen(true)}>\n          <IconWrap>\n            <Plus width={14} height={14} />\n          </IconWrap>\n          {t('cards.addButton')}\n        </AddButton>\n      </ColumnWrap>\n\n      {isEditColumnModalOpen && (\n        <ColumnModal\n          variant=\"edit\"\n          closeModal={() => setIsEditColumnModalOpen(false)}\n          columnId={column._id}\n          columnName={column.title}\n        />\n      )}\n\n      {isAddCardModalOpen && (\n        <CardModal\n          columnId={column._id}\n          variant=\"add\"\n          closeCardModal={() => setIsAddCardModalOpen(false)}\n        />\n      )}\n\n      {isDeleteModalShown && (\n        <DeleteModal\n          onClose={() => setIsDeleteModalShown(false)}\n          onConfirm={handleColumnDelete}\n        />\n      )}\n    </>\n  );\n};\n\nexport default Column;\n","import { useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { useTranslation } from 'react-i18next';\nimport {\n  DndContext,\n  DragOverlay,\n  PointerSensor,\n  useSensors,\n  useSensor,\n  closestCorners,\n} from '@dnd-kit/core';\nimport { useDispatch } from 'react-redux';\nimport { changeCardOrder, moveCard } from '../../redux/cards/cardsOperations';\nimport Plus from 'components/Icons/Plus';\nimport ColumnModal from 'components/Modals/ColumnModal';\nimport Column from './Column';\nimport TaskCard from './TaskCard/TaskCard';\nimport { AddButton, ColumnsList, IconWrap, Wrap } from './Dashboard.styled';\n\nconst Dashboard = ({ board }) => {\n  const [isAddColumnModalOpen, setIsAddColumnModalOpen] = useState(false);\n  const [druggedCard, setDruggedCard] = useState(null);\n  const [activeColumnId, setActiveColumnId] = useState(null);\n\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n\n  const sensors = useSensors(\n    useSensor(PointerSensor, {\n      activationConstraint: {\n        distance: 3,\n      },\n    })\n  );\n\n  const onDragStart = event => {\n    const { data } = event.active;\n    setDruggedCard(data.current?.card);\n    setActiveColumnId(data.current?.sortable?.containerId);\n  };\n\n  const onDragEnd = event => {\n    setDruggedCard(null);\n    const { active, over } = event;\n\n    if (!over) return;\n\n    const activeId = active.id;\n    const overId = over.id;\n\n    if (activeId === overId) return;\n\n    const isOverTheSame =\n      over.data.current?.sortable &&\n      active.data.current?.sortable.containerId ===\n        over.data.current?.sortable.containerId;\n\n    if (!isOverTheSame) {\n      dispatch(\n        moveCard({\n          cardId: activeId,\n          newColumn:\n            over.data.current?.sortable?.containerId ??\n            over.data.current?.column?._id,\n          oldColumn: active.data.current?.sortable.containerId,\n        })\n      );\n    } else {\n      const newIndex = over.data.current.sortable.index;\n\n      dispatch(\n        changeCardOrder({\n          cardId: activeId,\n          columnId: activeColumnId,\n          order: newIndex,\n        })\n      );\n    }\n  };\n\n  return (\n    <Wrap>\n      {board?.columns?.length > 0 && (\n        <DndContext\n          sensors={sensors}\n          collisionDetection={closestCorners}\n          onDragStart={onDragStart}\n          onDragEnd={onDragEnd}\n          autoScroll={{}}\n        >\n          <ColumnsList>\n            {board.columns.map(column => (\n              <li key={column._id}>\n                <Column allColumns={board.columns} column={column} />\n              </li>\n            ))}\n          </ColumnsList>\n          {createPortal(\n            <DragOverlay style={druggedCard}>\n              {druggedCard && (\n                <TaskCard\n                  allColumns={board?.columns}\n                  columnId={activeColumnId}\n                  card={druggedCard}\n                />\n              )}\n            </DragOverlay>,\n            document.body\n          )}\n        </DndContext>\n      )}\n\n      <AddButton type=\"button\" onClick={() => setIsAddColumnModalOpen(true)}>\n        <IconWrap>\n          <Plus width={14} height={14} />\n        </IconWrap>\n        {t('columns.addButton')}\n      </AddButton>\n\n      {isAddColumnModalOpen && (\n        <ColumnModal\n          variant=\"add\"\n          closeModal={() => setIsAddColumnModalOpen(false)}\n        />\n      )}\n    </Wrap>\n  );\n};\n\nexport default Dashboard;\n","import styled from 'styled-components';\n\nexport const HeaderWrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  & h2 {\n    font-weight: 500;\n    font-size: 14px;\n    background-color: var(--background-color);\n    padding: 0 20px;\n    border-radius: 8px;\n\n    @media screen and (min-width: 768px) {\n      font-size: 18px;\n    }\n  }\n`;\n\nexport const FilterButton = styled.button`\n  display: flex;\n  gap: 8px;\n  align-items: center;\n  background-color: var(--background-color);\n  padding: 0 20px;\n  border-radius: 8px;\n  font-weight: 500;\n  font-size: 14px;\n  color: var(--text-color);\n  transition: all var(--easedTransition);\n\n  & svg {\n    stroke: var(--text-color);\n    fill: transparent;\n    transition: all var(--easedTransition);\n  }\n\n  &:hover {\n    color: var(--accent-btn-hover);\n    & svg {\n      stroke: var(--accent-btn-hover);\n    }\n  }\n`;\n","const Filter = ({ width, height, fillColor, strokeColor }) => {\n  return (\n    <svg\n      width={width || '14px'}\n      height={height || '14px'}\n      viewBox=\"0 0 16 16\"\n      fill={fillColor || 'none'}\n      stroke={strokeColor || null}\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M14.6668 2H1.3335L6.66683 8.30667V12.6667L9.3335 14V8.30667L14.6668 2Z\"\n        strokeWidth=\"1.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </svg>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const TitleContainer = styled.div`\n  justify-content: space-between;\n  margin-bottom: 14px;\n`;\n\nexport const Title = styled.h2`\n  font-size: 18px;\n  font-weight: 500;\n  line-height: normal;\n`;\n\nexport const ClearFilterBox = styled.div`\n  display: flex;\n  border-top: 1px solid var(--underline-color);\n  margin-bottom: 14px;\n  padding-top: 14px;\n`;\n\nexport const ClearTitle = styled.h3`\n  display: flex;\n  flex-shrink: 0;\n  margin-right: auto;\n  font-weight: 500;\n  line-height: normal;\n`;\n\nexport const ClearButton = styled.button`\n  color: var(--lightgrey-text-color);\n  font-size: 12px;\n  line-height: normal;\n  letter-spacing: -0.24px;\n  background-color: inherit;\n  text-decoration-line: underline;\n\n  @media screen and (min-width: 768px) {\n    &:hover,\n    &:focus {\n      color: var(--text-color);\n    }\n  }\n`;\n\nexport const RadioButtonBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  color: var(--lightgrey-text-color);\n`;\n\nexport const RadioButton = styled.input`\n  position: absolute;\n  z-index: 999;\n  cursor: pointer;\n  top: 4px;\n  left: 0;\n  border-radius: 50%;\n  margin: 0;\n  width: 14px;\n  height: 14px;\n  opacity: 0;\n`;\n\nexport const StyledMarker = styled.span`\n  width: 14px;\n  height: 14px;\n  border-radius: 50%;\n  cursor: pointer;\n  transition: outline 50ms linear;\n  background-color: ${({ $color }) => `var(--priority-${$color})`};\n`;\n\nexport const PriorityFilterLabel = styled.label`\n  font-size: 14px;\n  position: relative;\n  display: inline-flex;\n  gap: 8px;\n  justify-content: center;\n  align-items: center;\n  color: var(--lightgrey-text-color);\n  cursor: pointer;\n\n  &:not(:last-child) {\n    margin-bottom: 12px;\n  }\n\n  input[type='radio']:checked + ${StyledMarker} {\n    outline: ${({ $color }) => `1px solid var(--priority-${$color})`};\n    border: 2px solid var(--modal-background);\n  }\n\n  @media screen and (min-width: 768px) {\n    &:hover,\n    &:focus {\n      color: var(--text-color);\n    }\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { LABEL_ARR } from 'constants';\nimport { useTranslation } from 'react-i18next';\nimport { getOneBoard } from '../../../redux/board/boardOperations';\nimport { filterCards } from '../../../redux/cards/cardsOperations';\nimport ModalWrapper from 'components/Modals/ModalWrapper/ModalWrapper';\nimport {\n  TitleContainer,\n  Title,\n  ClearFilterBox,\n  ClearTitle,\n  ClearButton,\n  RadioButtonBox,\n  RadioButton,\n  PriorityFilterLabel,\n  StyledMarker,\n} from './Filters.styled';\n\nconst Filters = ({ boardId, onClose }) => {\n  const [filterValue, setFilterValue] = useState('');\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n\n  const newLabelArr = [\n    { ...LABEL_ARR.find(item => item.id === 3) },\n    ...LABEL_ARR.filter(item => item.id !== 3),\n  ];\n\n  const handleFilterChange = newValue => {\n    setFilterValue(newValue);\n    dispatch(filterCards({ boardId: boardId, priority: newValue }));\n    onClose();\n  };\n\n  const handleDefaultFilter = () => {\n    dispatch(getOneBoard(boardId));\n    onClose();\n  };\n\n  return (\n    <ModalWrapper width={300} onClose={onClose}>\n      <TitleContainer>\n        <Title>{t('boards.filterButton')}</Title>\n      </TitleContainer>\n      <ClearFilterBox>\n        <ClearTitle>{t('boards.filter.label')}</ClearTitle>\n        <ClearButton type=\"button\" onClick={handleDefaultFilter}>\n          {t('boards.filter.all')}\n        </ClearButton>\n      </ClearFilterBox>\n      <RadioButtonBox>\n        {newLabelArr.map(({ id, priority, color }) => (\n          <PriorityFilterLabel key={id} $color={color}>\n            <RadioButton\n              type=\"radio\"\n              name=\"priority\"\n              value={priority}\n              checked={filterValue === priority}\n              $color={color}\n              onChange={() => handleFilterChange(priority)}\n            />\n            <StyledMarker $color={color}></StyledMarker>\n            {t(`boards.filter.${priority}`)}\n          </PriorityFilterLabel>\n        ))}\n      </RadioButtonBox>\n    </ModalWrapper>\n  );\n};\n\nexport default Filters;\n","import { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { FilterButton, HeaderWrap } from './BoardHeader.styled';\nimport Filter from 'components/Icons/Filter';\nimport Filters from '../Filters/Filters';\n\nconst BoardHeader = ({ title, boardId }) => {\n  const { t } = useTranslation();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  return (\n    <>\n      <HeaderWrap>\n        <h2>{title}</h2>\n        <FilterButton type=\"button\" onClick={openModal}>\n          <Filter width={14} height={14} />\n          {t('boards.filterButton')}\n        </FilterButton>\n      </HeaderWrap>\n      {isModalOpen && (\n        <Filters boardId={boardId} onClose={() => setIsModalOpen(false)} />\n      )}\n    </>\n  );\n};\n\nexport default BoardHeader;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { getOneBoard } from '../redux/board/boardOperations';\nimport { selectOneBoard, selectIsLoading } from '../redux/board/boardSelectors';\nimport { MainContainer } from 'components/App/App.styled';\nimport Dashboard from 'components/Dashboard';\nimport BoardHeader from 'components/Dashboard/BoardHeader';\nimport Loader from 'components/Loader';\n\nconst ScreensPage = () => {\n  const { boardId } = useParams();\n  const dispatch = useDispatch();\n  const board = useSelector(selectOneBoard);\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(getOneBoard(boardId));\n  }, [dispatch, boardId]);\n\n  return (\n    <MainContainer $bg={board.background}>\n      <BoardHeader title={board.title} boardId={boardId} />\n      {isLoading ? <Loader /> : <Dashboard board={board} />}\n    </MainContainer>\n  );\n};\n\nexport default ScreensPage;\n"],"names":["MainContainer","styled","_templateObject","_taggedTemplateLiteral","_ref","$bg","concat","backgroundMobileURL","_ref2","backgroundMobile2xURL","_ref3","backgroundTabletURL","_ref4","backgroundTablet2xURL","_ref5","backgroundDesktopURL","_ref6","backgroundDesktop2xURL","inputsCommonStyles","css","CardModalContent","_templateObject2","CardForm","_templateObject3","ErrorLabel","_templateObject4","LabelRadioList","_templateObject5","RadioBtn","_templateObject6","$color","LabelRadioLabel","_templateObject7","CalendarContainer","_templateObject8","SubmitBtn","_templateObject9","$variant","variant","closeModal","columnId","columnName","_useState","useState","_useState2","_slicedToArray","errorMsgShown","setErrorMsgShown","_useState3","_useState4","errorClassName","setErrorClassName","boardId","useParams","dispatch","useDispatch","t","useTranslation","titleRef","useRef","useEffect","current","focus","_jsx","ModalWrapper","width","onClose","children","_jsxs","onSubmit","e","preventDefault","title","target","elements","value","trim","newColumn","board","addColumn","editColumn","editedColumn","id","toast","TOASTER_CONFIG","className","ref","type","name","placeholder","defaultValue","maxLength","onChange","validateInputMaxLength","Plus","height","React","selectedDate","setDate","toggleCalendar","minDate","Date","setDefaultLocale","registerLocale","uk","ReactDatePicker","locale","i18next","selected","date","calendarStartDay","dateFormat","onCalendarOpen","onCalendarClose","closeCardModal","activeCard","priority","cardPriority","setCardPriority","isCalendarOpen","setIsCalendarOpen","_useState5","deadline","_useState6","setSelectedDay","_useState7","_useState8","_useState9","_useState10","datePickerRef","_e$target$elements","description","dateForServer","makeValidDate","isTheDateLessThanNow","cardInfo","column","addCard","editCard","cardId","_id","editedCard","autoComplete","LABEL_ARR","color","checked","htmlFor","onClick","setOpen","IoIosArrowUp","IoIosArrowDown","Calendar","fillColor","strokeColor","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","Popup","allColumns","moveCard","filter","map","Status","swingAnimation","keyframes","CardItem","$label","CardTitle","CardDescr","InfoWrap","Deadline","$isDeadlinePassed","Priority","BtnsList","DeadlineModal","CardActionButton","_templateObject10","card","showFullText","setShowFullText","isDeleteModalOpen","setIsDeleteModalOpen","isEditCardModalOpen","setIsEditCardModalOpen","_useSortable","useSortable","data","transition","duration","easing","setNodeRef","attributes","listeners","transform","isDragging","isSorting","style","CSS","aboveCardStyle","_objectSpread","opacity","_Fragment","determineLabelColor","handleTextOverflow","changePriorityLang","compareDates","formatDate","determineDeadline","animation","Bell","length","MovePopUp","oldColumn","Pencil","Trash","CardModal","DeleteModal","onConfirm","deleteCard","Wrap","EmptyMsg","ColumnsList","IconWrap","AddButton","ColumnWrap","ColumnTitleWrap","ButtonsList","ColumnButton","CardsList","$isOver","isEditColumnModalOpen","setIsEditColumnModalOpen","isAddCardModalOpen","setIsAddCardModalOpen","isDeleteModalShown","setIsDeleteModalShown","showEmptyMsg","setShowEmptyMsg","cardsId","useMemo","_column$cards$map","_column$cards","cards","columns","_column$cards2","_useDroppable","useDroppable","isOver","SortableContext","items","strategy","verticalListSortingStrategy","TaskCard","ColumnModal","deleteColumn","_board$columns","isAddColumnModalOpen","setIsAddColumnModalOpen","druggedCard","setDruggedCard","activeColumnId","setActiveColumnId","sensors","useSensors","useSensor","PointerSensor","activationConstraint","distance","DndContext","collisionDetection","closestCorners","onDragStart","event","_data$current","_data$current2","_data$current2$sortab","active","sortable","containerId","onDragEnd","_over$data$current","_active$data$current","_over$data$current2","over","activeId","newIndex","index","changeCardOrder","order","_over$data$current$so","_over$data$current3","_over$data$current3$s","_over$data$current4","_over$data$current4$c","_active$data$current2","autoScroll","Column","createPortal","DragOverlay","document","body","HeaderWrap","FilterButton","TitleContainer","Title","ClearFilterBox","ClearTitle","ClearButton","RadioButtonBox","RadioButton","StyledMarker","PriorityFilterLabel","filterValue","setFilterValue","newLabelArr","item","_toConsumableArray","getOneBoard","newValue","filterCards","isModalOpen","setIsModalOpen","Filter","Filters","useSelector","selectOneBoard","isLoading","selectIsLoading","background","BoardHeader","Loader","Dashboard"],"sourceRoot":""}