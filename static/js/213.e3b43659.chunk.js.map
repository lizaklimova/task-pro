{"version":3,"file":"static/js/213.e3b43659.chunk.js","mappings":"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","sources":["components/App/App.styled.jsx","components/Modals/CardModal/CardModal.styled.jsx","components/Modals/ColumnModal/ColumnModal.jsx","components/Calendar/Calendar.jsx","components/Modals/CardModal/CardModal.jsx","components/Icons/Status.jsx","components/Icons/Bell.jsx","components/Dashboard/MovePopUp/MovePopUp.styled.jsx","components/Dashboard/MovePopUp/MovePopUp.jsx","components/Dashboard/TaskCard/TaskCard.styled.jsx","components/Dashboard/TaskCard/TaskCard.jsx","components/Dashboard/Column/Column.styled.jsx","components/Dashboard/Column/Column.jsx","components/Dashboard/Dashboard.styled.jsx","components/Dashboard/Dashboard.jsx","components/Dashboard/BoardHeader/BoardHeader.styled.jsx","components/Icons/Filter.jsx","components/Dashboard/Filters/Filters.styled.jsx","components/Dashboard/Filters/Filters.jsx","components/Dashboard/BoardHeader/BoardHeader.jsx","pages/ScreensPage.jsx"],"sourcesContent":["import { styled } from 'styled-components';\n\nexport const MainContainer = styled.div`\n  height: calc(100vh - 60px);\n  width: calc(100vw - 12px);\n  padding: 14px 20px 24px 20px;\n  background: ${({ $bg }) =>\n    $bg\n      ? `center / cover no-repeat\n    url(${$bg.backgroundMobileURL})`\n      : 'unset'};\n\n  @media screen and (-webkit-min-device-pixel-ratio: 2) {\n    background: ${({ $bg }) =>\n      $bg\n        ? `center / cover no-repeat\n    url(${$bg.backgroundMobile2xURL})`\n        : 'unset'};\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 26px 32px 52px 32px;\n    height: calc(100vh - 68px);\n    background: ${({ $bg }) =>\n      $bg\n        ? `center / cover no-repeat\n    url(${$bg.backgroundTabletURL})`\n        : 'unset'};\n  }\n\n  @media screen and (min-width: 768px) and (-webkit-min-device-pixel-ratio: 2) {\n    background: ${({ $bg }) =>\n      $bg\n        ? `center / cover no-repeat\n    url(${$bg.backgroundTablet2xURL})`\n        : 'unset'};\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: calc(100vw - 260px - 12px);\n    padding: 10px 24px 36px 24px;\n    background: ${({ $bg }) =>\n      $bg\n        ? `center / cover no-repeat\n    url(${$bg.backgroundDesktopURL})`\n        : 'unset'};\n  }\n\n  @media screen and (min-width: 1440px) and (-webkit-min-device-pixel-ratio: 2) {\n    background: ${({ $bg }) =>\n      $bg\n        ? `center / cover no-repeat\n    url(${$bg.backgroundDesktop2xURL})`\n        : 'unset'};\n  }\n`;\n","import { styled, css } from 'styled-components';\n\nconst inputsCommonStyles = css`\n  border: 1px solid var(--accent-color);\n  border-radius: 8px;\n  padding: 14px 18px;\n  color: var(--text-color);\n  background-color: transparent;\n  box-shadow: 0 4px 16px 0 rgba(22, 22, 22, 0.08);\n  opacity: 0.4;\n  transition: opacity var(--easedTransition);\n\n  &:focus {\n    opacity: 1;\n    outline: none;\n  }\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const CardModalContent = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  p {\n    font-weight: 500;\n    font-size: 18px;\n    margin-bottom: 24px;\n  }\n\n  .react-datepicker__input-container {\n    input[type='text'] {\n      border: none !important;\n      padding: 0px !important;\n      margin-bottom: 0;\n      opacity: 1;\n      color: var(--accent-color);\n      box-shadow: none;\n    }\n  }\n\n  .react-datepicker-wrapper {\n    margin-top: 4px;\n  }\n\n  .react-datepicker-popper {\n    left: 50% !important;\n    transform: translate(-50%, 20%) !important;\n  }\n\n  .react-datepicker * {\n    background-color: var(--background-color);\n    color: var(--text-color);\n    border-color: var(--accent-color);\n  }\n\n  .react-datepicker__navigation-icon::before {\n    border-color: var(--text-color);\n    transition: border-color var(--easedTransition);\n  }\n\n  .react-datepicker__navigation:hover\n    .react-datepicker__navigation-icon::before {\n    border-color: var(--accent-color);\n  }\n\n  .react-datepicker__day:hover:not(.react-datepicker__day--disabled) {\n    outline: 1px solid var(--text-color);\n    background-color: transparent;\n    border-radius: 50%;\n  }\n\n  .react-datepicker__day--selected {\n    background-color: var(--accent-color) !important;\n    color: var(--modal-background);\n    border-radius: 50%;\n  }\n\n  .react-datepicker__day--selected:hover {\n    outline: 1px solid var(--text-color);\n    background-color: var(--accent-color);\n    border-radius: 50%;\n  }\n\n  .react-datepicker__day--disabled {\n    cursor: not-allowed;\n  }\n`;\n\nexport const CardForm = styled.form`\n  display: flex;\n  flex-direction: column;\n\n  input[type='text'] {\n    ${inputsCommonStyles}\n    margin-bottom: 20px;\n\n    &.invalid {\n      border: 2px solid red;\n    }\n  }\n\n  textarea {\n    ${inputsCommonStyles}\n    line-height: 1.29;\n    margin-bottom: 24px;\n    resize: none;\n    height: 154px;\n  }\n\n  label {\n    font-size: 12px;\n    letter-spacing: -0.02em;\n    color: var(--lightgrey-text-color);\n    display: flex;\n    flex-direction: column;\n  }\n`;\n\nexport const ErrorLabel = styled.label`\n  position: relative;\n\n  p {\n    font-size: 10px;\n    position: absolute;\n    bottom: -20px;\n    color: red;\n  }\n`;\n\nexport const LabelRadioList = styled.ul`\n  display: flex;\n  gap: 8px;\n  margin-top: 4px;\n\n  li {\n    position: relative;\n  }\n`;\n\nexport const RadioBtn = styled.input`\n  position: absolute;\n  cursor: pointer;\n  z-index: 3;\n  top: 0;\n  opacity: 0;\n\n  &:checked + label::before {\n    outline: ${({ $color }) => `1px solid var(--priority-${$color})`};\n    border: 2px solid var(--modal-background);\n  }\n`;\n\nexport const LabelRadioLabel = styled.label`\n  margin-bottom: 14px;\n\n  &::before {\n    content: '';\n    width: 14px;\n    height: 14px;\n    border-radius: 50%;\n    background-color: ${({ $color }) => `var(--priority-${$color})`};\n    cursor: pointer;\n    transition: outline 50ms linear;\n  }\n`;\n\nexport const CalendarContainer = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 3px;\n\n  button {\n    display: flex;\n    align-items: center;\n    padding: 0;\n    padding-top: 5px;\n    background-color: transparent;\n\n    svg {\n      fill: var(--accent-color);\n    }\n  }\n`;\n\nexport const SubmitBtn = styled.button`\n  font-weight: 500;\n  border-radius: 8px;\n  padding: 10px;\n  background-color: var(--accent-color);\n  color: var(--btn-icon-bg);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  transition: var(--easedTransition);\n  margin-top: ${({ $variant }) => ($variant === 'column' ? '24px' : '40px')};\n\n  @media screen and (min-width: 1440px) {\n    &:hover,\n    &:focus {\n      opacity: 0.7;\n    }\n  }\n\n  span {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: 6px;\n    padding: 7px;\n    background-color: var(--btn-icon-bg);\n\n    svg path {\n      stroke: var(--btn-icon-color);\n    }\n  }\n`;\n","import { useState, useEffect, useRef } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport toast from 'react-hot-toast';\nimport { addColumn, editColumn } from '../../../redux/board/boardOperations';\nimport { TOASTER_CONFIG } from 'constants';\nimport { validateInputMaxLength } from 'helpers';\nimport ModalWrapper from 'components/Modals/ModalWrapper';\nimport Plus from 'components/Icons/Plus';\nimport {\n  CardForm,\n  CardModalContent,\n  ErrorLabel,\n  SubmitBtn,\n} from '../CardModal/CardModal.styled';\n\nconst ColumnModal = ({ variant, closeModal, columnId, columnName }) => {\n  const [errorMsg, setErrorMsg] = useState(null);\n  const [errorClassName, setErrorClassName] = useState('');\n\n  const { boardId } = useParams();\n  const dispatch = useDispatch();\n  const { t } = useTranslation();\n\n  const titleRef = useRef(null);\n\n  useEffect(() => {\n    titleRef.current.focus();\n  }, []);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const { value: title } = e.target.elements.title;\n\n    if (title.trim() === '') {\n      toast(t('columns.modals.toast.error'), TOASTER_CONFIG);\n      return;\n    }\n\n    const newColumn = {\n      board: boardId,\n      title,\n    };\n\n    variant === 'add'\n      ? dispatch(addColumn(newColumn))\n      : dispatch(editColumn({ editedColumn: newColumn, id: columnId }));\n\n    return closeModal();\n  };\n\n  return (\n    <ModalWrapper width={350} onClose={closeModal}>\n      <CardModalContent>\n        <p>\n          {variant === 'add'\n            ? t('columns.modals.addTitle')\n            : t('columns.modals.editTitle')}\n        </p>\n\n        <CardForm onSubmit={handleSubmit}>\n          <ErrorLabel>\n            <input\n              className={errorClassName}\n              ref={titleRef}\n              type=\"text\"\n              name=\"title\"\n              placeholder={\n                variant === 'add' ? t('columns.modals.input') : columnName\n              }\n              defaultValue={variant === 'add' ? '' : columnName}\n              maxLength={25}\n              onChange={e =>\n                validateInputMaxLength(e, setErrorMsg, setErrorClassName)\n              }\n            />\n            {errorMsg && <p>{errorMsg}</p>}\n          </ErrorLabel>\n\n          <SubmitBtn type=\"submit\" $variant=\"column\">\n            <span>\n              <Plus width={14} height={14} />\n            </span>\n            {variant === 'add'\n              ? t('columns.modals.addTitle')\n              : t('columns.modals.editTitle')}\n          </SubmitBtn>\n        </CardForm>\n      </CardModalContent>\n    </ModalWrapper>\n  );\n};\n\nexport default ColumnModal;\n","import React from 'react';\nimport i18next from 'i18next';\nimport ReactDatePicker, {\n  registerLocale,\n  setDefaultLocale,\n} from 'react-datepicker';\nimport { uk } from 'date-fns/locale/uk';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nconst Calendar = React.forwardRef(\n  ({ selectedDate, setDate, toggleCalendar }, ref) => {\n    const minDate = new Date();\n    setDefaultLocale('en');\n    registerLocale('uk', uk);\n\n    return (\n      <ReactDatePicker\n        ref={ref}\n        locale={\n          i18next.language === 'uk' || i18next.language === 'uk-UA'\n            ? 'uk'\n            : 'en'\n        }\n        selected={selectedDate}\n        onChange={date => setDate(date)}\n        minDate={minDate}\n        dateFormat=\"EEEE, d\"\n        onCalendarOpen={() => toggleCalendar(true)}\n        onCalendarClose={() => toggleCalendar(false)}\n      />\n    );\n  }\n);\n\nexport default Calendar;\n","import { useState, useRef, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport toast from 'react-hot-toast';\nimport { addCard, editCard } from '../../../redux/cards/cardsOperations';\nimport { IoIosArrowDown, IoIosArrowUp } from 'react-icons/io';\nimport { LABEL_ARR, TOASTER_CONFIG } from 'constants';\nimport { makeValidDate, validateInputMaxLength } from 'helpers';\nimport ModalWrapper from 'components/Modals/ModalWrapper';\nimport Calendar from 'components/Calendar';\nimport Plus from 'components/Icons/Plus';\nimport {\n  CardModalContent,\n  CardForm,\n  ErrorLabel,\n  LabelRadioList,\n  RadioBtn,\n  LabelRadioLabel,\n  CalendarContainer,\n  SubmitBtn,\n} from './CardModal.styled';\n\nconst CardModal = ({ columnId, variant, closeCardModal, activeCard }) => {\n  const [cardPriority, setCardPriority] = useState(\n    variant === 'add' ? 'without priority' : activeCard.priority\n  );\n  const [isCalendarOpen, setIsCalendarOpen] = useState(false);\n  const [selectedDate, setSelectedDay] = useState(\n    variant === 'add' ? new Date() : activeCard.deadline\n  );\n  const [errorMsg, setErrorMsg] = useState(null);\n  const [errorClassName, setErrorClassName] = useState('');\n\n  const datePickerRef = useRef(null);\n  const titleRef = useRef(null);\n\n  useEffect(() => {\n    titleRef.current.focus();\n  }, []);\n\n  const { boardId } = useParams();\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    const { title, description } = e.target.elements;\n\n    if (!title.value.trim() || !description.value.trim()) {\n      return toast(t('cards.modals.toast.error'), TOASTER_CONFIG);\n    }\n\n    const dateForServer = makeValidDate(selectedDate);\n\n    const cardInfo = {\n      title: title.value,\n      description: description.value,\n      priority: cardPriority,\n      deadline: dateForServer,\n      board: boardId,\n      column: columnId,\n    };\n\n    if (variant === 'add') {\n      dispatch(addCard(cardInfo));\n      toast(t('cards.modals.toast.add.success'), TOASTER_CONFIG);\n    } else {\n      dispatch(editCard({ cardId: activeCard._id, editedCard: cardInfo }));\n      toast(t('cards.modals.toast.edit.success'), TOASTER_CONFIG);\n    }\n    closeCardModal();\n  };\n\n  const openDatePicker = () => {\n    if (datePickerRef.current) {\n      datePickerRef.current.setOpen(true);\n    }\n  };\n\n  const closeDatePicker = () => {\n    if (datePickerRef.current) {\n      datePickerRef.current.setOpen(false);\n    }\n  };\n\n  return (\n    <ModalWrapper width={350} onClose={closeCardModal}>\n      <CardModalContent>\n        <p>\n          {variant === 'add'\n            ? t('cards.modals.addTitle')\n            : t('cards.modals.editTitle')}\n        </p>\n\n        <CardForm onSubmit={handleFormSubmit}>\n          <ErrorLabel>\n            <input\n              className={errorClassName}\n              ref={titleRef}\n              type=\"text\"\n              name=\"title\"\n              placeholder={t('cards.modals.title')}\n              defaultValue={variant === 'add' ? '' : activeCard.title}\n              autoComplete=\"off\"\n              maxLength={25}\n              onChange={e =>\n                validateInputMaxLength(e, setErrorMsg, setErrorClassName)\n              }\n            />\n            {errorMsg && <p>{errorMsg}</p>}\n          </ErrorLabel>\n          <textarea\n            name=\"description\"\n            placeholder={t('cards.modals.description')}\n            defaultValue={variant === 'add' ? '' : activeCard.description}\n            autoComplete=\"off\"\n          ></textarea>\n\n          <label>\n            {t('cards.modals.label')}\n\n            <LabelRadioList>\n              {LABEL_ARR.map(({ id, priority, color }) => {\n                return (\n                  <li key={id}>\n                    <RadioBtn\n                      $color={color}\n                      id=\"priority\"\n                      type=\"radio\"\n                      name=\"priority\"\n                      value={priority}\n                      checked={priority === cardPriority}\n                      onChange={e => setCardPriority(e.target.value)}\n                    />\n                    <LabelRadioLabel htmlFor=\"label\" $color={color} />\n                  </li>\n                );\n              })}\n            </LabelRadioList>\n          </label>\n\n          <label>{t('cards.modals.deadline')}</label>\n\n          <CalendarContainer>\n            {isCalendarOpen ? (\n              <button type=\"button\" onClick={closeDatePicker}>\n                <IoIosArrowUp />\n              </button>\n            ) : (\n              <button type=\"button\" onClick={openDatePicker}>\n                <IoIosArrowDown />\n              </button>\n            )}\n\n            <Calendar\n              selectedDate={selectedDate}\n              setDate={setSelectedDay}\n              toggleCalendar={setIsCalendarOpen}\n              ref={datePickerRef}\n            />\n          </CalendarContainer>\n\n          <SubmitBtn type=\"submit\">\n            <span>\n              <Plus width={14} height={14} />\n            </span>\n            {variant === 'add'\n              ? t('cards.modals.addButton')\n              : t('cards.modals.editButton')}\n          </SubmitBtn>\n        </CardForm>\n      </CardModalContent>\n    </ModalWrapper>\n  );\n};\n\nexport default CardModal;\n","const Status = ({ width, height, fillColor, strokeColor }) => {\n  return (\n    <svg\n      width={width || '14px'}\n      height={height || '14px'}\n      viewBox=\"0 0 16 17\"\n      fill={fillColor || 'none'}\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M2.22559 5.16665C3.37828 3.17398 5.53276 1.83331 8.00037 1.83331C11.6823 1.83331 14.667 4.81808 14.667 8.49998C14.667 12.1819 11.6823 15.1666 8.00037 15.1666C5.53276 15.1666 3.37828 13.826 2.22559 11.8333\"\n        stroke={strokeColor || null}\n        strokeWidth=\"1.3\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        d=\"M8 11.1666L10.6667 8.49998L8 5.83331\"\n        stroke={strokeColor || null}\n        strokeWidth=\"1.3\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        d=\"M1.33301 8.5L10.6663 8.5\"\n        stroke={strokeColor || null}\n        strokeWidth=\"1.3\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </svg>\n  );\n};\n\nexport default Status;\n","const Bell = ({ width, height, fillColor, strokeColor }) => {\n  return (\n    <svg\n      width={width || '14px'}\n      height={height || '14px'}\n      viewBox=\"0 0 14 16\"\n      fill={fillColor || 'none'}\n      stroke={strokeColor || null}\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M5.23597 14C5.70606 14.4149 6.32355 14.6667 6.99985 14.6667C7.67615 14.6667 8.29365 14.4149 8.76373 14M10.9999 5.33337C10.9999 4.27251 10.5784 3.25509 9.82828 2.50495C9.07813 1.7548 8.06072 1.33337 6.99985 1.33337C5.93898 1.33337 4.92157 1.7548 4.17142 2.50495C3.42128 3.25509 2.99985 4.27251 2.99985 5.33337C2.99985 7.3935 2.48016 8.80401 1.89963 9.73698C1.40993 10.524 1.16509 10.9174 1.17407 11.0272C1.18401 11.1488 1.20976 11.1951 1.3077 11.2678C1.39616 11.3334 1.79491 11.3334 2.59242 11.3334H11.4073C12.2048 11.3334 12.6035 11.3334 12.692 11.2678C12.7899 11.1951 12.8157 11.1488 12.8256 11.0272C12.8346 10.9174 12.5898 10.524 12.1001 9.73698C11.5195 8.80401 10.9999 7.3935 10.9999 5.33337Z\"\n        strokeWidth=\"1.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </svg>\n  );\n};\n\nexport default Bell;\n","import { styled } from 'styled-components';\n\nexport const Popup = styled.div`\n  position: absolute;\n  top: 20px;\n  left: -200%;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  gap: 8px;\n  padding: 18px;\n  width: 150px;\n  height: 0;\n  border: none;\n  border-radius: 8px;\n  background-color: transparent;\n  color: var(--text-color);\n  opacity: 0;\n  visibility: hidden;\n  transition: opacity var(--easedTransition), visibility var(--easedTransition),\n    height var(--easedTransition);\n  z-index: 3;\n\n  &:hover,\n  &:focus {\n    background-color: var(--popup-bg);\n    border: 1px solid var(--text-color);\n    opacity: 1;\n    visibility: visible;\n    height: auto;\n  }\n\n  button {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    gap: 18px;\n    row-gap: 10px;\n    font-size: 11px;\n    background-color: transparent;\n    padding: 0;\n    width: 100%;\n    overflow: hidden;\n    transition: color var(--easedTransition);\n\n    span {\n      max-width: 80px;\n      overflow: hidden;\n      white-space: nowrap;\n      text-overflow: ellipsis;\n    }\n\n    &:hover,\n    &:focus {\n      color: var(--accent-color);\n    }\n\n    svg path {\n      transition: stroke var(--easedTransition);\n    }\n\n    &:hover svg path,\n    &:focus svg path {\n      stroke: var(--accent-color);\n    }\n  }\n`;\n","import Status from 'components/Icons/Status';\nimport { Popup } from './MovePopUp.styled';\n\nconst MovePopUp = ({ allColumns, columnId, moveCard }) => {\n  return (\n    <Popup id=\"move-popup\">\n      {allColumns\n        .filter(column => column._id !== columnId)\n        .map(column => {\n          return (\n            <button\n              key={column._id}\n              type=\"button\"\n              title={`${column.title}`}\n              onClick={() => moveCard(column._id)}\n            >\n              <span> {column.title}</span>\n              <Status\n                width={16}\n                height={16}\n                strokeColor={'var(--icon-stroke-color)'}\n              />\n            </button>\n          );\n        })}\n    </Popup>\n  );\n};\n\nexport default MovePopUp;\n","import { styled, keyframes } from 'styled-components';\n\nconst swingAnimation = keyframes`\n  0% {\n    transform: rotate(0deg);\n  }\n\n  50% {\n    transform: rotate(15deg);\n  }\n\n  100% {\n    transform: rotate(-15deg);\n  }\n`;\n\nexport const CardItem = styled.div`\n  width: 334px;\n  border-radius: 10px;\n  padding: 24px 14px;\n  background-color: var(--card-bg);\n  list-style-type: none;\n  border-left: ${({ $label }) => `7px solid var(--priority-${$label})`};\n  word-break: break-all;\n\n  & > div {\n    display: flex;\n    align-items: flex-ends;\n    justify-content: space-between;\n  }\n\n  li {\n    position: relative;\n  }\n`;\n\nexport const CardTitle = styled.h4`\n  margin-bottom: 8px;\n  color: var(--text-color);\n`;\n\nexport const CardDescr = styled.p`\n  width: 290px;\n  max-width: 100%s;\n  font-size: 12px;\n  line-height: 1.33333;\n  color: var(--text-color);\n  opacity: 0.7;\n  margin-bottom: 14px;\n  cursor: pointer;\n`;\n\nexport const InfoWrap = styled.div`\n  display: flex;\n  gap: 14px;\n\n  div {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n  }\n\n  h5 {\n    font-weight: 400;\n    font-size: 8px;\n    color: var(--text-color);\n    opacity: 0.5;\n    margin-bottom: 4px;\n  }\n\n  span {\n    font-size: 10px;\n    color: var(--text-color);\n  }\n`;\n\nexport const Priority = styled.p`\n  font-size: 10px;\n  color: var(--text-color);\n  display: flex;\n  gap: 4px;\n  text-transform: capitalize;\n\n  &::before {\n    content: '';\n    display: block;\n    width: 12px;\n    height: 12px;\n    border-radius: 50%;\n    background-color: ${({ $label }) => `var(--priority-${$label})`};\n  }\n`;\n\nexport const BtnsList = styled.ul`\n  display: flex;\n  align-items: flex-end;\n`;\n\nexport const DeadlineModal = styled.div`\n  position: absolute;\n  top: -155%;\n  left: -130%;\n  width: 110px;\n  height: 30px;\n  border-radius: 15px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 9px;\n  color: var(--text-color);\n  opacity: 0;\n  background-color: var(--background-color);\n  box-shadow: var(--box-shadow);\n  visibility: hidden;\n  transition: opacity var(--easedTransition), visibility var(--easedTransition);\n`;\n\nexport const CardActionButton = styled.button`\n  background-color: transparent;\n\n  &#deadline-bell:hover + #deadline-modal,\n  &#deadline-bell:focus + #deadline-modal {\n    opacity: 1;\n    visibility: visible;\n  }\n\n  &#move-card:hover + #move-popup,\n  &#move-card:focus + #move-popup {\n    background-color: var(--popup-bg);\n    border: 1px solid var(--text-color);\n    opacity: 1;\n    visibility: visible;\n    height: auto;\n  }\n\n  &#deadline-bell svg {\n    animation: ${swingAnimation} 1s ease-in-out infinite alternate;\n    filter: drop-shadow(1px 1px 3px var(--accent-color));\n  }\n\n  &#deadline-bell svg path {\n    opacity: 1;\n    stroke: var(--accent-color);\n  }\n\n  svg {\n    transition: filter var(--easedTransition);\n  }\n\n  svg path {\n    stroke: var(--icon-stroke-color);\n    opacity: 50%;\n    transition: stroke var(--easedTransition), opacity var(--easedTransition);\n  }\n\n  &:hover svg path {\n    stroke: var(--accent-color);\n    opacity: 100%;\n  }\n\n  &:hover svg {\n    filter: drop-shadow(1px 1px 5px var(--accent-color));\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport i18next from 'i18next';\nimport { deleteCard } from '../../../redux/cards/cardsOperations';\nimport { moveCard } from '../../../redux/board/boardOperations';\nimport {\n  formatDate,\n  makeValidDate,\n  handleTextOverflow,\n  determineDeadline,\n  determineLabelColor,\n  changePriorityLang,\n} from 'helpers';\nimport Status from 'components/Icons/Status';\nimport Pencil from 'components/Icons/Pencil';\nimport Trash from 'components/Icons/Trash';\nimport Bell from 'components/Icons/Bell';\nimport DeleteModal from 'components/Modals/DeleteModal';\nimport MovePopUp from '../MovePopUp';\nimport {\n  CardItem,\n  CardTitle,\n  CardDescr,\n  InfoWrap,\n  Priority,\n  BtnsList,\n  DeadlineModal,\n  CardActionButton,\n} from './TaskCard.styled';\n\nconst TaskCard = ({\n  allColumns,\n  columnId,\n  card,\n  openCardModal,\n  setActiveCard,\n}) => {\n  const [showFullText, setShowFullText] = useState(false);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n\n  const handleClick = () => {\n    setShowFullText(!showFullText);\n  };\n\n  const deleteOneCard = cardId => {\n    dispatch(deleteCard({ cardId, columnId }));\n  };\n\n  const moveCardToAnotherColumn = newColumn => {\n    dispatch(moveCard({ cardId: card._id, newColumn, oldColumn: columnId }));\n  };\n\n  return (\n    <>\n      <CardItem $label={determineLabelColor(card.priority)}>\n        <CardTitle>{card.title}</CardTitle>\n        <CardDescr onClick={handleClick}>\n          {showFullText\n            ? card.description\n            : handleTextOverflow(card.description)}\n        </CardDescr>\n        <hr />\n\n        <div>\n          <InfoWrap>\n            <div>\n              <h5>{t('cards.priority')}</h5>\n              <Priority $label={determineLabelColor(card.priority)}>\n                {i18next.language === 'en'\n                  ? card.priority\n                  : changePriorityLang(card.priority)}\n              </Priority>\n            </div>\n\n            <div>\n              <h5>{t('cards.deadline')}</h5>\n              <span>{formatDate(makeValidDate(card.deadline))}</span>\n            </div>\n          </InfoWrap>\n\n          <BtnsList>\n            {determineDeadline(card.deadline) && (\n              <li>\n                <CardActionButton\n                  id=\"deadline-bell\"\n                  type=\"button\"\n                  aria-label=\"Deadline is today\"\n                  onClick={e => (e.target.style.animation = 'none')}\n                >\n                  <Bell\n                    width={16}\n                    height={16}\n                    strokeColor={'var(--icon-stroke-color)'}\n                  />\n                </CardActionButton>\n\n                <DeadlineModal id=\"deadline-modal\">\n                  <p>{t('cards.deadlineToday')}</p>\n                </DeadlineModal>\n              </li>\n            )}\n            <li>\n              <CardActionButton\n                id=\"move-card\"\n                type=\"button\"\n                aria-label=\"Move card\"\n              >\n                <Status\n                  width={16}\n                  height={16}\n                  strokeColor={'var(--icon-stroke-color)'}\n                />\n              </CardActionButton>\n              <MovePopUp\n                allColumns={allColumns}\n                columnId={columnId}\n                moveCard={moveCardToAnotherColumn}\n              />\n            </li>\n            <li>\n              <CardActionButton\n                type=\"button\"\n                aria-label=\"Edit card\"\n                onClick={() => {\n                  openCardModal();\n                  setActiveCard(card);\n                }}\n              >\n                <Pencil\n                  width={16}\n                  height={16}\n                  strokeColor={'var(--icon-stroke-color)'}\n                />\n              </CardActionButton>\n            </li>\n            <li>\n              <CardActionButton\n                type=\"button\"\n                aria-label=\"Delete card\"\n                onClick={() => setIsDeleteModalOpen(true)}\n              >\n                <Trash\n                  width={16}\n                  height={16}\n                  strokeColor={'var(--icon-stroke-color)'}\n                />\n              </CardActionButton>\n            </li>\n          </BtnsList>\n        </div>\n      </CardItem>\n\n      {isDeleteModalOpen && (\n        <DeleteModal\n          onClose={() => setIsDeleteModalOpen(false)}\n          onConfirm={() => deleteOneCard(card._id)}\n        />\n      )}\n    </>\n  );\n};\n\nexport default TaskCard;\n","import styled from 'styled-components';\n\nexport const ColumnWrap = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n\n  @media screen and (min-width: 375px) {\n    width: 335px;\n  }\n`;\n\nexport const ColumnTitleWrap = styled.div`\n  width: 100%;\n  min-height: 56px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0 20px;\n  margin-bottom: 14px;\n  border-radius: 8px;\n  background-color: var(--card-bg);\n  font-weight: 500;\n\n  & h3 {\n    font-size: 14px;\n    font-weight: 500;\n  }\n`;\n\nexport const ButtonsList = styled.ul`\n  display: flex;\n`;\n\nexport const ColumnButton = styled.button`\n  background-color: transparent;\n  padding: 4px;\n\n  svg {\n    transition: filter var(--easedTransition);\n  }\n\n  svg path {\n    stroke: var(--icon-stroke-color);\n    opacity: 50%;\n    transition: stroke var(--easedTransition), opacity var(--easedTransition);\n  }\n\n  &:hover svg path {\n    stroke: var(--accent-color);\n    opacity: 100%;\n  }\n\n  &:hover svg {\n    filter: drop-shadow(1px 1px 5px var(--accent-color));\n  }\n`;\n\nexport const IconWrap = styled.span`\n  margin-right: 8px;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  width: 28px;\n  height: 28px;\n  border-radius: 6px;\n  background-color: var(--btn-icon-bg);\n  transition: all var(--easedTransition);\n\n  & svg {\n    stroke: var(--btn-icon-color);\n    transition: all var(--easedTransition);\n  }\n`;\n\nexport const AddButton = styled.button`\n  margin-top: auto;\n  min-width: 100%;\n  min-height: 56px;\n  border: none;\n  border-radius: 8px;\n  background-color: var(--accent-color);\n  color: var(--btn-icon-bg);\n  font-weight: 500;\n  transition: all var(--easedTransition);\n\n  &:hover {\n    background-color: var(--accent-btn-hover);\n  }\n`;\n\nexport const CardsList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  padding-right: 8px;\n  margin-bottom: 14px;\n  height: calc(100vh - 144px - 130px);\n  overflow-y: auto;\n  scroll-behavior: smooth;\n\n  &::-webkit-scrollbar-thumb {\n    border-radius: 12px;\n  }\n\n  &::-webkit-scrollbar {\n    width: 8px;\n  }\n\n  &::-webkit-scrollbar-track {\n    border-radius: 12px;\n  }\n\n  @media screen and (min-width: 768px) {\n    max-height: calc(100vh - 150px - 166px);\n  }\n\n  @media screen and (min-width: 1440px) {\n    max-height: calc(100vh - 118px - 106px);\n  }\n`;\n","import { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Pencil from 'components/Icons/Pencil';\nimport Trash from 'components/Icons/Trash';\nimport ColumnModal from 'components/Modals/ColumnModal';\nimport CardModal from 'components/Modals/CardModal';\nimport Plus from 'components/Icons/Plus';\nimport DeleteModal from 'components/Modals/DeleteModal/DeleteModal';\nimport TaskCard from '../TaskCard';\nimport {\n  AddButton,\n  ButtonsList,\n  CardsList,\n  ColumnButton,\n  ColumnTitleWrap,\n  ColumnWrap,\n  IconWrap,\n} from './Column.styled';\nimport { deleteColumn } from '../../../redux/board/boardOperations';\nimport { useDispatch } from 'react-redux';\n\nconst Column = ({ allColumns, column }) => {\n  const [isAddColumnModalOpen, setIsAddColumnModalOpen] = useState(false);\n  const [isEditColumnModalOpen, setIsEditColumnModalOpen] = useState(false);\n  const [isAddCardModalOpen, setIsAddCardModalOpen] = useState(false);\n  const [isEditCardModalOpen, setIsEditCardModalOpen] = useState(false);\n  const [isDeleteModalShown, setIsDeleteModalShown] = useState(false);\n  const [activeCard, setActiveCard] = useState({});\n\n  const dispatch = useDispatch();\n\n  const { t } = useTranslation();\n\n  const handleColumnDelete = () => {\n    dispatch(deleteColumn(column._id));\n    setIsDeleteModalShown(false);\n  };\n\n  return (\n    <>\n      <ColumnWrap>\n        <ColumnTitleWrap>\n          <h3>{column.title}</h3>\n          <ButtonsList>\n            <li>\n              <ColumnButton\n                type=\"button\"\n                aria-label=\"Edit column title\"\n                onClick={() => setIsEditColumnModalOpen(true)}\n              >\n                <Pencil\n                  width={16}\n                  height={16}\n                  strokeColor={'var(--plus-icon-bg)'}\n                />\n              </ColumnButton>\n            </li>\n            <li>\n              <ColumnButton\n                id=\"column-delete\"\n                type=\"button\"\n                aria-label=\"Delete column\"\n                onClick={() => setIsDeleteModalShown(true)}\n              >\n                <Trash\n                  width={16}\n                  height={16}\n                  strokeColor={'var(--plus-icon-bg)'}\n                />\n              </ColumnButton>\n            </li>\n          </ButtonsList>\n        </ColumnTitleWrap>\n\n        <CardsList>\n          {column.cards &&\n            column.cards.map(card => (\n              <li key={card._id}>\n                <TaskCard\n                  allColumns={allColumns}\n                  columnId={column._id}\n                  card={card}\n                  openCardModal={() => setIsEditCardModalOpen(true)}\n                  setActiveCard={setActiveCard}\n                />\n              </li>\n            ))}\n        </CardsList>\n\n        <AddButton type=\"button\" onClick={() => setIsAddCardModalOpen(true)}>\n          <IconWrap>\n            <Plus width={14} height={14} />\n          </IconWrap>\n          {t('cards.addButton')}\n        </AddButton>\n      </ColumnWrap>\n\n      {isAddColumnModalOpen && (\n        <ColumnModal\n          variant=\"add\"\n          closeModal={() => setIsAddColumnModalOpen(false)}\n          columnId={column._id}\n        />\n      )}\n      {isEditColumnModalOpen && (\n        <ColumnModal\n          variant=\"edit\"\n          closeModal={() => setIsEditColumnModalOpen(false)}\n          columnId={column._id}\n          columnName={column.title}\n        />\n      )}\n      {isAddCardModalOpen && (\n        <CardModal\n          columnId={column._id}\n          variant=\"add\"\n          closeCardModal={() => setIsAddCardModalOpen(false)}\n        />\n      )}\n      {isEditCardModalOpen && (\n        <CardModal\n          activeCard={activeCard}\n          columnId={column._id}\n          variant=\"edit\"\n          closeCardModal={() => setIsEditCardModalOpen(false)}\n        />\n      )}\n\n      {isDeleteModalShown && (\n        <DeleteModal\n          onClose={() => setIsDeleteModalShown(false)}\n          onConfirm={handleColumnDelete}\n        />\n      )}\n    </>\n  );\n};\n\nexport default Column;\n","import styled from 'styled-components';\n\nexport const Wrap = styled.div`\n  display: flex;\n  height: 100%;\n  padding-top: 39px;\n  padding-bottom: 24px;\n  overflow-x: auto;\n  scroll-behavior: smooth;\n\n  &::-webkit-scrollbar-thumb {\n    border-radius: 12px;\n  }\n\n  &::-webkit-scrollbar {\n    height: 12px;\n  }\n\n  &::-webkit-scrollbar-track {\n    border-radius: 12px;\n  }\n\n  @media screen and (min-width: 768px) {\n    padding-top: 26px;\n    padding-bottom: 52px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding-top: 10px;\n    padding-bottom: 36px;\n  }\n`;\n\nexport const ColumnsList = styled.ul`\n  display: flex;\n  gap: 34px;\n  margin-right: 34px;\n`;\n\nexport const IconWrap = styled.span`\n  margin-right: 8px;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  width: 28px;\n  height: 28px;\n  border-radius: 6px;\n  background-color: var(--plus-icon-bg);\n  transition: all var(--easedTransition);\n\n  & svg {\n    stroke: var(--card-bg);\n    transition: all var(--easedTransition);\n  }\n`;\n\nexport const AddButton = styled.button`\n  min-width: 335px;\n  height: 56px;\n  border: none;\n  border-radius: 8px;\n  background-color: var(--card-bg);\n  color: inherit;\n  font-weight: 500;\n  transition: all var(--easedTransition);\n\n  &:hover {\n    background-color: var(--plus-btn-hover);\n\n    ${IconWrap} {\n      background-color: var(--card-bg);\n      & svg {\n        stroke: var(--plus-icon-bg);\n      }\n    }\n  }\n\n  /* @media screen and (min-width: 375px) {\n    width: 335px;\n  } */\n`;\n","import { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Plus from 'components/Icons/Plus';\nimport ColumnModal from 'components/Modals/ColumnModal';\nimport Column from './Column';\nimport { AddButton, ColumnsList, IconWrap, Wrap } from './Dashboard.styled';\n\nconst Dashboard = ({ board }) => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const { t } = useTranslation();\n\n  return (\n    <Wrap>\n      {Object.keys(board).length > 0 && board.columns.length > 0 && (\n        <ColumnsList>\n          {board.columns.map(column => (\n            <li key={column._id}>\n              <Column allColumns={board.columns} column={column} />\n            </li>\n          ))}\n        </ColumnsList>\n      )}\n      <AddButton type=\"button\" onClick={() => setIsModalOpen(true)}>\n        <IconWrap>\n          <Plus width={14} height={14} />\n        </IconWrap>\n        {t('columns.addButton')}\n      </AddButton>\n\n      {isModalOpen && (\n        <ColumnModal variant=\"add\" closeModal={() => setIsModalOpen(false)} />\n      )}\n    </Wrap>\n  );\n};\n\nexport default Dashboard;\n","import styled from 'styled-components';\n\nexport const HeaderWrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  & h2 {\n    font-weight: 500;\n    font-size: 14px;\n    background-color: var(--background-color);\n    padding: 0 20px;\n    border-radius: 8px;\n\n    @media screen and (min-width: 768px) {\n      font-size: 18px;\n    }\n  }\n`;\n\nexport const FilterButton = styled.button`\n  display: flex;\n  gap: 8px;\n  align-items: center;\n  background-color: var(--background-color);\n  padding: 0 20px;\n  border-radius: 8px;\n  font-weight: 500;\n  font-size: 14px;\n  color: var(--text-color);\n  transition: all var(--easedTransition);\n\n  & svg {\n    stroke: var(--text-color);\n    fill: transparent;\n    transition: all var(--easedTransition);\n  }\n\n  &:hover {\n    color: var(--accent-btn-hover);\n    & svg {\n      stroke: var(--accent-btn-hover);\n    }\n  }\n`;\n","const Filter = ({ width, height, fillColor, strokeColor }) => {\n  return (\n    <svg\n      width={width || '14px'}\n      height={height || '14px'}\n      viewBox=\"0 0 16 16\"\n      fill={fillColor || 'none'}\n      stroke={strokeColor || null}\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M14.6668 2H1.3335L6.66683 8.30667V12.6667L9.3335 14V8.30667L14.6668 2Z\"\n        strokeWidth=\"1.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </svg>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const TitleContainer = styled.div`\n  justify-content: space-between;\n  margin-bottom: 14px;\n`;\n\nexport const Title = styled.h2`\n  font-size: 18px;\n  font-weight: 500;\n  line-height: normal;\n`;\n\nexport const ClearFilterBox = styled.div`\n  display: flex;\n  border-top: 1px solid var(--underline-color);\n  margin-bottom: 14px;\n  padding-top: 14px;\n`;\n\nexport const ClearTitle = styled.h3`\n  display: flex;\n  flex-shrink: 0;\n  margin-right: auto;\n  font-weight: 500;\n  line-height: normal;\n`;\n\nexport const ClearButton = styled.button`\n  color: var(--lightgrey-text-color);\n  font-size: 12px;\n  line-height: normal;\n  letter-spacing: -0.24px;\n  background-color: inherit;\n  text-decoration-line: underline;\n\n  @media screen and (min-width: 768px) {\n    &:hover,\n    &:focus {\n      color: var(--text-color);\n    }\n  }\n`;\n\nexport const RadioButtonBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  color: var(--lightgrey-text-color);\n`;\n\nexport const RadioButton = styled.input`\n  position: absolute;\n  z-index: 999;\n  cursor: pointer;\n  top: 4px;\n  left: 0;\n  appearance: none;\n  font-family: inherit;\n  border-radius: 50%;\n  margin: 0;\n  width: 14px;\n  height: 14px;\n\n  &:checked.blue {\n    border: 1px solid var(--priority-blue);\n  }\n\n  &:checked.red {\n    border: 1px solid var(--priority-pink);\n  }\n\n  &:checked.green {\n    border: 1px solid var(--priority-green);\n  }\n\n  &:checked.gray {\n    border: 1px solid var(--lightgrey-text-color);\n  }\n`;\n\nexport const StyledMarker = styled.span`\n  content: '';\n  display: block;\n  width: 14px;\n  height: 14px;\n  border-radius: 50%;\n\n  &.blue {\n    background-color: var(--priority-blue);\n  }\n\n  &.red {\n    background-color: var(--priority-pink);\n  }\n\n  &.green {\n    background-color: var(--priority-green);\n  }\n\n  &.gray {\n    background-color: var(--lightgrey-text-color);\n  }\n`;\n\nexport const PriorityFilterLabel = styled.label`\n  cursor: pointer;\n  position: relative;\n  display: inline-flex;\n  gap: 8px;\n  justify-content: center;\n  align-items: center;\n  color: var(--lightgrey-text-color);\n\n  &:not(:last-child) {\n    margin-bottom: 12px;\n  }\n  font-size: 14px;\n\n  input[type='radio']:checked + ${StyledMarker} {\n    scale: 0.5;\n  }\n\n  @media screen and (min-width: 768px) {\n    &:hover,\n    &:focus {\n      color: var(--text-color);\n    }\n  }\n`;\n","import { useTranslation } from 'react-i18next';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { getOneBoard, filterCards } from '../../../redux/board/boardOperations';\nimport ModalWrapper from 'components/Modals/ModalWrapper/ModalWrapper';\nimport {\n  TitleContainer,\n  Title,\n  ClearFilterBox,\n  ClearTitle,\n  ClearButton,\n  RadioButtonBox,\n  RadioButton,\n  PriorityFilterLabel,\n  StyledMarker,\n} from './Filters.styled';\n\nconst Filters = ({ boardId, onClose }) => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n\n  const [filterValue, setFilterValue] = useState('default');\n\n  const handleFilterChange = newValue => {\n    setFilterValue(newValue);\n    dispatch(filterCards({ boardId: boardId, priority: newValue }));\n    onClose();\n  };\n\n  const handleDefaultFilter = () => {\n    dispatch(getOneBoard(boardId));\n    onClose();\n  };\n\n  return (\n    <ModalWrapper width={300} onClose={onClose}>\n      <TitleContainer>\n        <Title>{t('boards.filterButton')}</Title>\n      </TitleContainer>\n      <ClearFilterBox>\n        <ClearTitle>{t('boards.filter.label')}</ClearTitle>\n        <ClearButton type=\"button\" onClick={handleDefaultFilter}>\n          {t('boards.filter.all')}\n        </ClearButton>\n      </ClearFilterBox>\n      <RadioButtonBox>\n        <PriorityFilterLabel className=\"gray\">\n          <RadioButton\n            type=\"radio\"\n            name=\"priority\"\n            value=\"without\"\n            checked={filterValue === 'without'}\n            onChange={() => handleFilterChange('without')}\n            className=\"gray\"\n          />\n          <StyledMarker className=\"gray\"></StyledMarker>\n          {t('boards.filter.without')}\n        </PriorityFilterLabel>\n        <PriorityFilterLabel className=\"blue\">\n          <RadioButton\n            type=\"radio\"\n            name=\"priority\"\n            value=\"low\"\n            checked={filterValue === 'low'}\n            onChange={() => handleFilterChange('low')}\n            className=\"blue\"\n          />\n          <StyledMarker className=\"blue\"></StyledMarker>\n          {t('boards.filter.low')}\n        </PriorityFilterLabel>\n        <PriorityFilterLabel className=\"red\">\n          <RadioButton\n            type=\"radio\"\n            name=\"priority\"\n            value=\"medium\"\n            checked={filterValue === 'medium'}\n            onChange={() => handleFilterChange('medium')}\n            className=\"red\"\n          />\n          <StyledMarker className=\"red\"></StyledMarker>\n          {t('boards.filter.medium')}\n        </PriorityFilterLabel>\n        <PriorityFilterLabel className=\"green\">\n          <RadioButton\n            type=\"radio\"\n            name=\"priority\"\n            value=\"high\"\n            checked={filterValue === 'high'}\n            onChange={() => handleFilterChange('high')}\n            className=\"green\"\n          />\n          <StyledMarker className=\"green\"></StyledMarker>\n          {t('boards.filter.high')}\n        </PriorityFilterLabel>\n      </RadioButtonBox>\n    </ModalWrapper>\n  );\n};\n\nexport default Filters;\n","import { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { FilterButton, HeaderWrap } from './BoardHeader.styled';\nimport Filter from 'components/Icons/Filter';\nimport Filters from '../Filters/Filters';\n\nconst BoardHeader = ({ title, boardId }) => {\n  const { t } = useTranslation();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  return (\n    <>\n      <HeaderWrap>\n        <h2>{title}</h2>\n        <FilterButton type=\"button\" onClick={openModal}>\n          <Filter width={14} height={14} />\n          {t('boards.filterButton')}\n        </FilterButton>\n      </HeaderWrap>\n      {isModalOpen && (\n        <Filters boardId={boardId} onClose={() => setIsModalOpen(false)} />\n      )}\n    </>\n  );\n};\n\nexport default BoardHeader;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { getOneBoard } from '../redux/board/boardOperations';\nimport { selectOneBoard } from '../redux/board/boardSelectors';\nimport { MainContainer } from 'components/App/App.styled';\nimport Dashboard from 'components/Dashboard';\nimport BoardHeader from 'components/Dashboard/BoardHeader';\n\nconst ScreensPage = () => {\n  const { boardId } = useParams();\n  const dispatch = useDispatch();\n  const board = useSelector(selectOneBoard);\n\n  useEffect(() => {\n    dispatch(getOneBoard(boardId));\n  }, [dispatch, boardId]);\n\n  return (\n    <MainContainer $bg={board.background}>\n      <BoardHeader title={board.title} boardId={boardId} />\n      <Dashboard board={board} />\n    </MainContainer>\n  );\n};\n\nexport default ScreensPage;\n"],"names":["MainContainer","styled","_templateObject","_taggedTemplateLiteral","_ref","$bg","concat","backgroundMobileURL","_ref2","backgroundMobile2xURL","_ref3","backgroundTabletURL","_ref4","backgroundTablet2xURL","_ref5","backgroundDesktopURL","_ref6","backgroundDesktop2xURL","inputsCommonStyles","css","CardModalContent","_templateObject2","CardForm","_templateObject3","ErrorLabel","_templateObject4","LabelRadioList","_templateObject5","RadioBtn","_templateObject6","$color","LabelRadioLabel","_templateObject7","CalendarContainer","_templateObject8","SubmitBtn","_templateObject9","$variant","variant","closeModal","columnId","columnName","_useState","useState","_useState2","_slicedToArray","errorMsg","setErrorMsg","_useState3","_useState4","errorClassName","setErrorClassName","boardId","useParams","dispatch","useDispatch","t","useTranslation","titleRef","useRef","useEffect","current","focus","_jsx","ModalWrapper","width","onClose","children","_jsxs","onSubmit","e","preventDefault","title","target","elements","value","trim","newColumn","board","addColumn","editColumn","editedColumn","id","toast","TOASTER_CONFIG","className","ref","type","name","placeholder","defaultValue","maxLength","onChange","validateInputMaxLength","Plus","height","React","selectedDate","setDate","toggleCalendar","minDate","Date","setDefaultLocale","registerLocale","uk","ReactDatePicker","locale","i18next","selected","date","dateFormat","onCalendarOpen","onCalendarClose","closeCardModal","activeCard","priority","cardPriority","setCardPriority","isCalendarOpen","setIsCalendarOpen","_useState5","deadline","_useState6","setSelectedDay","_useState7","_useState8","_useState9","_useState10","datePickerRef","_e$target$elements","description","dateForServer","makeValidDate","cardInfo","column","addCard","editCard","cardId","_id","editedCard","autoComplete","LABEL_ARR","color","checked","htmlFor","onClick","setOpen","IoIosArrowUp","IoIosArrowDown","Calendar","fillColor","strokeColor","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","Popup","allColumns","moveCard","filter","map","Status","swingAnimation","keyframes","CardItem","$label","CardTitle","CardDescr","InfoWrap","Priority","BtnsList","DeadlineModal","CardActionButton","card","openCardModal","setActiveCard","showFullText","setShowFullText","isDeleteModalOpen","setIsDeleteModalOpen","_Fragment","determineLabelColor","handleTextOverflow","changePriorityLang","formatDate","determineDeadline","style","animation","Bell","MovePopUp","oldColumn","Pencil","Trash","DeleteModal","onConfirm","deleteCard","ColumnWrap","ColumnTitleWrap","ButtonsList","ColumnButton","IconWrap","AddButton","CardsList","isAddColumnModalOpen","setIsAddColumnModalOpen","isEditColumnModalOpen","setIsEditColumnModalOpen","isAddCardModalOpen","setIsAddCardModalOpen","isEditCardModalOpen","setIsEditCardModalOpen","isDeleteModalShown","setIsDeleteModalShown","_useState11","_useState12","cards","TaskCard","ColumnModal","CardModal","deleteColumn","Wrap","ColumnsList","isModalOpen","setIsModalOpen","Object","keys","length","columns","Column","HeaderWrap","FilterButton","TitleContainer","Title","ClearFilterBox","ClearTitle","ClearButton","RadioButtonBox","RadioButton","StyledMarker","PriorityFilterLabel","filterValue","setFilterValue","handleFilterChange","newValue","filterCards","getOneBoard","Filter","Filters","useSelector","selectOneBoard","background","BoardHeader","Dashboard"],"sourceRoot":""}