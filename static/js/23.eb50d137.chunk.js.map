{"version":3,"file":"static/js/23.eb50d137.chunk.js","mappings":"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","sources":["schemas/userRegisterSchema.js","schemas/userLoginSchema.js","components/Auth/RegLogForm.styled.jsx","components/Auth/LoginForm/LoginForm.jsx","components/Auth/RegisterForm/RegisterForm.jsx","pages/AuthPage.jsx"],"sourcesContent":["import * as yup from 'yup';\n\nconst registerSchema = yup.object().shape({\n  name: yup.string().min(3).required('Name is required'),\n  email: yup\n    .string()\n    .email('Please enter a valid email')\n    .matches(\n      /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/,\n      'Invalid email format'\n    )\n    .required('Email is required'),\n  password: yup.string().min(6).max(24).required('Password is required'),\n});\n\nexport default registerSchema;\n","import * as yup from 'yup';\n\nconst loginSchema = yup.object().shape({\n  email: yup\n    .string()\n    .email('Please enter a valid email')\n    .required('Email is required'),\n  password: yup.string().min(6).max(24).required('Password is required'),\n});\n\nexport default loginSchema;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Background = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100vw;\n  min-height: 100vh;\n  background: var(--light-green-gradient);\n`;\n\nexport const FormWrap = styled.div`\n  padding: 24px;\n  width: calc(100% - 40px);\n  display: flex;\n  flex-direction: column;\n  gap: 40px;\n  background-color: #151515;\n  border-radius: 8px;\n\n  @media screen and (min-width: 375px) {\n    width: 335px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 424px;\n  }\n`;\n\nexport const AuthList = styled.ul`\n  display: flex;\n  gap: 14px;\n`;\n\nexport const AuthLink = styled(NavLink)`\n  color: #ffffff30;\n  font-size: 18px;\n  font-weight: 500;\n  transition: color var(--easedTransition);\n\n  &:hover {\n    color: #ffffff;\n  }\n\n  &.active {\n    color: #ffffff;\n  }\n`;\n\nexport const FormUi = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n\n  label {\n    position: relative;\n  }\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  padding: 14px 18px;\n  background: transparent;\n  border: 1px solid #bedbb0;\n  border-radius: 8px;\n  color: #ffffff;\n  opacity: 0.5;\n  transition: opacity var(--easedTransition);\n\n  &:focus {\n    opacity: 1;\n  }\n\n  &:hover {\n    opacity: 1;\n  }\n\n  ${({ $error }) =>\n    $error &&\n    `\n    border-color: #fc8181;\n  `}\n`;\n\nexport const PassInputWrap = styled.div`\n  position: relative;\n`;\n\nexport const HideBtn = styled.button`\n  position: absolute;\n  top: 0;\n  right: 0;\n  transform: translate(-50%, 50%);\n  opacity: 0.4;\n  background-color: transparent;\n  cursor: pointer;\n`;\n\nexport const SubmitBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 10px;\n  padding: 14px 0;\n  font-weight: 500;\n  background: #bedbb0;\n  border-radius: 8px;\n  color: #161616;\n  transition: background var(--easedTransition);\n\n  &:hover {\n    background: #9dc888;\n  }\n\n  &:disabled {\n    opacity: 0.3;\n    cursor: not-allowed;\n  }\n`;\n\nexport const ErrorPara = styled.span`\n  position: absolute;\n  left: 0;\n  bottom: -14px;\n  font-size: 7px;\n  color: #fc8181;\n`;\n","import { useState } from 'react';\nimport { useFormik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from '../../../redux/auth/authOperations';\nimport { useAuth } from 'hooks';\nimport { loginSchema } from 'schemas';\nimport SmallLoader from 'components/Loader/SmallLoader';\nimport {\n  Background,\n  FormWrap,\n  AuthList,\n  AuthLink,\n  FormUi,\n  Input,\n  SubmitBtn,\n  ErrorPara,\n  PassInputWrap,\n  HideBtn,\n} from '../RegLogForm.styled';\nimport Eye from 'components/Icons/Eye';\nimport EyeCrossed from 'components/Icons/EyeCrossed';\nimport { useTranslation } from 'react-i18next';\n\nconst LoginForm = () => {\n  const [visible, setVisible] = useState(false);\n\n  const dispatch = useDispatch();\n  const { isLoading } = useAuth();\n\n  const { t } = useTranslation();\n\n  const onSubmit = async (values, actions) => {\n    const formData = {\n      email: values.email,\n      password: values.password,\n    };\n\n    const isValid = await loginSchema.isValid(formData);\n    if (!isValid) {\n      return;\n    }\n\n    dispatch(logIn({ ...formData }));\n\n    await new Promise(res => setTimeout(res, 500));\n    actions.resetForm();\n  };\n\n  const {\n    values,\n    errors,\n    touched,\n    isSubmitting,\n    handleBlur,\n    handleChange,\n    handleSubmit,\n  } = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    validationSchema: loginSchema,\n    onSubmit,\n  });\n\n  return (\n    <Background>\n      <FormWrap>\n        <AuthList>\n          <li>\n            <AuthLink to={`/auth/register`}>{t('authForms.regTitle')}</AuthLink>\n          </li>\n          <li>\n            <AuthLink to={`/auth/login`}>{t('authForms.loginTitle')}</AuthLink>\n          </li>\n        </AuthList>\n\n        <FormUi onSubmit={handleSubmit} autoComplete=\"off\">\n          <label>\n            <Input\n              value={values.email}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              $error={errors.email && touched.email}\n              name=\"email\"\n              placeholder={t('authForms.email')}\n              type=\"email\"\n            />\n            {errors.email && touched.email && (\n              <ErrorPara>{errors.email}</ErrorPara>\n            )}\n          </label>\n\n          <label>\n            <PassInputWrap>\n              <Input\n                value={values.password}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                $error={errors.password && touched.password}\n                name=\"password\"\n                placeholder={t('authForms.confirm')}\n                type={visible ? 'text' : 'password'}\n              />\n              <HideBtn\n                type=\"button\"\n                onClick={() => {\n                  setVisible(!visible);\n                }}\n              >\n                {visible ? (\n                  <Eye\n                    width={20}\n                    height={20}\n                    fillColor={'none'}\n                    strokeColor={'#fff'}\n                  />\n                ) : (\n                  <EyeCrossed\n                    width={20}\n                    height={20}\n                    fillColor={'none'}\n                    strokeColor={'#fff'}\n                  />\n                )}\n              </HideBtn>\n            </PassInputWrap>\n            {errors.password && touched.password && (\n              <ErrorPara>{errors.password}</ErrorPara>\n            )}\n          </label>\n\n          <SubmitBtn type=\"submit\" disabled={isSubmitting}>\n            {isLoading ? (\n              <SmallLoader width=\"25\" height=\"25\" />\n            ) : (\n              t('authForms.loginButton')\n            )}\n          </SubmitBtn>\n        </FormUi>\n      </FormWrap>\n    </Background>\n  );\n};\n\nexport default LoginForm;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useFormik } from 'formik';\nimport PasswordStrengthBar from 'react-password-strength-bar';\nimport { register } from '../../../redux/auth/authOperations';\nimport { useAuth } from 'hooks';\nimport { registerSchema } from 'schemas';\nimport { PROGRESS_BAR_COLORS } from 'constants';\nimport SmallLoader from 'components/Loader/SmallLoader';\nimport {\n  Background,\n  FormWrap,\n  AuthList,\n  AuthLink,\n  FormUi,\n  Input,\n  SubmitBtn,\n  ErrorPara,\n  PassInputWrap,\n  HideBtn,\n} from '../RegLogForm.styled';\nimport Eye from 'components/Icons/Eye';\nimport EyeCrossed from 'components/Icons/EyeCrossed';\nimport { useTranslation } from 'react-i18next';\n\nconst RegisterForm = () => {\n  const [visible, setVisible] = useState(false);\n  const [pwd, setPwd] = useState('');\n  const dispatch = useDispatch();\n  const { isLoading } = useAuth();\n\n  const { t } = useTranslation();\n\n  const onSubmit = async (values, actions) => {\n    const formData = {\n      name: values.name,\n      email: values.email,\n      password: values.password,\n    };\n\n    const isValid = await registerSchema.isValid(formData);\n    if (!isValid) {\n      return;\n    }\n\n    dispatch(register({ ...formData }));\n\n    await new Promise(res => setTimeout(res, 500));\n    actions.resetForm();\n  };\n\n  const { values, errors, touched, handleBlur, handleChange, handleSubmit } =\n    useFormik({\n      initialValues: {\n        name: '',\n        email: '',\n        password: '',\n      },\n      validationSchema: registerSchema,\n      onSubmit,\n    });\n\n  return (\n    <Background>\n      <FormWrap>\n        <AuthList>\n          <li>\n            <AuthLink to={`/auth/register`}>{t('authForms.regTitle')}</AuthLink>\n          </li>\n          <li>\n            <AuthLink to={`/auth/login`}>{t('authForms.loginTitle')}</AuthLink>\n          </li>\n        </AuthList>\n\n        <FormUi onSubmit={handleSubmit} autoComplete=\"off\">\n          <label>\n            <Input\n              value={values.name}\n              onBlur={handleBlur}\n              onChange={handleChange}\n              $error={errors.name && touched.name}\n              name=\"name\"\n              placeholder={t('authForms.name')}\n            />\n            {errors.name && touched.name && (\n              <ErrorPara>{errors.name}</ErrorPara>\n            )}\n          </label>\n          <label>\n            <Input\n              value={values.email}\n              onBlur={handleBlur}\n              onChange={handleChange}\n              $error={errors.email && touched.email}\n              name=\"email\"\n              placeholder={t('authForms.email')}\n              type=\"email\"\n            />\n            {errors.email && touched.email && (\n              <ErrorPara>{errors.email}</ErrorPara>\n            )}\n          </label>\n\n          <label>\n            <PassInputWrap>\n              <Input\n                value={values.password}\n                onChange={e => {\n                  setPwd(e.target.value);\n                  handleChange(e);\n                }}\n                onBlur={handleBlur}\n                $error={errors.password && touched.password}\n                name=\"password\"\n                placeholder={t('authForms.password')}\n                type={visible ? 'text' : 'password'}\n              />\n              <HideBtn\n                type=\"button\"\n                onClick={() => {\n                  setVisible(!visible);\n                }}\n              >\n                {visible ? (\n                  <Eye\n                    width={20}\n                    height={20}\n                    fillColor={'none'}\n                    strokeColor={`#fff`}\n                  />\n                ) : (\n                  <EyeCrossed\n                    width={20}\n                    height={20}\n                    strokeColor={`#fff`}\n                    fillColor={'none'}\n                  />\n                )}\n              </HideBtn>\n            </PassInputWrap>\n            {errors.password && touched.password && (\n              <ErrorPara>{errors.password}</ErrorPara>\n            )}\n          </label>\n\n          {pwd && (\n            <PasswordStrengthBar\n              password={pwd}\n              minLength={6}\n              barColors={PROGRESS_BAR_COLORS}\n            />\n          )}\n\n          <SubmitBtn type=\"submit\" disabled={isLoading}>\n            {isLoading ? (\n              <SmallLoader width=\"25\" height=\"25\" />\n            ) : (\n              t('authForms.regButton')\n            )}\n          </SubmitBtn>\n        </FormUi>\n      </FormWrap>\n    </Background>\n  );\n};\n\nexport default RegisterForm;\n","import LoginForm from 'components/Auth/LoginForm';\nimport RegisterForm from 'components/Auth/RegisterForm';\nimport { useParams } from 'react-router-dom';\n\nconst AuthPage = () => {\n  const { id } = useParams();\n\n  return <>{id === 'register' ? <RegisterForm /> : <LoginForm />}</>;\n};\n\nexport default AuthPage;\n"],"names":["yup","shape","name","min","required","email","matches","password","max","Background","styled","_templateObject","_taggedTemplateLiteral","FormWrap","_templateObject2","AuthList","_templateObject3","AuthLink","NavLink","_templateObject4","FormUi","_templateObject5","Input","_templateObject6","_ref","$error","PassInputWrap","_templateObject7","HideBtn","_templateObject8","SubmitBtn","_templateObject9","ErrorPara","_templateObject10","_useState","useState","_useState2","_slicedToArray","visible","setVisible","dispatch","useDispatch","isLoading","useAuth","t","useTranslation","onSubmit","_asyncToGenerator","_regeneratorRuntime","_callee","values","actions","formData","_context","prev","next","loginSchema","sent","abrupt","logIn","_objectSpread","Promise","res","setTimeout","resetForm","stop","_x","_x2","apply","arguments","_useFormik","useFormik","initialValues","validationSchema","errors","touched","isSubmitting","handleBlur","handleChange","handleSubmit","_jsx","children","_jsxs","to","autoComplete","value","onChange","onBlur","placeholder","type","onClick","Eye","width","height","fillColor","strokeColor","EyeCrossed","disabled","SmallLoader","_useState3","_useState4","pwd","setPwd","registerSchema","register","e","target","PasswordStrengthBar","minLength","barColors","PROGRESS_BAR_COLORS","id","useParams","_Fragment","RegisterForm","LoginForm"],"sourceRoot":""}