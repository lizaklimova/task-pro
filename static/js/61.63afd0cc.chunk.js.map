{"version":3,"file":"static/js/61.63afd0cc.chunk.js","mappings":"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","sources":["components/App/App.styled.jsx","components/Modals/CardModal/CardModal.styled.jsx","components/Dashboard/Dashboard.styled.jsx","components/Dashboard/Column/Column.styled.jsx","components/Icons/Status.jsx","components/Icons/Bell.jsx","components/Dashboard/TaskCard/TaskCard.styled.jsx","components/Dashboard/TaskCard/TaskCard.jsx","components/Modals/ColumnModal/ColumnModal.jsx","components/Dashboard/Column/Column.jsx","components/Dashboard/Dashboard.jsx","components/Dashboard/BoardHeader/BoardHeader.styled.jsx","components/Icons/Filter.jsx","components/Dashboard/BoardHeader/BoardHeader.jsx","pages/ScreensPage.jsx"],"sourcesContent":["import { styled } from 'styled-components';\n\nexport const MainContainer = styled.div`\n  height: calc(100vh - 60px);\n  width: calc(100vw - 12px);\n  padding: 14px 20px 24px 20px;\n\n  /* margin: 0 auto; */\n\n  @media screen and (min-width: 375px) {\n    /* max-width: 375px; */\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 26px 32px 52px 32px;\n    height: calc(100vh - 68px);\n    /* max-width: 736px; */\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: calc(100vw - 260px - 12px);\n    padding: 10px 24px 36px 24px;\n    /* max-width: 1148px; */\n  }\n`;\n","import { styled, css } from 'styled-components';\n\nconst inputsCommonStyles = css`\n  border: 1px solid var(--accent-color);\n  border-radius: 8px;\n  padding: 14px 18px;\n  color: var(--text-color);\n  background-color: transparent;\n  box-shadow: 0 4px 16px 0 rgba(22, 22, 22, 0.08);\n  opacity: 0.4;\n\n  &:focus {\n    opacity: 1;\n    outline: none;\n  }\n`;\n\nexport const CardModalContent = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  p {\n    font-weight: 500;\n    font-size: 18px;\n    margin-bottom: 24px;\n  }\n\n  .react-datepicker__input-container {\n    input[type='text'] {\n      border: none !important;\n      padding: 0px !important;\n      margin-bottom: 0;\n      opacity: 1;\n      color: var(--accent-color);\n      box-shadow: none;\n    }\n  }\n\n  .react-datepicker-wrapper {\n    margin-top: 4px;\n  }\n\n  .react-datepicker-popper {\n    left: 50% !important;\n    transform: translate(-50%, 20%) !important;\n  }\n\n  .react-datepicker * {\n    background-color: var(--background-color);\n    color: var(--text-color);\n    border-color: var(--accent-color);\n  }\n\n  .react-datepicker__navigation-icon::before {\n    border-color: var(--text-color);\n    transition: border-color var(--easedTransition);\n  }\n\n  .react-datepicker__navigation:hover\n    .react-datepicker__navigation-icon::before {\n    border-color: var(--accent-color);\n  }\n\n  .react-datepicker__day:hover:not(.react-datepicker__day--disabled) {\n    outline: 1px solid var(--text-color);\n    background-color: transparent;\n    border-radius: 50%;\n  }\n\n  .react-datepicker__day--selected {\n    background-color: var(--accent-color) !important;\n    color: var(--modal-background);\n    border-radius: 50%;\n  }\n\n  .react-datepicker__day--selected:hover {\n    outline: 1px solid var(--text-color);\n    background-color: var(--accent-color);\n    border-radius: 50%;\n  }\n\n  .react-datepicker__day--disabled {\n    cursor: not-allowed;\n  }\n`;\n\nexport const CardForm = styled.form`\n  display: flex;\n  flex-direction: column;\n\n  input[type='text'] {\n    ${inputsCommonStyles}\n    margin-bottom: 14px;\n  }\n\n  textarea {\n    ${inputsCommonStyles}\n    line-height: 1.29;\n    margin-bottom: 24px;\n    resize: none;\n  }\n\n  label {\n    font-size: 12px;\n    letter-spacing: -0.02em;\n    color: var(--lightgrey-text-color);\n    display: flex;\n    flex-direction: column;\n  }\n`;\n\nexport const LabelRadioList = styled.ul`\n  display: flex;\n  gap: 8px;\n  margin-top: 4px;\n\n  li {\n    position: relative;\n  }\n`;\n\nexport const RadioBtn = styled.input`\n  position: absolute;\n  cursor: pointer;\n  z-index: 3;\n  top: 0;\n  opacity: 0;\n\n  &:checked + label::before {\n    outline: ${({ $color }) => `1px solid var(--priority-${$color})`};\n    border: 2px solid var(--modal-background);\n  }\n`;\n\nexport const LabelRadioLabel = styled.label`\n  margin-bottom: 14px;\n\n  &::before {\n    content: '';\n    width: 14px;\n    height: 14px;\n    border-radius: 50%;\n    background-color: ${({ $color }) => `var(--priority-${$color})`};\n    cursor: pointer;\n    transition: outline 50ms linear;\n  }\n`;\n\nexport const CalendarContainer = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 3px;\n\n  button {\n    display: flex;\n    align-items: center;\n    padding: 0;\n    padding-top: 5px;\n    background-color: transparent;\n\n    svg {\n      fill: var(--accent-color);\n    }\n  }\n`;\n\nexport const SubmitBtn = styled.button`\n  font-weight: 500;\n  border-radius: 8px;\n  padding: 10px;\n  background-color: var(--accent-color);\n  color: var(--btn-icon-bg);\n  margin-top: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  transition: var(--easedTransition);\n\n  @media screen and (min-width: 1440px) {\n    &:hover,\n    &:focus {\n      opacity: 0.7;\n    }\n  }\n\n  span {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: 6px;\n    padding: 7px;\n    background-color: var(--btn-icon-bg);\n\n    svg path {\n      stroke: var(--btn-icon-color);\n    }\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Wrap = styled.div`\n  display: flex;\n  height: 100%;\n  padding-top: 39px;\n  padding-bottom: 24px;\n\n  overflow-x: auto;\n  scroll-behavior: smooth;\n\n  &::-webkit-scrollbar-thumb {\n    border-radius: 12px;\n  }\n\n  &::-webkit-scrollbar {\n    height: 12px;\n  }\n\n  &::-webkit-scrollbar-track {\n    border-radius: 12px;\n  }\n\n  @media screen and (min-width: 768px) {\n    padding-top: 26px;\n    padding-bottom: 52px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding-top: 10px;\n    padding-bottom: 36px;\n  }\n`;\n\nexport const ColumnsList = styled.ul`\n  display: flex;\n  gap: 34px;\n  margin-right: 34px;\n`;\n\nexport const IconWrap = styled.span`\n  margin-right: 8px;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  width: 28px;\n  height: 28px;\n  border-radius: 6px;\n  background-color: var(--plus-icon-bg);\n  transition: all var(--easedTransition);\n\n  & svg {\n    stroke: var(--card-bg);\n    transition: all var(--easedTransition);\n  }\n`;\n\nexport const AddButton = styled.button`\n  min-width: 335px;\n  height: 56px;\n  border: none;\n  border-radius: 8px;\n  background-color: var(--card-bg);\n  color: inherit;\n  font-weight: 500;\n\n  transition: all var(--easedTransition);\n\n  &:hover {\n    background-color: var(--plus-btn-hover);\n\n    ${IconWrap} {\n      background-color: var(--card-bg);\n      & svg {\n        stroke: var(--plus-icon-bg);\n      }\n    }\n  }\n\n  /* @media screen and (min-width: 375px) {\n    width: 335px;\n  } */\n`;\n","import styled from 'styled-components';\n\nexport const ColumnWrap = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n\n  @media screen and (min-width: 375px) {\n    width: 335px;\n  }\n`;\n\nexport const ColumnTitleWrap = styled.div`\n  width: 100%;\n  min-height: 56px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0 20px;\n  margin-bottom: 14px;\n  border-radius: 8px;\n  background-color: var(--card-bg);\n  font-weight: 500;\n\n  & h3 {\n    font-size: 14px;\n    font-weight: 500;\n  }\n`;\n\nexport const ButtonsList = styled.ul`\n  display: flex;\n`;\n\nexport const ColumnButton = styled.button`\n  background-color: transparent;\n  padding: 4px;\n\n  & svg {\n    stroke: var(--icon-stroke-color);\n    opacity: 50%;\n    transition: all var(--easedTransition);\n  }\n  & svg:hover {\n    stroke: var(--accent-color);\n    opacity: 100%;\n    filter: drop-shadow(1px 1px 12px var(--accent-color));\n  }\n`;\n\nexport const IconWrap = styled.span`\n  margin-right: 8px;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  width: 28px;\n  height: 28px;\n  border-radius: 6px;\n  background-color: var(--btn-icon-bg);\n  transition: all var(--easedTransition);\n\n  & svg {\n    stroke: var(--btn-icon-color);\n    transition: all var(--easedTransition);\n  }\n`;\n\nexport const AddButton = styled.button`\n  margin-top: auto;\n  min-width: 100%;\n  min-height: 56px;\n  border: none;\n  border-radius: 8px;\n  background-color: var(--accent-color);\n  color: var(--btn-icon-bg);\n  font-weight: 500;\n  transition: all var(--easedTransition);\n\n  &:hover {\n    background-color: var(--accent-btn-hover);\n  }\n`;\n\nexport const CardsList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  padding-right: 8px;\n  margin-bottom: 14px;\n  height: calc(100vh - 144px - 130px);\n  overflow-y: scroll;\n  scroll-behavior: smooth;\n\n  &::-webkit-scrollbar-thumb {\n    border-radius: 12px;\n  }\n\n  &::-webkit-scrollbar {\n    width: 8px;\n  }\n\n  &::-webkit-scrollbar-track {\n    border-radius: 12px;\n  }\n\n  @media screen and (min-width: 768px) {\n    max-height: calc(100vh - 150px - 166px);\n  }\n\n  @media screen and (min-width: 1440px) {\n    max-height: calc(100vh - 118px - 106px);\n  }\n`;\n","const Status = ({ width, height, fillColor, strokeColor }) => {\n  return (\n    <svg\n      width={width || null}\n      height={height || null}\n      viewBox=\"0 0 16 17\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M2.22559 5.16665C3.37828 3.17398 5.53276 1.83331 8.00037 1.83331C11.6823 1.83331 14.667 4.81808 14.667 8.49998C14.667 12.1819 11.6823 15.1666 8.00037 15.1666C5.53276 15.1666 3.37828 13.826 2.22559 11.8333\"\n        stroke={strokeColor || null}\n        strokeWidth=\"1.3\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        d=\"M8 11.1666L10.6667 8.49998L8 5.83331\"\n        stroke={strokeColor || null}\n        strokeWidth=\"1.3\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        d=\"M1.33301 8.5L10.6663 8.5\"\n        stroke={strokeColor || null}\n        strokeWidth=\"1.3\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </svg>\n  );\n};\n\nexport default Status;\n","const Bell = ({ width, height, fillColor, strokeColor }) => {\n  return (\n    <svg\n      width={width || null}\n      height={height || null}\n      viewBox=\"0 0 14 16\"\n      fill=\"none\"\n      stroke={strokeColor || null}\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M5.23597 14C5.70606 14.4149 6.32355 14.6667 6.99985 14.6667C7.67615 14.6667 8.29365 14.4149 8.76373 14M10.9999 5.33337C10.9999 4.27251 10.5784 3.25509 9.82828 2.50495C9.07813 1.7548 8.06072 1.33337 6.99985 1.33337C5.93898 1.33337 4.92157 1.7548 4.17142 2.50495C3.42128 3.25509 2.99985 4.27251 2.99985 5.33337C2.99985 7.3935 2.48016 8.80401 1.89963 9.73698C1.40993 10.524 1.16509 10.9174 1.17407 11.0272C1.18401 11.1488 1.20976 11.1951 1.3077 11.2678C1.39616 11.3334 1.79491 11.3334 2.59242 11.3334H11.4073C12.2048 11.3334 12.6035 11.3334 12.692 11.2678C12.7899 11.1951 12.8157 11.1488 12.8256 11.0272C12.8346 10.9174 12.5898 10.524 12.1001 9.73698C11.5195 8.80401 10.9999 7.3935 10.9999 5.33337Z\"\n        strokeWidth=\"1.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </svg>\n  );\n};\n\nexport default Bell;\n","import { styled } from 'styled-components';\n\nexport const CardItem = styled.div`\n  width: 334px;\n  border-radius: 10px;\n  padding: 24px 14px;\n  background-color: var(--card-bg);\n  list-style-type: none;\n  border-left: 7px solid #8fa1d0;\n\n  & > div {\n    display: flex;\n    align-items: flex-ends;\n    justify-content: space-between;\n  }\n`;\n\nexport const CardTitle = styled.h4`\n  margin-bottom: 8px;\n  color: var(--text-color);\n`;\n\nexport const CardDescr = styled.p`\n  width: 290px;\n  font-size: 12px;\n  line-height: 1.33333;\n  color: var(--text-color);\n  opacity: 0.7;\n  margin-bottom: 14px;\n  cursor: pointer;\n  text-wrap: wrap;\n`;\n\nexport const InfoWrap = styled.div`\n  display: flex;\n  gap: 14px;\n\n  div {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n  }\n\n  h5 {\n    font-weight: 400;\n    font-size: 8px;\n    color: var(--text-color);\n    opacity: 0.5;\n    margin-bottom: 4px;\n  }\n\n  span {\n    font-size: 10px;\n    color: var(--text-color);\n  }\n\n  p {\n    font-size: 10px;\n    color: var(--text-color);\n    display: flex;\n    gap: 4px;\n\n    &::before {\n      content: '';\n      display: block;\n      width: 12px;\n      height: 12px;\n      border-radius: 50%;\n      background-color: #8fa1d0;\n    }\n  }\n`;\n\nexport const BtnsList = styled.ul`\n  display: flex;\n  align-items: flex-end;\n`;\n\nexport const CardActionButton = styled.button`\n  background-color: transparent;\n\n  svg,\n  path {\n    stroke: var(--text-color);\n    transition: stroke 150ms linear;\n  }\n\n  &:hover svg,\n  &:hover path {\n    stroke: #8fa1d0;\n  }\n`;\n","import { useState } from 'react';\nimport Status from 'components/Icons/Status';\nimport Pencil from 'components/Icons/Pencil';\nimport Trash from 'components/Icons/Trash';\nimport Bell from 'components/Icons/Bell';\nimport {\n  CardItem,\n  CardTitle,\n  CardDescr,\n  InfoWrap,\n  BtnsList,\n  CardActionButton,\n} from './TaskCard.styled';\n\nconst TaskCard = ({ card }) => {\n  const [showFullText, setShowFullText] = useState(false);\n  const text =\n    'Create a visually stunning and eye-catching watch dial design that embodies our brands essence of sleek aesthetics and modern elegance. Your design should be unique, innovative, and reflective of the latest trends in watch design.';\n\n  const handleClick = () => {\n    setShowFullText(!showFullText);\n  };\n\n  return (\n    <CardItem>\n      <CardTitle>The Watch Spot Design</CardTitle>\n      <CardDescr onClick={handleClick}>\n        {showFullText ? text : `${text.slice(0, 86)}...`}\n      </CardDescr>\n      <hr />\n\n      <div>\n        <InfoWrap>\n          <div>\n            <h5>Priority</h5>\n            <p>Low</p>\n          </div>\n\n          <div>\n            <h5>Deadline</h5>\n            <span>12/05/2023</span>\n          </div>\n        </InfoWrap>\n\n        <BtnsList>\n          <li>\n            <CardActionButton type=\"button\">\n              <Bell\n                width={16}\n                height={16}\n                strokeColor={'rgba(16, 16, 16, 0.5)'}\n              />\n            </CardActionButton>\n          </li>\n          <li>\n            <CardActionButton type=\"button\">\n              <Status\n                width={16}\n                height={16}\n                strokeColor={'rgba(16, 16, 16, 0.5)'}\n              />\n            </CardActionButton>\n          </li>\n          <li>\n            <CardActionButton type=\"button\">\n              <Pencil\n                width={16}\n                height={16}\n                strokeColor={'rgba(16, 16, 16, 0.5)'}\n              />\n            </CardActionButton>\n          </li>\n          <li>\n            <CardActionButton type=\"button\">\n              <Trash\n                width={16}\n                height={16}\n                strokeColor={'rgba(16, 16, 16, 0.5)'}\n              />\n            </CardActionButton>\n          </li>\n        </BtnsList>\n      </div>\n    </CardItem>\n  );\n};\n\nexport default TaskCard;\n","import { useTranslation } from 'react-i18next';\nimport ModalWrapper from 'components/Modals/ModalWrapper';\nimport Plus from 'components/Icons/Plus';\nimport {\n  CardForm,\n  CardModalContent,\n  SubmitBtn,\n} from '../CardModal/CardModal.styled';\n\nconst ColumnModal = ({ variant, closeModal }) => {\n  const { t } = useTranslation();\n\n  return (\n    <ModalWrapper width={350} onClose={closeModal}>\n      <CardModalContent>\n        <p>\n          {variant === 'add'\n            ? t('columns.modals.addTitle')\n            : t('columns.modals.editTitle')}\n        </p>\n\n        <CardForm>\n          <input\n            type=\"text\"\n            name=\"title\"\n            placeholder={t('columns.modals.input')}\n            defaultValue={variant === 'add' ? '' : ''}\n          />\n\n          <SubmitBtn type=\"submit\">\n            <span>\n              <Plus width={14} height={14} />\n            </span>\n            {variant === 'add'\n              ? t('columns.modals.addTitle')\n              : t('columns.modals.editTitle')}\n          </SubmitBtn>\n        </CardForm>\n      </CardModalContent>\n    </ModalWrapper>\n  );\n};\n\nexport default ColumnModal;\n","import Pencil from 'components/Icons/Pencil';\nimport Trash from 'components/Icons/Trash';\nimport {\n  AddButton,\n  ButtonsList,\n  CardsList,\n  ColumnButton,\n  ColumnTitleWrap,\n  ColumnWrap,\n  IconWrap,\n} from './Column.styled';\nimport Plus from 'components/Icons/Plus';\nimport { useTranslation } from 'react-i18next';\nimport TaskCard from '../TaskCard';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { useState } from 'react';\nimport ColumnModal from 'components/Modals/ColumnModal';\n\nconst Column = ({ column }) => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <ColumnWrap>\n        <ColumnTitleWrap>\n          <h3>{column.title}</h3>\n          <ButtonsList>\n            <li>\n              <ColumnButton\n                type=\"button\"\n                aria-label=\"Edit column title\"\n                onClick={() => setIsModalOpen(true)}\n              >\n                <Pencil width={16} height={16} />\n              </ColumnButton>\n            </li>\n            <li>\n              <ColumnButton type=\"button\" aria-label=\"Delete column\">\n                <Trash width={16} height={16} />\n              </ColumnButton>\n            </li>\n          </ButtonsList>\n        </ColumnTitleWrap>\n\n        <CardsList>\n          {column.cards.map(card => (\n            <li key={nanoid()}>\n              <TaskCard card={card} />\n            </li>\n          ))}\n        </CardsList>\n\n        <AddButton type=\"button\">\n          <IconWrap>\n            <Plus width={14} height={14} />\n          </IconWrap>\n          {t('cards.addButton')}\n        </AddButton>\n      </ColumnWrap>\n\n      {isModalOpen && (\n        <ColumnModal variant=\"edit\" closeModal={() => setIsModalOpen(false)} />\n      )}\n    </>\n  );\n};\n\nexport default Column;\n","import { useTranslation } from 'react-i18next';\nimport { AddButton, ColumnsList, IconWrap, Wrap } from './Dashboard.styled';\nimport Plus from 'components/Icons/Plus';\nimport Column from './Column';\nimport { nanoid } from '@reduxjs/toolkit';\nimport ColumnModal from 'components/Modals/ColumnModal';\nimport { useState } from 'react';\n\nconst Dashboard = ({ board }) => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const { t } = useTranslation();\n\n  return (\n    <Wrap>\n      {board.columns.length > 0 && (\n        <ColumnsList>\n          {board.columns.map(column => (\n            <li key={nanoid()}>\n              <Column column={column} />\n            </li>\n          ))}\n        </ColumnsList>\n      )}\n      <AddButton type=\"button\" onClick={() => setIsModalOpen(true)}>\n        <IconWrap>\n          <Plus width={14} height={14} />\n        </IconWrap>\n        {t('columns.addButton')}\n      </AddButton>\n\n      {isModalOpen && (\n        <ColumnModal variant=\"add\" closeModal={() => setIsModalOpen(false)} />\n      )}\n    </Wrap>\n  );\n};\n\nexport default Dashboard;\n","import styled from 'styled-components';\n\nexport const HeaderWrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  & h2 {\n    font-weight: 500;\n    font-size: 14px;\n\n    @media screen and (min-width: 768px) {\n      font-size: 18px;\n    }\n  }\n`;\n\nexport const FilterButton = styled.button`\n  display: flex;\n  gap: 8px;\n  align-items: center;\n  background-color: transparent;\n  font-weight: 500;\n  font-size: 14px;\n  color: var(--text-color);\n  transition: all var(--easedTransition);\n\n  & svg {\n    stroke: var(--text-color);\n    fill: transparent;\n    transition: all var(--easedTransition);\n  }\n\n  &:hover {\n    color: var(--accent-btn-hover);\n    & svg {\n      stroke: var(--accent-btn-hover);\n    }\n  }\n`;\n","const Filter = ({ width, height, fillColor, strokeColor }) => {\n  return (\n    <svg\n      width={width}\n      height={height}\n      viewBox=\"0 0 16 16\"\n      fill={fillColor || null}\n      stroke={strokeColor || null}\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M14.6668 2H1.3335L6.66683 8.30667V12.6667L9.3335 14V8.30667L14.6668 2Z\"\n        strokeWidth=\"1.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </svg>\n  );\n};\n\nexport default Filter;\n","import { useTranslation } from 'react-i18next';\nimport { FilterButton, HeaderWrap } from './BoardHeader.styled';\n\nimport Filter from 'components/Icons/Filter';\n\nconst BoardHeader = ({ title }) => {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <HeaderWrap>\n        <h2>{title}</h2>\n        <FilterButton type=\"button\">\n          <Filter width={14} height={14} />\n          {t('boards.filterButton')}\n        </FilterButton>\n      </HeaderWrap>\n    </>\n  );\n};\n\nexport default BoardHeader;\n","import { MainContainer } from 'components/App/App.styled';\nimport Dashboard from 'components/Dashboard';\nimport BoardHeader from 'components/Dashboard/BoardHeader';\n// import { useDispatch } from 'react-redux';\n// import { useParams } from 'react-router-dom';\n\nconst ScreensPage = () => {\n  //when Denis creates it:\n  // const { boardId } = useParams();\n  // const dispatch = useDispatch();\n  // const board = useSelector(selectBoard);\n  // const error = useSelector(selectError);\n\n  // useEffect(() => {\n  //   dispatch(fetchBoard(boardId));\n  // }, [dispatch]);\n\n  const board = {\n    name: 'Not empty',\n    columns: [\n      {\n        title: 'TO DO',\n        cards: [\n          {\n            title: 'Calculate KAM teams plan',\n          },\n          {\n            title: 'Calculate KAM clients plan',\n          },\n          {\n            title: 'Calculate LR teams plan',\n          },\n          {\n            title: 'Prepare file for LR clients calculation',\n          },\n          {\n            title: 'Prepare file for LR clients calculation',\n          },\n          {\n            title: 'Prepare file for LR clients calculation',\n          },\n          {\n            title: 'Prepare file for LR clients calculation',\n          },\n        ],\n      },\n      {\n        title: 'Important',\n        cards: [\n          {\n            title: 'Eat something',\n          },\n        ],\n      },\n      {\n        title: 'Bla',\n        cards: [\n          {\n            title: 'Eat something',\n          },\n        ],\n      },\n      {\n        title: 'Bla',\n        cards: [\n          {\n            title: 'Eat something',\n          },\n        ],\n      },\n    ],\n  };\n\n  // const board = {\n  //   name: 'Empty',\n  //   columns: [],\n  // };\n\n  return (\n    <MainContainer>\n      <BoardHeader title={board.name} />\n      <Dashboard board={board} />\n    </MainContainer>\n  );\n};\n\nexport default ScreensPage;\n"],"names":["MainContainer","styled","_templateObject","_taggedTemplateLiteral","inputsCommonStyles","css","CardModalContent","_templateObject2","CardForm","_templateObject3","LabelRadioList","_templateObject4","RadioBtn","_templateObject5","_ref","$color","concat","LabelRadioLabel","_templateObject6","_ref2","CalendarContainer","_templateObject7","SubmitBtn","_templateObject8","Wrap","ColumnsList","IconWrap","AddButton","ColumnWrap","ColumnTitleWrap","ButtonsList","ColumnButton","CardsList","width","height","strokeColor","fillColor","_jsxs","viewBox","fill","xmlns","children","_jsx","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","CardItem","CardTitle","CardDescr","InfoWrap","BtnsList","CardActionButton","card","_useState","useState","_useState2","_slicedToArray","showFullText","setShowFullText","text","onClick","slice","type","Bell","Status","Pencil","Trash","variant","closeModal","t","useTranslation","ModalWrapper","onClose","name","placeholder","defaultValue","Plus","column","isModalOpen","setIsModalOpen","_Fragment","title","cards","map","TaskCard","nanoid","ColumnModal","board","columns","length","Column","HeaderWrap","FilterButton","Filter","BoardHeader","Dashboard"],"sourceRoot":""}